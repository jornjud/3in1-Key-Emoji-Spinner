{"mappings":"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GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAC1F,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAM,IAAM,IAAM,GAAM,GAC1F,IAAM,IAAM,EAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAC1F,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,EAC1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAC1F,IAAM,GAAM,IAAM,IAAM,EAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,EAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAC1F,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAC1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAC1F,GAAM,EAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAC1F,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,G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MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,KAAQ,MAAQ,IAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,KAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxD,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACzD,AAEG,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K,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,KAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,IAAI,eAAK,eAAM,IAAI,IAAI,KAAK,eAAK,eAAK,eAAK,eAAK,KAAK,eAAK,IAAI,eAAK,KAAK,eAAK,eAAK,IAAI,eAAK,eAAK,KAAK,KAAK,IAAK,eAAK,eAAK,eAAK,eAAK,IAAI,KAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAA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","sources":["<anon>","script.js","node_modules/promptpay-qr/index.js","node_modules/crc/index.js","node_modules/crc/crc1.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/crc/create_buffer.js","node_modules/crc/define_crc.js","node_modules/crc/crc8.js","node_modules/crc/crc81wire.js","node_modules/crc/crc16.js","node_modules/crc/crc16ccitt.js","node_modules/crc/crc16modbus.js","node_modules/crc/crc16xmodem.js","node_modules/crc/crc16kermit.js","node_modules/crc/crc24.js","node_modules/crc/crc32.js","node_modules/crc/crcjam.js","node_modules/qrcode/lib/browser.js","node_modules/qrcode/lib/can-promise.js","node_modules/qrcode/lib/core/qrcode.js","node_modules/qrcode/lib/core/utils.js","node_modules/qrcode/lib/core/error-correction-level.js","node_modules/qrcode/lib/core/bit-buffer.js","node_modules/qrcode/lib/core/bit-matrix.js","node_modules/qrcode/lib/core/alignment-pattern.js","node_modules/qrcode/lib/core/finder-pattern.js","node_modules/qrcode/lib/core/mask-pattern.js","node_modules/qrcode/lib/core/error-correction-code.js","node_modules/qrcode/lib/core/reed-solomon-encoder.js","node_modules/qrcode/lib/core/polynomial.js","node_modules/qrcode/lib/core/galois-field.js","node_modules/qrcode/lib/core/version.js","node_modules/qrcode/lib/core/mode.js","node_modules/qrcode/lib/core/version-check.js","node_modules/qrcode/lib/core/regex.js","node_modules/qrcode/lib/core/format-info.js","node_modules/qrcode/lib/core/segments.js","node_modules/qrcode/lib/core/numeric-data.js","node_modules/qrcode/lib/core/alphanumeric-data.js","node_modules/qrcode/lib/core/byte-data.js","node_modules/qrcode/lib/core/kanji-data.js","node_modules/dijkstrajs/dijkstra.js","node_modules/qrcode/lib/renderer/canvas.js","node_modules/qrcode/lib/renderer/utils.js","node_modules/qrcode/lib/renderer/svg-tag.js","node_modules/@parcel/runtime-js/lib/runtime-b0227c7b77558e44.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n/*******************************************************\r\n  script.js - Main Application Logic\r\n  - Handles UI interactions, encoding/decoding, and modals.\r\n********************************************************/ // เพิ่มบนสุดเลย\nvar $c2550c9a8f5b81d0$exports = {};\n/*!\n * promptpay-qr\n * JavaScript library to generate PromptPay QR code\n * <https://github.com/dtinth/promptpay-qr>\n *\n * Refs:\n * - https://www.blognone.com/node/95133\n * - https://www.emvco.com/emv-technologies/qrcodes/\n *\n * @license MIT\n */ /*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $51861dfc7ca9d588$export$a143d493d941bafc;\nvar $51861dfc7ca9d588$export$e4cf37d7f6fb9e0a;\nvar $51861dfc7ca9d588$export$f99ded8fe4b79145;\nvar $51861dfc7ca9d588$export$599f31c3813fae4d;\n'use strict';\nvar $eeb0961446aae8e3$export$a48f0734ac7c2329;\nvar $eeb0961446aae8e3$export$d622b2ad8d90c771;\nvar $eeb0961446aae8e3$export$6100ba28696e12de;\n'use strict';\n$eeb0961446aae8e3$export$a48f0734ac7c2329 = $eeb0961446aae8e3$var$byteLength;\n$eeb0961446aae8e3$export$d622b2ad8d90c771 = $eeb0961446aae8e3$var$toByteArray;\n$eeb0961446aae8e3$export$6100ba28696e12de = $eeb0961446aae8e3$var$fromByteArray;\nvar $eeb0961446aae8e3$var$lookup = [];\nvar $eeb0961446aae8e3$var$revLookup = [];\nvar $eeb0961446aae8e3$var$Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar $eeb0961446aae8e3$var$code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor(var $eeb0961446aae8e3$var$i = 0, $eeb0961446aae8e3$var$len = $eeb0961446aae8e3$var$code.length; $eeb0961446aae8e3$var$i < $eeb0961446aae8e3$var$len; ++$eeb0961446aae8e3$var$i){\n    $eeb0961446aae8e3$var$lookup[$eeb0961446aae8e3$var$i] = $eeb0961446aae8e3$var$code[$eeb0961446aae8e3$var$i];\n    $eeb0961446aae8e3$var$revLookup[$eeb0961446aae8e3$var$code.charCodeAt($eeb0961446aae8e3$var$i)] = $eeb0961446aae8e3$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$eeb0961446aae8e3$var$revLookup['-'.charCodeAt(0)] = 62;\n$eeb0961446aae8e3$var$revLookup['_'.charCodeAt(0)] = 63;\nfunction $eeb0961446aae8e3$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf('=');\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $eeb0961446aae8e3$var$byteLength(b64) {\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$toByteArray(b64) {\n    var tmp;\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $eeb0961446aae8e3$var$Arr($eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 18 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 2 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 10 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $eeb0961446aae8e3$var$tripletToBase64(num) {\n    return $eeb0961446aae8e3$var$lookup[num >> 18 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 12 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 6 & 0x3F] + $eeb0961446aae8e3$var$lookup[num & 0x3F];\n}\nfunction $eeb0961446aae8e3$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($eeb0961446aae8e3$var$tripletToBase64(tmp));\n    }\n    return output.join('');\n}\nfunction $eeb0961446aae8e3$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($eeb0961446aae8e3$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 2] + $eeb0961446aae8e3$var$lookup[tmp << 4 & 0x3F] + '==');\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 10] + $eeb0961446aae8e3$var$lookup[tmp >> 4 & 0x3F] + $eeb0961446aae8e3$var$lookup[tmp << 2 & 0x3F] + '=');\n    }\n    return parts.join('');\n}\n\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $7221566bd4d49f44$export$aafa59e2e03f2942;\nvar $7221566bd4d49f44$export$68d8715fc104d294;\n$7221566bd4d49f44$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$7221566bd4d49f44$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n\nvar $51861dfc7ca9d588$var$customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n : null;\n$51861dfc7ca9d588$export$a143d493d941bafc = $51861dfc7ca9d588$var$Buffer;\n$51861dfc7ca9d588$export$e4cf37d7f6fb9e0a = $51861dfc7ca9d588$var$SlowBuffer;\n$51861dfc7ca9d588$export$f99ded8fe4b79145 = 50;\nvar $51861dfc7ca9d588$var$K_MAX_LENGTH = 0x7fffffff;\n$51861dfc7ca9d588$export$599f31c3813fae4d = $51861dfc7ca9d588$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $51861dfc7ca9d588$var$Buffer.TYPED_ARRAY_SUPPORT = $51861dfc7ca9d588$var$typedArraySupport();\nif (!$51861dfc7ca9d588$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $51861dfc7ca9d588$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        var proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($51861dfc7ca9d588$var$Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function() {\n        if (!$51861dfc7ca9d588$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($51861dfc7ca9d588$var$Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function() {\n        if (!$51861dfc7ca9d588$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $51861dfc7ca9d588$var$createBuffer(length) {\n    if (length > $51861dfc7ca9d588$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $51861dfc7ca9d588$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $51861dfc7ca9d588$var$allocUnsafe(arg);\n    }\n    return $51861dfc7ca9d588$var$from(arg, encodingOrOffset, length);\n}\n$51861dfc7ca9d588$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $51861dfc7ca9d588$var$from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') return $51861dfc7ca9d588$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $51861dfc7ca9d588$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($51861dfc7ca9d588$var$isInstance(value, ArrayBuffer) || value && $51861dfc7ca9d588$var$isInstance(value.buffer, ArrayBuffer)) return $51861dfc7ca9d588$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== 'undefined' && ($51861dfc7ca9d588$var$isInstance(value, SharedArrayBuffer) || value && $51861dfc7ca9d588$var$isInstance(value.buffer, SharedArrayBuffer))) return $51861dfc7ca9d588$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === 'number') throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    var valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $51861dfc7ca9d588$var$Buffer.from(valueOf, encodingOrOffset, length);\n    var b = $51861dfc7ca9d588$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') return $51861dfc7ca9d588$var$Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $51861dfc7ca9d588$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $51861dfc7ca9d588$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($51861dfc7ca9d588$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($51861dfc7ca9d588$var$Buffer, Uint8Array);\nfunction $51861dfc7ca9d588$var$assertSize(size) {\n    if (typeof size !== 'number') throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $51861dfc7ca9d588$var$alloc(size, fill, encoding) {\n    $51861dfc7ca9d588$var$assertSize(size);\n    if (size <= 0) return $51861dfc7ca9d588$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? $51861dfc7ca9d588$var$createBuffer(size).fill(fill, encoding) : $51861dfc7ca9d588$var$createBuffer(size).fill(fill);\n    return $51861dfc7ca9d588$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $51861dfc7ca9d588$var$Buffer.alloc = function(size, fill, encoding) {\n    return $51861dfc7ca9d588$var$alloc(size, fill, encoding);\n};\nfunction $51861dfc7ca9d588$var$allocUnsafe(size) {\n    $51861dfc7ca9d588$var$assertSize(size);\n    return $51861dfc7ca9d588$var$createBuffer(size < 0 ? 0 : $51861dfc7ca9d588$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $51861dfc7ca9d588$var$Buffer.allocUnsafe = function(size) {\n    return $51861dfc7ca9d588$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $51861dfc7ca9d588$var$Buffer.allocUnsafeSlow = function(size) {\n    return $51861dfc7ca9d588$var$allocUnsafe(size);\n};\nfunction $51861dfc7ca9d588$var$fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';\n    if (!$51861dfc7ca9d588$var$Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);\n    var length = $51861dfc7ca9d588$var$byteLength(string, encoding) | 0;\n    var buf = $51861dfc7ca9d588$var$createBuffer(length);\n    var actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : $51861dfc7ca9d588$var$checked(array.length) | 0;\n    var buf = $51861dfc7ca9d588$var$createBuffer(length);\n    for(var i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromArrayView(arrayView) {\n    if ($51861dfc7ca9d588$var$isInstance(arrayView, Uint8Array)) {\n        var copy = new Uint8Array(arrayView);\n        return $51861dfc7ca9d588$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $51861dfc7ca9d588$var$fromArrayLike(arrayView);\n}\nfunction $51861dfc7ca9d588$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    var buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromObject(obj) {\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(obj)) {\n        var len = $51861dfc7ca9d588$var$checked(obj.length) | 0;\n        var buf = $51861dfc7ca9d588$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== 'number' || $51861dfc7ca9d588$var$numberIsNaN(obj.length)) return $51861dfc7ca9d588$var$createBuffer(0);\n        return $51861dfc7ca9d588$var$fromArrayLike(obj);\n    }\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) return $51861dfc7ca9d588$var$fromArrayLike(obj.data);\n}\nfunction $51861dfc7ca9d588$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $51861dfc7ca9d588$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $51861dfc7ca9d588$var$K_MAX_LENGTH.toString(16) + ' bytes');\n    return length | 0;\n}\nfunction $51861dfc7ca9d588$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $51861dfc7ca9d588$var$Buffer.alloc(+length);\n}\n$51861dfc7ca9d588$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $51861dfc7ca9d588$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$51861dfc7ca9d588$var$Buffer.compare = function compare(a, b) {\n    if ($51861dfc7ca9d588$var$isInstance(a, Uint8Array)) a = $51861dfc7ca9d588$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($51861dfc7ca9d588$var$isInstance(b, Uint8Array)) b = $51861dfc7ca9d588$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(a) || !$51861dfc7ca9d588$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n    for(var i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$51861dfc7ca9d588$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return true;\n        default:\n            return false;\n    }\n};\n$51861dfc7ca9d588$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $51861dfc7ca9d588$var$Buffer.alloc(0);\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    var buffer = $51861dfc7ca9d588$var$Buffer.allocUnsafe(length);\n    var pos = 0;\n    for(i = 0; i < list.length; ++i){\n        var buf = list[i];\n        if ($51861dfc7ca9d588$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) $51861dfc7ca9d588$var$Buffer.from(buf).copy(buffer, pos);\n            else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $51861dfc7ca9d588$var$byteLength(string, encoding) {\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $51861dfc7ca9d588$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== 'string') throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    var loweredCase = false;\n    for(;;)switch(encoding){\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n            return len;\n        case 'utf8':\n        case 'utf-8':\n            return $51861dfc7ca9d588$var$utf8ToBytes(string).length;\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return len * 2;\n        case 'hex':\n            return len >>> 1;\n        case 'base64':\n            return $51861dfc7ca9d588$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $51861dfc7ca9d588$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$51861dfc7ca9d588$var$Buffer.byteLength = $51861dfc7ca9d588$var$byteLength;\nfunction $51861dfc7ca9d588$var$slowToString(encoding, start, end) {\n    var loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return '';\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return '';\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return '';\n    if (!encoding) encoding = 'utf8';\n    while(true)switch(encoding){\n        case 'hex':\n            return $51861dfc7ca9d588$var$hexSlice(this, start, end);\n        case 'utf8':\n        case 'utf-8':\n            return $51861dfc7ca9d588$var$utf8Slice(this, start, end);\n        case 'ascii':\n            return $51861dfc7ca9d588$var$asciiSlice(this, start, end);\n        case 'latin1':\n        case 'binary':\n            return $51861dfc7ca9d588$var$latin1Slice(this, start, end);\n        case 'base64':\n            return $51861dfc7ca9d588$var$base64Slice(this, start, end);\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return $51861dfc7ca9d588$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$51861dfc7ca9d588$var$Buffer.prototype._isBuffer = true;\nfunction $51861dfc7ca9d588$var$swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n    if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits');\n    for(var i = 0; i < len; i += 2)$51861dfc7ca9d588$var$swap(this, i, i + 1);\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n    if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits');\n    for(var i = 0; i < len; i += 4){\n        $51861dfc7ca9d588$var$swap(this, i, i + 3);\n        $51861dfc7ca9d588$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n    if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits');\n    for(var i = 0; i < len; i += 8){\n        $51861dfc7ca9d588$var$swap(this, i, i + 7);\n        $51861dfc7ca9d588$var$swap(this, i + 1, i + 6);\n        $51861dfc7ca9d588$var$swap(this, i + 2, i + 5);\n        $51861dfc7ca9d588$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return $51861dfc7ca9d588$var$utf8Slice(this, 0, length);\n    return $51861dfc7ca9d588$var$slowToString.apply(this, arguments);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toLocaleString = $51861dfc7ca9d588$var$Buffer.prototype.toString;\n$51861dfc7ca9d588$var$Buffer.prototype.equals = function equals(b) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return $51861dfc7ca9d588$var$Buffer.compare(this, b) === 0;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = $51861dfc7ca9d588$export$f99ded8fe4b79145;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n};\nif ($51861dfc7ca9d588$var$customInspectSymbol) $51861dfc7ca9d588$var$Buffer.prototype[$51861dfc7ca9d588$var$customInspectSymbol] = $51861dfc7ca9d588$var$Buffer.prototype.inspect;\n$51861dfc7ca9d588$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($51861dfc7ca9d588$var$isInstance(target, Uint8Array)) target = $51861dfc7ca9d588$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError('out of range index');\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n    for(var i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $51861dfc7ca9d588$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($51861dfc7ca9d588$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === 'string') val = $51861dfc7ca9d588$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $51861dfc7ca9d588$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === 'function') {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $51861dfc7ca9d588$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError('val must be string, number or Buffer');\n}\nfunction $51861dfc7ca9d588$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    var i;\n    if (dir) {\n        var foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            var found = true;\n            for(var j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $51861dfc7ca9d588$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $51861dfc7ca9d588$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $51861dfc7ca9d588$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    var strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    for(var i = 0; i < length; ++i){\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($51861dfc7ca9d588$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $51861dfc7ca9d588$var$utf8Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$asciiWrite(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$base64Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$ucs2Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$51861dfc7ca9d588$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = 'utf8';\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError('Attempt to write outside buffer bounds');\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n    for(;;)switch(encoding){\n        case 'hex':\n            return $51861dfc7ca9d588$var$hexWrite(this, string, offset, length);\n        case 'utf8':\n        case 'utf-8':\n            return $51861dfc7ca9d588$var$utf8Write(this, string, offset, length);\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n            return $51861dfc7ca9d588$var$asciiWrite(this, string, offset, length);\n        case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return $51861dfc7ca9d588$var$base64Write(this, string, offset, length);\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return $51861dfc7ca9d588$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $51861dfc7ca9d588$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $eeb0961446aae8e3$export$6100ba28696e12de(buf);\n    else return $eeb0961446aae8e3$export$6100ba28696e12de(buf.slice(start, end));\n}\nfunction $51861dfc7ca9d588$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n    while(i < end){\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $51861dfc7ca9d588$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $51861dfc7ca9d588$var$decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n    if (len <= $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = '';\n    var i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $51861dfc7ca9d588$var$asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $51861dfc7ca9d588$var$latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $51861dfc7ca9d588$var$hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n    for(var i = start; i < end; ++i)out += $51861dfc7ca9d588$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $51861dfc7ca9d588$var$utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(var i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $51861dfc7ca9d588$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n$51861dfc7ca9d588$var$Buffer.prototype.readUintLE = $51861dfc7ca9d588$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUintBE = $51861dfc7ca9d588$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset + --byteLength];\n    var mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint8 = $51861dfc7ca9d588$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint16LE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint16BE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint32LE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint32BE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, true, 23, 4);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, false, 23, 4);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 8, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, true, 52, 8);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 8, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, false, 52, 8);\n};\nfunction $51861dfc7ca9d588$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeUintLE = $51861dfc7ca9d588$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUintBE = $51861dfc7ca9d588$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint8 = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint16LE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint16BE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint32LE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint32BE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction $51861dfc7ca9d588$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $7221566bd4d49f44$export$68d8715fc104d294(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeFloat(this, value, offset, true, noAssert);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $51861dfc7ca9d588$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $7221566bd4d49f44$export$68d8715fc104d294(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeDouble(this, value, offset, true, noAssert);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$51861dfc7ca9d588$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError('targetStart out of bounds');\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds');\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    var len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$51861dfc7ca9d588$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === 'string') {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') throw new TypeError('encoding must be a string');\n        if (typeof encoding === 'string' && !$51861dfc7ca9d588$var$Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === 'number') val = val & 255;\n    else if (typeof val === 'boolean') val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError('Out of range index');\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n    if (typeof val === 'number') for(i = start; i < end; ++i)this[i] = val;\n    else {\n        var bytes = $51861dfc7ca9d588$var$Buffer.isBuffer(val) ? val : $51861dfc7ca9d588$var$Buffer.from(val, encoding);\n        var len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// HELPER FUNCTIONS\n// ================\nvar $51861dfc7ca9d588$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $51861dfc7ca9d588$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($51861dfc7ca9d588$var$INVALID_BASE64_RE, '');\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return '';\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + '=';\n    return str;\n}\nfunction $51861dfc7ca9d588$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for(var i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error('Invalid code point');\n    }\n    return bytes;\n}\nfunction $51861dfc7ca9d588$var$asciiToBytes(str) {\n    var byteArray = [];\n    for(var i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $51861dfc7ca9d588$var$utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n    for(var i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $51861dfc7ca9d588$var$base64ToBytes(str) {\n    return $eeb0961446aae8e3$export$d622b2ad8d90c771($51861dfc7ca9d588$var$base64clean(str));\n}\nfunction $51861dfc7ca9d588$var$blitBuffer(src, dst, offset, length) {\n    for(var i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $51861dfc7ca9d588$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $51861dfc7ca9d588$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar $51861dfc7ca9d588$var$hexSliceLookupTable = function() {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n    for(var i = 0; i < 16; ++i){\n        var i16 = i * 16;\n        for(var j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n\n\n\nconst $4c0ef3140afd0271$var$createBuffer = (0, $51861dfc7ca9d588$export$a143d493d941bafc).from && (0, $51861dfc7ca9d588$export$a143d493d941bafc).alloc && (0, $51861dfc7ca9d588$export$a143d493d941bafc).allocUnsafe && (0, $51861dfc7ca9d588$export$a143d493d941bafc).allocUnsafeSlow ? (0, $51861dfc7ca9d588$export$a143d493d941bafc).from : (val)=>new (0, $51861dfc7ca9d588$export$a143d493d941bafc)(val);\nvar $4c0ef3140afd0271$export$2e2bcd8739ae039 = $4c0ef3140afd0271$var$createBuffer;\n\n\nfunction $bad5f938a11c5999$export$2e2bcd8739ae039(model, calc) {\n    const fn = (buf, previous)=>calc(buf, previous) >>> 0;\n    fn.signed = calc;\n    fn.unsigned = fn;\n    fn.model = model;\n    return fn;\n}\n\n\nconst $64cea43783ac55ff$var$crc1 = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('crc1', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = ~~previous;\n    let accum = 0;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        accum += byte;\n    }\n    crc += accum % 256;\n    return crc % 256;\n});\nvar $64cea43783ac55ff$export$2e2bcd8739ae039 = $64cea43783ac55ff$var$crc1;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\n// prettier-ignore\nlet $08419104948e7b12$var$TABLE = [\n    0x00,\n    0x07,\n    0x0e,\n    0x09,\n    0x1c,\n    0x1b,\n    0x12,\n    0x15,\n    0x38,\n    0x3f,\n    0x36,\n    0x31,\n    0x24,\n    0x23,\n    0x2a,\n    0x2d,\n    0x70,\n    0x77,\n    0x7e,\n    0x79,\n    0x6c,\n    0x6b,\n    0x62,\n    0x65,\n    0x48,\n    0x4f,\n    0x46,\n    0x41,\n    0x54,\n    0x53,\n    0x5a,\n    0x5d,\n    0xe0,\n    0xe7,\n    0xee,\n    0xe9,\n    0xfc,\n    0xfb,\n    0xf2,\n    0xf5,\n    0xd8,\n    0xdf,\n    0xd6,\n    0xd1,\n    0xc4,\n    0xc3,\n    0xca,\n    0xcd,\n    0x90,\n    0x97,\n    0x9e,\n    0x99,\n    0x8c,\n    0x8b,\n    0x82,\n    0x85,\n    0xa8,\n    0xaf,\n    0xa6,\n    0xa1,\n    0xb4,\n    0xb3,\n    0xba,\n    0xbd,\n    0xc7,\n    0xc0,\n    0xc9,\n    0xce,\n    0xdb,\n    0xdc,\n    0xd5,\n    0xd2,\n    0xff,\n    0xf8,\n    0xf1,\n    0xf6,\n    0xe3,\n    0xe4,\n    0xed,\n    0xea,\n    0xb7,\n    0xb0,\n    0xb9,\n    0xbe,\n    0xab,\n    0xac,\n    0xa5,\n    0xa2,\n    0x8f,\n    0x88,\n    0x81,\n    0x86,\n    0x93,\n    0x94,\n    0x9d,\n    0x9a,\n    0x27,\n    0x20,\n    0x29,\n    0x2e,\n    0x3b,\n    0x3c,\n    0x35,\n    0x32,\n    0x1f,\n    0x18,\n    0x11,\n    0x16,\n    0x03,\n    0x04,\n    0x0d,\n    0x0a,\n    0x57,\n    0x50,\n    0x59,\n    0x5e,\n    0x4b,\n    0x4c,\n    0x45,\n    0x42,\n    0x6f,\n    0x68,\n    0x61,\n    0x66,\n    0x73,\n    0x74,\n    0x7d,\n    0x7a,\n    0x89,\n    0x8e,\n    0x87,\n    0x80,\n    0x95,\n    0x92,\n    0x9b,\n    0x9c,\n    0xb1,\n    0xb6,\n    0xbf,\n    0xb8,\n    0xad,\n    0xaa,\n    0xa3,\n    0xa4,\n    0xf9,\n    0xfe,\n    0xf7,\n    0xf0,\n    0xe5,\n    0xe2,\n    0xeb,\n    0xec,\n    0xc1,\n    0xc6,\n    0xcf,\n    0xc8,\n    0xdd,\n    0xda,\n    0xd3,\n    0xd4,\n    0x69,\n    0x6e,\n    0x67,\n    0x60,\n    0x75,\n    0x72,\n    0x7b,\n    0x7c,\n    0x51,\n    0x56,\n    0x5f,\n    0x58,\n    0x4d,\n    0x4a,\n    0x43,\n    0x44,\n    0x19,\n    0x1e,\n    0x17,\n    0x10,\n    0x05,\n    0x02,\n    0x0b,\n    0x0c,\n    0x21,\n    0x26,\n    0x2f,\n    0x28,\n    0x3d,\n    0x3a,\n    0x33,\n    0x34,\n    0x4e,\n    0x49,\n    0x40,\n    0x47,\n    0x52,\n    0x55,\n    0x5c,\n    0x5b,\n    0x76,\n    0x71,\n    0x78,\n    0x7f,\n    0x6a,\n    0x6d,\n    0x64,\n    0x63,\n    0x3e,\n    0x39,\n    0x30,\n    0x37,\n    0x22,\n    0x25,\n    0x2c,\n    0x2b,\n    0x06,\n    0x01,\n    0x08,\n    0x0f,\n    0x1a,\n    0x1d,\n    0x14,\n    0x13,\n    0xae,\n    0xa9,\n    0xa0,\n    0xa7,\n    0xb2,\n    0xb5,\n    0xbc,\n    0xbb,\n    0x96,\n    0x91,\n    0x98,\n    0x9f,\n    0x8a,\n    0x8d,\n    0x84,\n    0x83,\n    0xde,\n    0xd9,\n    0xd0,\n    0xd7,\n    0xc2,\n    0xc5,\n    0xcc,\n    0xcb,\n    0xe6,\n    0xe1,\n    0xe8,\n    0xef,\n    0xfa,\n    0xfd,\n    0xf4,\n    0xf3\n];\nif (typeof Int32Array !== 'undefined') $08419104948e7b12$var$TABLE = new Int32Array($08419104948e7b12$var$TABLE);\nconst $08419104948e7b12$var$crc8 = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('crc-8', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = ~~previous;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = $08419104948e7b12$var$TABLE[(crc ^ byte) & 0xff] & 0xff;\n    }\n    return crc;\n});\nvar $08419104948e7b12$export$2e2bcd8739ae039 = $08419104948e7b12$var$crc8;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\n// prettier-ignore\nlet $51aa00e9d3f50413$var$TABLE = [\n    0x00,\n    0x5e,\n    0xbc,\n    0xe2,\n    0x61,\n    0x3f,\n    0xdd,\n    0x83,\n    0xc2,\n    0x9c,\n    0x7e,\n    0x20,\n    0xa3,\n    0xfd,\n    0x1f,\n    0x41,\n    0x9d,\n    0xc3,\n    0x21,\n    0x7f,\n    0xfc,\n    0xa2,\n    0x40,\n    0x1e,\n    0x5f,\n    0x01,\n    0xe3,\n    0xbd,\n    0x3e,\n    0x60,\n    0x82,\n    0xdc,\n    0x23,\n    0x7d,\n    0x9f,\n    0xc1,\n    0x42,\n    0x1c,\n    0xfe,\n    0xa0,\n    0xe1,\n    0xbf,\n    0x5d,\n    0x03,\n    0x80,\n    0xde,\n    0x3c,\n    0x62,\n    0xbe,\n    0xe0,\n    0x02,\n    0x5c,\n    0xdf,\n    0x81,\n    0x63,\n    0x3d,\n    0x7c,\n    0x22,\n    0xc0,\n    0x9e,\n    0x1d,\n    0x43,\n    0xa1,\n    0xff,\n    0x46,\n    0x18,\n    0xfa,\n    0xa4,\n    0x27,\n    0x79,\n    0x9b,\n    0xc5,\n    0x84,\n    0xda,\n    0x38,\n    0x66,\n    0xe5,\n    0xbb,\n    0x59,\n    0x07,\n    0xdb,\n    0x85,\n    0x67,\n    0x39,\n    0xba,\n    0xe4,\n    0x06,\n    0x58,\n    0x19,\n    0x47,\n    0xa5,\n    0xfb,\n    0x78,\n    0x26,\n    0xc4,\n    0x9a,\n    0x65,\n    0x3b,\n    0xd9,\n    0x87,\n    0x04,\n    0x5a,\n    0xb8,\n    0xe6,\n    0xa7,\n    0xf9,\n    0x1b,\n    0x45,\n    0xc6,\n    0x98,\n    0x7a,\n    0x24,\n    0xf8,\n    0xa6,\n    0x44,\n    0x1a,\n    0x99,\n    0xc7,\n    0x25,\n    0x7b,\n    0x3a,\n    0x64,\n    0x86,\n    0xd8,\n    0x5b,\n    0x05,\n    0xe7,\n    0xb9,\n    0x8c,\n    0xd2,\n    0x30,\n    0x6e,\n    0xed,\n    0xb3,\n    0x51,\n    0x0f,\n    0x4e,\n    0x10,\n    0xf2,\n    0xac,\n    0x2f,\n    0x71,\n    0x93,\n    0xcd,\n    0x11,\n    0x4f,\n    0xad,\n    0xf3,\n    0x70,\n    0x2e,\n    0xcc,\n    0x92,\n    0xd3,\n    0x8d,\n    0x6f,\n    0x31,\n    0xb2,\n    0xec,\n    0x0e,\n    0x50,\n    0xaf,\n    0xf1,\n    0x13,\n    0x4d,\n    0xce,\n    0x90,\n    0x72,\n    0x2c,\n    0x6d,\n    0x33,\n    0xd1,\n    0x8f,\n    0x0c,\n    0x52,\n    0xb0,\n    0xee,\n    0x32,\n    0x6c,\n    0x8e,\n    0xd0,\n    0x53,\n    0x0d,\n    0xef,\n    0xb1,\n    0xf0,\n    0xae,\n    0x4c,\n    0x12,\n    0x91,\n    0xcf,\n    0x2d,\n    0x73,\n    0xca,\n    0x94,\n    0x76,\n    0x28,\n    0xab,\n    0xf5,\n    0x17,\n    0x49,\n    0x08,\n    0x56,\n    0xb4,\n    0xea,\n    0x69,\n    0x37,\n    0xd5,\n    0x8b,\n    0x57,\n    0x09,\n    0xeb,\n    0xb5,\n    0x36,\n    0x68,\n    0x8a,\n    0xd4,\n    0x95,\n    0xcb,\n    0x29,\n    0x77,\n    0xf4,\n    0xaa,\n    0x48,\n    0x16,\n    0xe9,\n    0xb7,\n    0x55,\n    0x0b,\n    0x88,\n    0xd6,\n    0x34,\n    0x6a,\n    0x2b,\n    0x75,\n    0x97,\n    0xc9,\n    0x4a,\n    0x14,\n    0xf6,\n    0xa8,\n    0x74,\n    0x2a,\n    0xc8,\n    0x96,\n    0x15,\n    0x4b,\n    0xa9,\n    0xf7,\n    0xb6,\n    0xe8,\n    0x0a,\n    0x54,\n    0xd7,\n    0x89,\n    0x6b,\n    0x35\n];\nif (typeof Int32Array !== 'undefined') $51aa00e9d3f50413$var$TABLE = new Int32Array($51aa00e9d3f50413$var$TABLE);\nconst $51aa00e9d3f50413$var$crc81wire = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('dallas-1-wire', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = ~~previous;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = $51aa00e9d3f50413$var$TABLE[(crc ^ byte) & 0xff] & 0xff;\n    }\n    return crc;\n});\nvar $51aa00e9d3f50413$export$2e2bcd8739ae039 = $51aa00e9d3f50413$var$crc81wire;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\n// prettier-ignore\nlet $77b58d6d28a114a7$var$TABLE = [\n    0x0000,\n    0xc0c1,\n    0xc181,\n    0x0140,\n    0xc301,\n    0x03c0,\n    0x0280,\n    0xc241,\n    0xc601,\n    0x06c0,\n    0x0780,\n    0xc741,\n    0x0500,\n    0xc5c1,\n    0xc481,\n    0x0440,\n    0xcc01,\n    0x0cc0,\n    0x0d80,\n    0xcd41,\n    0x0f00,\n    0xcfc1,\n    0xce81,\n    0x0e40,\n    0x0a00,\n    0xcac1,\n    0xcb81,\n    0x0b40,\n    0xc901,\n    0x09c0,\n    0x0880,\n    0xc841,\n    0xd801,\n    0x18c0,\n    0x1980,\n    0xd941,\n    0x1b00,\n    0xdbc1,\n    0xda81,\n    0x1a40,\n    0x1e00,\n    0xdec1,\n    0xdf81,\n    0x1f40,\n    0xdd01,\n    0x1dc0,\n    0x1c80,\n    0xdc41,\n    0x1400,\n    0xd4c1,\n    0xd581,\n    0x1540,\n    0xd701,\n    0x17c0,\n    0x1680,\n    0xd641,\n    0xd201,\n    0x12c0,\n    0x1380,\n    0xd341,\n    0x1100,\n    0xd1c1,\n    0xd081,\n    0x1040,\n    0xf001,\n    0x30c0,\n    0x3180,\n    0xf141,\n    0x3300,\n    0xf3c1,\n    0xf281,\n    0x3240,\n    0x3600,\n    0xf6c1,\n    0xf781,\n    0x3740,\n    0xf501,\n    0x35c0,\n    0x3480,\n    0xf441,\n    0x3c00,\n    0xfcc1,\n    0xfd81,\n    0x3d40,\n    0xff01,\n    0x3fc0,\n    0x3e80,\n    0xfe41,\n    0xfa01,\n    0x3ac0,\n    0x3b80,\n    0xfb41,\n    0x3900,\n    0xf9c1,\n    0xf881,\n    0x3840,\n    0x2800,\n    0xe8c1,\n    0xe981,\n    0x2940,\n    0xeb01,\n    0x2bc0,\n    0x2a80,\n    0xea41,\n    0xee01,\n    0x2ec0,\n    0x2f80,\n    0xef41,\n    0x2d00,\n    0xedc1,\n    0xec81,\n    0x2c40,\n    0xe401,\n    0x24c0,\n    0x2580,\n    0xe541,\n    0x2700,\n    0xe7c1,\n    0xe681,\n    0x2640,\n    0x2200,\n    0xe2c1,\n    0xe381,\n    0x2340,\n    0xe101,\n    0x21c0,\n    0x2080,\n    0xe041,\n    0xa001,\n    0x60c0,\n    0x6180,\n    0xa141,\n    0x6300,\n    0xa3c1,\n    0xa281,\n    0x6240,\n    0x6600,\n    0xa6c1,\n    0xa781,\n    0x6740,\n    0xa501,\n    0x65c0,\n    0x6480,\n    0xa441,\n    0x6c00,\n    0xacc1,\n    0xad81,\n    0x6d40,\n    0xaf01,\n    0x6fc0,\n    0x6e80,\n    0xae41,\n    0xaa01,\n    0x6ac0,\n    0x6b80,\n    0xab41,\n    0x6900,\n    0xa9c1,\n    0xa881,\n    0x6840,\n    0x7800,\n    0xb8c1,\n    0xb981,\n    0x7940,\n    0xbb01,\n    0x7bc0,\n    0x7a80,\n    0xba41,\n    0xbe01,\n    0x7ec0,\n    0x7f80,\n    0xbf41,\n    0x7d00,\n    0xbdc1,\n    0xbc81,\n    0x7c40,\n    0xb401,\n    0x74c0,\n    0x7580,\n    0xb541,\n    0x7700,\n    0xb7c1,\n    0xb681,\n    0x7640,\n    0x7200,\n    0xb2c1,\n    0xb381,\n    0x7340,\n    0xb101,\n    0x71c0,\n    0x7080,\n    0xb041,\n    0x5000,\n    0x90c1,\n    0x9181,\n    0x5140,\n    0x9301,\n    0x53c0,\n    0x5280,\n    0x9241,\n    0x9601,\n    0x56c0,\n    0x5780,\n    0x9741,\n    0x5500,\n    0x95c1,\n    0x9481,\n    0x5440,\n    0x9c01,\n    0x5cc0,\n    0x5d80,\n    0x9d41,\n    0x5f00,\n    0x9fc1,\n    0x9e81,\n    0x5e40,\n    0x5a00,\n    0x9ac1,\n    0x9b81,\n    0x5b40,\n    0x9901,\n    0x59c0,\n    0x5880,\n    0x9841,\n    0x8801,\n    0x48c0,\n    0x4980,\n    0x8941,\n    0x4b00,\n    0x8bc1,\n    0x8a81,\n    0x4a40,\n    0x4e00,\n    0x8ec1,\n    0x8f81,\n    0x4f40,\n    0x8d01,\n    0x4dc0,\n    0x4c80,\n    0x8c41,\n    0x4400,\n    0x84c1,\n    0x8581,\n    0x4540,\n    0x8701,\n    0x47c0,\n    0x4680,\n    0x8641,\n    0x8201,\n    0x42c0,\n    0x4380,\n    0x8341,\n    0x4100,\n    0x81c1,\n    0x8081,\n    0x4040\n];\nif (typeof Int32Array !== 'undefined') $77b58d6d28a114a7$var$TABLE = new Int32Array($77b58d6d28a114a7$var$TABLE);\nconst $77b58d6d28a114a7$var$crc16 = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('crc-16', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = ~~previous;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = ($77b58d6d28a114a7$var$TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;\n    }\n    return crc;\n});\nvar $77b58d6d28a114a7$export$2e2bcd8739ae039 = $77b58d6d28a114a7$var$crc16;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\n// prettier-ignore\nlet $0d4a05e7ba704399$var$TABLE = [\n    0x0000,\n    0x1021,\n    0x2042,\n    0x3063,\n    0x4084,\n    0x50a5,\n    0x60c6,\n    0x70e7,\n    0x8108,\n    0x9129,\n    0xa14a,\n    0xb16b,\n    0xc18c,\n    0xd1ad,\n    0xe1ce,\n    0xf1ef,\n    0x1231,\n    0x0210,\n    0x3273,\n    0x2252,\n    0x52b5,\n    0x4294,\n    0x72f7,\n    0x62d6,\n    0x9339,\n    0x8318,\n    0xb37b,\n    0xa35a,\n    0xd3bd,\n    0xc39c,\n    0xf3ff,\n    0xe3de,\n    0x2462,\n    0x3443,\n    0x0420,\n    0x1401,\n    0x64e6,\n    0x74c7,\n    0x44a4,\n    0x5485,\n    0xa56a,\n    0xb54b,\n    0x8528,\n    0x9509,\n    0xe5ee,\n    0xf5cf,\n    0xc5ac,\n    0xd58d,\n    0x3653,\n    0x2672,\n    0x1611,\n    0x0630,\n    0x76d7,\n    0x66f6,\n    0x5695,\n    0x46b4,\n    0xb75b,\n    0xa77a,\n    0x9719,\n    0x8738,\n    0xf7df,\n    0xe7fe,\n    0xd79d,\n    0xc7bc,\n    0x48c4,\n    0x58e5,\n    0x6886,\n    0x78a7,\n    0x0840,\n    0x1861,\n    0x2802,\n    0x3823,\n    0xc9cc,\n    0xd9ed,\n    0xe98e,\n    0xf9af,\n    0x8948,\n    0x9969,\n    0xa90a,\n    0xb92b,\n    0x5af5,\n    0x4ad4,\n    0x7ab7,\n    0x6a96,\n    0x1a71,\n    0x0a50,\n    0x3a33,\n    0x2a12,\n    0xdbfd,\n    0xcbdc,\n    0xfbbf,\n    0xeb9e,\n    0x9b79,\n    0x8b58,\n    0xbb3b,\n    0xab1a,\n    0x6ca6,\n    0x7c87,\n    0x4ce4,\n    0x5cc5,\n    0x2c22,\n    0x3c03,\n    0x0c60,\n    0x1c41,\n    0xedae,\n    0xfd8f,\n    0xcdec,\n    0xddcd,\n    0xad2a,\n    0xbd0b,\n    0x8d68,\n    0x9d49,\n    0x7e97,\n    0x6eb6,\n    0x5ed5,\n    0x4ef4,\n    0x3e13,\n    0x2e32,\n    0x1e51,\n    0x0e70,\n    0xff9f,\n    0xefbe,\n    0xdfdd,\n    0xcffc,\n    0xbf1b,\n    0xaf3a,\n    0x9f59,\n    0x8f78,\n    0x9188,\n    0x81a9,\n    0xb1ca,\n    0xa1eb,\n    0xd10c,\n    0xc12d,\n    0xf14e,\n    0xe16f,\n    0x1080,\n    0x00a1,\n    0x30c2,\n    0x20e3,\n    0x5004,\n    0x4025,\n    0x7046,\n    0x6067,\n    0x83b9,\n    0x9398,\n    0xa3fb,\n    0xb3da,\n    0xc33d,\n    0xd31c,\n    0xe37f,\n    0xf35e,\n    0x02b1,\n    0x1290,\n    0x22f3,\n    0x32d2,\n    0x4235,\n    0x5214,\n    0x6277,\n    0x7256,\n    0xb5ea,\n    0xa5cb,\n    0x95a8,\n    0x8589,\n    0xf56e,\n    0xe54f,\n    0xd52c,\n    0xc50d,\n    0x34e2,\n    0x24c3,\n    0x14a0,\n    0x0481,\n    0x7466,\n    0x6447,\n    0x5424,\n    0x4405,\n    0xa7db,\n    0xb7fa,\n    0x8799,\n    0x97b8,\n    0xe75f,\n    0xf77e,\n    0xc71d,\n    0xd73c,\n    0x26d3,\n    0x36f2,\n    0x0691,\n    0x16b0,\n    0x6657,\n    0x7676,\n    0x4615,\n    0x5634,\n    0xd94c,\n    0xc96d,\n    0xf90e,\n    0xe92f,\n    0x99c8,\n    0x89e9,\n    0xb98a,\n    0xa9ab,\n    0x5844,\n    0x4865,\n    0x7806,\n    0x6827,\n    0x18c0,\n    0x08e1,\n    0x3882,\n    0x28a3,\n    0xcb7d,\n    0xdb5c,\n    0xeb3f,\n    0xfb1e,\n    0x8bf9,\n    0x9bd8,\n    0xabbb,\n    0xbb9a,\n    0x4a75,\n    0x5a54,\n    0x6a37,\n    0x7a16,\n    0x0af1,\n    0x1ad0,\n    0x2ab3,\n    0x3a92,\n    0xfd2e,\n    0xed0f,\n    0xdd6c,\n    0xcd4d,\n    0xbdaa,\n    0xad8b,\n    0x9de8,\n    0x8dc9,\n    0x7c26,\n    0x6c07,\n    0x5c64,\n    0x4c45,\n    0x3ca2,\n    0x2c83,\n    0x1ce0,\n    0x0cc1,\n    0xef1f,\n    0xff3e,\n    0xcf5d,\n    0xdf7c,\n    0xaf9b,\n    0xbfba,\n    0x8fd9,\n    0x9ff8,\n    0x6e17,\n    0x7e36,\n    0x4e55,\n    0x5e74,\n    0x2e93,\n    0x3eb2,\n    0x0ed1,\n    0x1ef0\n];\nif (typeof Int32Array !== 'undefined') $0d4a05e7ba704399$var$TABLE = new Int32Array($0d4a05e7ba704399$var$TABLE);\nconst $0d4a05e7ba704399$var$crc16ccitt = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('ccitt', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = ($0d4a05e7ba704399$var$TABLE[(crc >> 8 ^ byte) & 0xff] ^ crc << 8) & 0xffff;\n    }\n    return crc;\n});\nvar $0d4a05e7ba704399$export$2e2bcd8739ae039 = $0d4a05e7ba704399$var$crc16ccitt;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\n// prettier-ignore\nlet $ba86f052c75339fe$var$TABLE = [\n    0x0000,\n    0xc0c1,\n    0xc181,\n    0x0140,\n    0xc301,\n    0x03c0,\n    0x0280,\n    0xc241,\n    0xc601,\n    0x06c0,\n    0x0780,\n    0xc741,\n    0x0500,\n    0xc5c1,\n    0xc481,\n    0x0440,\n    0xcc01,\n    0x0cc0,\n    0x0d80,\n    0xcd41,\n    0x0f00,\n    0xcfc1,\n    0xce81,\n    0x0e40,\n    0x0a00,\n    0xcac1,\n    0xcb81,\n    0x0b40,\n    0xc901,\n    0x09c0,\n    0x0880,\n    0xc841,\n    0xd801,\n    0x18c0,\n    0x1980,\n    0xd941,\n    0x1b00,\n    0xdbc1,\n    0xda81,\n    0x1a40,\n    0x1e00,\n    0xdec1,\n    0xdf81,\n    0x1f40,\n    0xdd01,\n    0x1dc0,\n    0x1c80,\n    0xdc41,\n    0x1400,\n    0xd4c1,\n    0xd581,\n    0x1540,\n    0xd701,\n    0x17c0,\n    0x1680,\n    0xd641,\n    0xd201,\n    0x12c0,\n    0x1380,\n    0xd341,\n    0x1100,\n    0xd1c1,\n    0xd081,\n    0x1040,\n    0xf001,\n    0x30c0,\n    0x3180,\n    0xf141,\n    0x3300,\n    0xf3c1,\n    0xf281,\n    0x3240,\n    0x3600,\n    0xf6c1,\n    0xf781,\n    0x3740,\n    0xf501,\n    0x35c0,\n    0x3480,\n    0xf441,\n    0x3c00,\n    0xfcc1,\n    0xfd81,\n    0x3d40,\n    0xff01,\n    0x3fc0,\n    0x3e80,\n    0xfe41,\n    0xfa01,\n    0x3ac0,\n    0x3b80,\n    0xfb41,\n    0x3900,\n    0xf9c1,\n    0xf881,\n    0x3840,\n    0x2800,\n    0xe8c1,\n    0xe981,\n    0x2940,\n    0xeb01,\n    0x2bc0,\n    0x2a80,\n    0xea41,\n    0xee01,\n    0x2ec0,\n    0x2f80,\n    0xef41,\n    0x2d00,\n    0xedc1,\n    0xec81,\n    0x2c40,\n    0xe401,\n    0x24c0,\n    0x2580,\n    0xe541,\n    0x2700,\n    0xe7c1,\n    0xe681,\n    0x2640,\n    0x2200,\n    0xe2c1,\n    0xe381,\n    0x2340,\n    0xe101,\n    0x21c0,\n    0x2080,\n    0xe041,\n    0xa001,\n    0x60c0,\n    0x6180,\n    0xa141,\n    0x6300,\n    0xa3c1,\n    0xa281,\n    0x6240,\n    0x6600,\n    0xa6c1,\n    0xa781,\n    0x6740,\n    0xa501,\n    0x65c0,\n    0x6480,\n    0xa441,\n    0x6c00,\n    0xacc1,\n    0xad81,\n    0x6d40,\n    0xaf01,\n    0x6fc0,\n    0x6e80,\n    0xae41,\n    0xaa01,\n    0x6ac0,\n    0x6b80,\n    0xab41,\n    0x6900,\n    0xa9c1,\n    0xa881,\n    0x6840,\n    0x7800,\n    0xb8c1,\n    0xb981,\n    0x7940,\n    0xbb01,\n    0x7bc0,\n    0x7a80,\n    0xba41,\n    0xbe01,\n    0x7ec0,\n    0x7f80,\n    0xbf41,\n    0x7d00,\n    0xbdc1,\n    0xbc81,\n    0x7c40,\n    0xb401,\n    0x74c0,\n    0x7580,\n    0xb541,\n    0x7700,\n    0xb7c1,\n    0xb681,\n    0x7640,\n    0x7200,\n    0xb2c1,\n    0xb381,\n    0x7340,\n    0xb101,\n    0x71c0,\n    0x7080,\n    0xb041,\n    0x5000,\n    0x90c1,\n    0x9181,\n    0x5140,\n    0x9301,\n    0x53c0,\n    0x5280,\n    0x9241,\n    0x9601,\n    0x56c0,\n    0x5780,\n    0x9741,\n    0x5500,\n    0x95c1,\n    0x9481,\n    0x5440,\n    0x9c01,\n    0x5cc0,\n    0x5d80,\n    0x9d41,\n    0x5f00,\n    0x9fc1,\n    0x9e81,\n    0x5e40,\n    0x5a00,\n    0x9ac1,\n    0x9b81,\n    0x5b40,\n    0x9901,\n    0x59c0,\n    0x5880,\n    0x9841,\n    0x8801,\n    0x48c0,\n    0x4980,\n    0x8941,\n    0x4b00,\n    0x8bc1,\n    0x8a81,\n    0x4a40,\n    0x4e00,\n    0x8ec1,\n    0x8f81,\n    0x4f40,\n    0x8d01,\n    0x4dc0,\n    0x4c80,\n    0x8c41,\n    0x4400,\n    0x84c1,\n    0x8581,\n    0x4540,\n    0x8701,\n    0x47c0,\n    0x4680,\n    0x8641,\n    0x8201,\n    0x42c0,\n    0x4380,\n    0x8341,\n    0x4100,\n    0x81c1,\n    0x8081,\n    0x4040\n];\nif (typeof Int32Array !== 'undefined') $ba86f052c75339fe$var$TABLE = new Int32Array($ba86f052c75339fe$var$TABLE);\nconst $ba86f052c75339fe$var$crc16modbus = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('crc-16-modbus', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = ($ba86f052c75339fe$var$TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;\n    }\n    return crc;\n});\nvar $ba86f052c75339fe$export$2e2bcd8739ae039 = $ba86f052c75339fe$var$crc16modbus;\n\n\n\n\n\nconst $39d8939f69cc9bad$var$crc16xmodem = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('xmodem', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        let code = crc >>> 8 & 0xff;\n        code ^= byte & 0xff;\n        code ^= code >>> 4;\n        crc = crc << 8 & 0xffff;\n        crc ^= code;\n        code = code << 5 & 0xffff;\n        crc ^= code;\n        code = code << 7 & 0xffff;\n        crc ^= code;\n    }\n    return crc;\n});\nvar $39d8939f69cc9bad$export$2e2bcd8739ae039 = $39d8939f69cc9bad$var$crc16xmodem;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\n// prettier-ignore\nlet $03349339895ac91e$var$TABLE = [\n    0x0000,\n    0x1189,\n    0x2312,\n    0x329b,\n    0x4624,\n    0x57ad,\n    0x6536,\n    0x74bf,\n    0x8c48,\n    0x9dc1,\n    0xaf5a,\n    0xbed3,\n    0xca6c,\n    0xdbe5,\n    0xe97e,\n    0xf8f7,\n    0x1081,\n    0x0108,\n    0x3393,\n    0x221a,\n    0x56a5,\n    0x472c,\n    0x75b7,\n    0x643e,\n    0x9cc9,\n    0x8d40,\n    0xbfdb,\n    0xae52,\n    0xdaed,\n    0xcb64,\n    0xf9ff,\n    0xe876,\n    0x2102,\n    0x308b,\n    0x0210,\n    0x1399,\n    0x6726,\n    0x76af,\n    0x4434,\n    0x55bd,\n    0xad4a,\n    0xbcc3,\n    0x8e58,\n    0x9fd1,\n    0xeb6e,\n    0xfae7,\n    0xc87c,\n    0xd9f5,\n    0x3183,\n    0x200a,\n    0x1291,\n    0x0318,\n    0x77a7,\n    0x662e,\n    0x54b5,\n    0x453c,\n    0xbdcb,\n    0xac42,\n    0x9ed9,\n    0x8f50,\n    0xfbef,\n    0xea66,\n    0xd8fd,\n    0xc974,\n    0x4204,\n    0x538d,\n    0x6116,\n    0x709f,\n    0x0420,\n    0x15a9,\n    0x2732,\n    0x36bb,\n    0xce4c,\n    0xdfc5,\n    0xed5e,\n    0xfcd7,\n    0x8868,\n    0x99e1,\n    0xab7a,\n    0xbaf3,\n    0x5285,\n    0x430c,\n    0x7197,\n    0x601e,\n    0x14a1,\n    0x0528,\n    0x37b3,\n    0x263a,\n    0xdecd,\n    0xcf44,\n    0xfddf,\n    0xec56,\n    0x98e9,\n    0x8960,\n    0xbbfb,\n    0xaa72,\n    0x6306,\n    0x728f,\n    0x4014,\n    0x519d,\n    0x2522,\n    0x34ab,\n    0x0630,\n    0x17b9,\n    0xef4e,\n    0xfec7,\n    0xcc5c,\n    0xddd5,\n    0xa96a,\n    0xb8e3,\n    0x8a78,\n    0x9bf1,\n    0x7387,\n    0x620e,\n    0x5095,\n    0x411c,\n    0x35a3,\n    0x242a,\n    0x16b1,\n    0x0738,\n    0xffcf,\n    0xee46,\n    0xdcdd,\n    0xcd54,\n    0xb9eb,\n    0xa862,\n    0x9af9,\n    0x8b70,\n    0x8408,\n    0x9581,\n    0xa71a,\n    0xb693,\n    0xc22c,\n    0xd3a5,\n    0xe13e,\n    0xf0b7,\n    0x0840,\n    0x19c9,\n    0x2b52,\n    0x3adb,\n    0x4e64,\n    0x5fed,\n    0x6d76,\n    0x7cff,\n    0x9489,\n    0x8500,\n    0xb79b,\n    0xa612,\n    0xd2ad,\n    0xc324,\n    0xf1bf,\n    0xe036,\n    0x18c1,\n    0x0948,\n    0x3bd3,\n    0x2a5a,\n    0x5ee5,\n    0x4f6c,\n    0x7df7,\n    0x6c7e,\n    0xa50a,\n    0xb483,\n    0x8618,\n    0x9791,\n    0xe32e,\n    0xf2a7,\n    0xc03c,\n    0xd1b5,\n    0x2942,\n    0x38cb,\n    0x0a50,\n    0x1bd9,\n    0x6f66,\n    0x7eef,\n    0x4c74,\n    0x5dfd,\n    0xb58b,\n    0xa402,\n    0x9699,\n    0x8710,\n    0xf3af,\n    0xe226,\n    0xd0bd,\n    0xc134,\n    0x39c3,\n    0x284a,\n    0x1ad1,\n    0x0b58,\n    0x7fe7,\n    0x6e6e,\n    0x5cf5,\n    0x4d7c,\n    0xc60c,\n    0xd785,\n    0xe51e,\n    0xf497,\n    0x8028,\n    0x91a1,\n    0xa33a,\n    0xb2b3,\n    0x4a44,\n    0x5bcd,\n    0x6956,\n    0x78df,\n    0x0c60,\n    0x1de9,\n    0x2f72,\n    0x3efb,\n    0xd68d,\n    0xc704,\n    0xf59f,\n    0xe416,\n    0x90a9,\n    0x8120,\n    0xb3bb,\n    0xa232,\n    0x5ac5,\n    0x4b4c,\n    0x79d7,\n    0x685e,\n    0x1ce1,\n    0x0d68,\n    0x3ff3,\n    0x2e7a,\n    0xe70e,\n    0xf687,\n    0xc41c,\n    0xd595,\n    0xa12a,\n    0xb0a3,\n    0x8238,\n    0x93b1,\n    0x6b46,\n    0x7acf,\n    0x4854,\n    0x59dd,\n    0x2d62,\n    0x3ceb,\n    0x0e70,\n    0x1ff9,\n    0xf78f,\n    0xe606,\n    0xd49d,\n    0xc514,\n    0xb1ab,\n    0xa022,\n    0x92b9,\n    0x8330,\n    0x7bc7,\n    0x6a4e,\n    0x58d5,\n    0x495c,\n    0x3de3,\n    0x2c6a,\n    0x1ef1,\n    0x0f78\n];\nif (typeof Int32Array !== 'undefined') $03349339895ac91e$var$TABLE = new Int32Array($03349339895ac91e$var$TABLE);\nconst $03349339895ac91e$var$crc16kermit = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('kermit', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = ($03349339895ac91e$var$TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;\n    }\n    return crc;\n});\nvar $03349339895ac91e$export$2e2bcd8739ae039 = $03349339895ac91e$var$crc16kermit;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\n// prettier-ignore\nlet $afa4629e20592799$var$TABLE = [\n    0x000000,\n    0x864cfb,\n    0x8ad50d,\n    0x0c99f6,\n    0x93e6e1,\n    0x15aa1a,\n    0x1933ec,\n    0x9f7f17,\n    0xa18139,\n    0x27cdc2,\n    0x2b5434,\n    0xad18cf,\n    0x3267d8,\n    0xb42b23,\n    0xb8b2d5,\n    0x3efe2e,\n    0xc54e89,\n    0x430272,\n    0x4f9b84,\n    0xc9d77f,\n    0x56a868,\n    0xd0e493,\n    0xdc7d65,\n    0x5a319e,\n    0x64cfb0,\n    0xe2834b,\n    0xee1abd,\n    0x685646,\n    0xf72951,\n    0x7165aa,\n    0x7dfc5c,\n    0xfbb0a7,\n    0x0cd1e9,\n    0x8a9d12,\n    0x8604e4,\n    0x00481f,\n    0x9f3708,\n    0x197bf3,\n    0x15e205,\n    0x93aefe,\n    0xad50d0,\n    0x2b1c2b,\n    0x2785dd,\n    0xa1c926,\n    0x3eb631,\n    0xb8faca,\n    0xb4633c,\n    0x322fc7,\n    0xc99f60,\n    0x4fd39b,\n    0x434a6d,\n    0xc50696,\n    0x5a7981,\n    0xdc357a,\n    0xd0ac8c,\n    0x56e077,\n    0x681e59,\n    0xee52a2,\n    0xe2cb54,\n    0x6487af,\n    0xfbf8b8,\n    0x7db443,\n    0x712db5,\n    0xf7614e,\n    0x19a3d2,\n    0x9fef29,\n    0x9376df,\n    0x153a24,\n    0x8a4533,\n    0x0c09c8,\n    0x00903e,\n    0x86dcc5,\n    0xb822eb,\n    0x3e6e10,\n    0x32f7e6,\n    0xb4bb1d,\n    0x2bc40a,\n    0xad88f1,\n    0xa11107,\n    0x275dfc,\n    0xdced5b,\n    0x5aa1a0,\n    0x563856,\n    0xd074ad,\n    0x4f0bba,\n    0xc94741,\n    0xc5deb7,\n    0x43924c,\n    0x7d6c62,\n    0xfb2099,\n    0xf7b96f,\n    0x71f594,\n    0xee8a83,\n    0x68c678,\n    0x645f8e,\n    0xe21375,\n    0x15723b,\n    0x933ec0,\n    0x9fa736,\n    0x19ebcd,\n    0x8694da,\n    0x00d821,\n    0x0c41d7,\n    0x8a0d2c,\n    0xb4f302,\n    0x32bff9,\n    0x3e260f,\n    0xb86af4,\n    0x2715e3,\n    0xa15918,\n    0xadc0ee,\n    0x2b8c15,\n    0xd03cb2,\n    0x567049,\n    0x5ae9bf,\n    0xdca544,\n    0x43da53,\n    0xc596a8,\n    0xc90f5e,\n    0x4f43a5,\n    0x71bd8b,\n    0xf7f170,\n    0xfb6886,\n    0x7d247d,\n    0xe25b6a,\n    0x641791,\n    0x688e67,\n    0xeec29c,\n    0x3347a4,\n    0xb50b5f,\n    0xb992a9,\n    0x3fde52,\n    0xa0a145,\n    0x26edbe,\n    0x2a7448,\n    0xac38b3,\n    0x92c69d,\n    0x148a66,\n    0x181390,\n    0x9e5f6b,\n    0x01207c,\n    0x876c87,\n    0x8bf571,\n    0x0db98a,\n    0xf6092d,\n    0x7045d6,\n    0x7cdc20,\n    0xfa90db,\n    0x65efcc,\n    0xe3a337,\n    0xef3ac1,\n    0x69763a,\n    0x578814,\n    0xd1c4ef,\n    0xdd5d19,\n    0x5b11e2,\n    0xc46ef5,\n    0x42220e,\n    0x4ebbf8,\n    0xc8f703,\n    0x3f964d,\n    0xb9dab6,\n    0xb54340,\n    0x330fbb,\n    0xac70ac,\n    0x2a3c57,\n    0x26a5a1,\n    0xa0e95a,\n    0x9e1774,\n    0x185b8f,\n    0x14c279,\n    0x928e82,\n    0x0df195,\n    0x8bbd6e,\n    0x872498,\n    0x016863,\n    0xfad8c4,\n    0x7c943f,\n    0x700dc9,\n    0xf64132,\n    0x693e25,\n    0xef72de,\n    0xe3eb28,\n    0x65a7d3,\n    0x5b59fd,\n    0xdd1506,\n    0xd18cf0,\n    0x57c00b,\n    0xc8bf1c,\n    0x4ef3e7,\n    0x426a11,\n    0xc426ea,\n    0x2ae476,\n    0xaca88d,\n    0xa0317b,\n    0x267d80,\n    0xb90297,\n    0x3f4e6c,\n    0x33d79a,\n    0xb59b61,\n    0x8b654f,\n    0x0d29b4,\n    0x01b042,\n    0x87fcb9,\n    0x1883ae,\n    0x9ecf55,\n    0x9256a3,\n    0x141a58,\n    0xefaaff,\n    0x69e604,\n    0x657ff2,\n    0xe33309,\n    0x7c4c1e,\n    0xfa00e5,\n    0xf69913,\n    0x70d5e8,\n    0x4e2bc6,\n    0xc8673d,\n    0xc4fecb,\n    0x42b230,\n    0xddcd27,\n    0x5b81dc,\n    0x57182a,\n    0xd154d1,\n    0x26359f,\n    0xa07964,\n    0xace092,\n    0x2aac69,\n    0xb5d37e,\n    0x339f85,\n    0x3f0673,\n    0xb94a88,\n    0x87b4a6,\n    0x01f85d,\n    0x0d61ab,\n    0x8b2d50,\n    0x145247,\n    0x921ebc,\n    0x9e874a,\n    0x18cbb1,\n    0xe37b16,\n    0x6537ed,\n    0x69ae1b,\n    0xefe2e0,\n    0x709df7,\n    0xf6d10c,\n    0xfa48fa,\n    0x7c0401,\n    0x42fa2f,\n    0xc4b6d4,\n    0xc82f22,\n    0x4e63d9,\n    0xd11cce,\n    0x575035,\n    0x5bc9c3,\n    0xdd8538\n];\nif (typeof Int32Array !== 'undefined') $afa4629e20592799$var$TABLE = new Int32Array($afa4629e20592799$var$TABLE);\nconst $afa4629e20592799$var$crc24 = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('crc-24', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = ($afa4629e20592799$var$TABLE[(crc >> 16 ^ byte) & 0xff] ^ crc << 8) & 0xffffff;\n    }\n    return crc;\n});\nvar $afa4629e20592799$export$2e2bcd8739ae039 = $afa4629e20592799$var$crc24;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\n// prettier-ignore\nlet $500ffa3d3ac6b2b7$var$TABLE = [\n    0x00000000,\n    0x77073096,\n    0xee0e612c,\n    0x990951ba,\n    0x076dc419,\n    0x706af48f,\n    0xe963a535,\n    0x9e6495a3,\n    0x0edb8832,\n    0x79dcb8a4,\n    0xe0d5e91e,\n    0x97d2d988,\n    0x09b64c2b,\n    0x7eb17cbd,\n    0xe7b82d07,\n    0x90bf1d91,\n    0x1db71064,\n    0x6ab020f2,\n    0xf3b97148,\n    0x84be41de,\n    0x1adad47d,\n    0x6ddde4eb,\n    0xf4d4b551,\n    0x83d385c7,\n    0x136c9856,\n    0x646ba8c0,\n    0xfd62f97a,\n    0x8a65c9ec,\n    0x14015c4f,\n    0x63066cd9,\n    0xfa0f3d63,\n    0x8d080df5,\n    0x3b6e20c8,\n    0x4c69105e,\n    0xd56041e4,\n    0xa2677172,\n    0x3c03e4d1,\n    0x4b04d447,\n    0xd20d85fd,\n    0xa50ab56b,\n    0x35b5a8fa,\n    0x42b2986c,\n    0xdbbbc9d6,\n    0xacbcf940,\n    0x32d86ce3,\n    0x45df5c75,\n    0xdcd60dcf,\n    0xabd13d59,\n    0x26d930ac,\n    0x51de003a,\n    0xc8d75180,\n    0xbfd06116,\n    0x21b4f4b5,\n    0x56b3c423,\n    0xcfba9599,\n    0xb8bda50f,\n    0x2802b89e,\n    0x5f058808,\n    0xc60cd9b2,\n    0xb10be924,\n    0x2f6f7c87,\n    0x58684c11,\n    0xc1611dab,\n    0xb6662d3d,\n    0x76dc4190,\n    0x01db7106,\n    0x98d220bc,\n    0xefd5102a,\n    0x71b18589,\n    0x06b6b51f,\n    0x9fbfe4a5,\n    0xe8b8d433,\n    0x7807c9a2,\n    0x0f00f934,\n    0x9609a88e,\n    0xe10e9818,\n    0x7f6a0dbb,\n    0x086d3d2d,\n    0x91646c97,\n    0xe6635c01,\n    0x6b6b51f4,\n    0x1c6c6162,\n    0x856530d8,\n    0xf262004e,\n    0x6c0695ed,\n    0x1b01a57b,\n    0x8208f4c1,\n    0xf50fc457,\n    0x65b0d9c6,\n    0x12b7e950,\n    0x8bbeb8ea,\n    0xfcb9887c,\n    0x62dd1ddf,\n    0x15da2d49,\n    0x8cd37cf3,\n    0xfbd44c65,\n    0x4db26158,\n    0x3ab551ce,\n    0xa3bc0074,\n    0xd4bb30e2,\n    0x4adfa541,\n    0x3dd895d7,\n    0xa4d1c46d,\n    0xd3d6f4fb,\n    0x4369e96a,\n    0x346ed9fc,\n    0xad678846,\n    0xda60b8d0,\n    0x44042d73,\n    0x33031de5,\n    0xaa0a4c5f,\n    0xdd0d7cc9,\n    0x5005713c,\n    0x270241aa,\n    0xbe0b1010,\n    0xc90c2086,\n    0x5768b525,\n    0x206f85b3,\n    0xb966d409,\n    0xce61e49f,\n    0x5edef90e,\n    0x29d9c998,\n    0xb0d09822,\n    0xc7d7a8b4,\n    0x59b33d17,\n    0x2eb40d81,\n    0xb7bd5c3b,\n    0xc0ba6cad,\n    0xedb88320,\n    0x9abfb3b6,\n    0x03b6e20c,\n    0x74b1d29a,\n    0xead54739,\n    0x9dd277af,\n    0x04db2615,\n    0x73dc1683,\n    0xe3630b12,\n    0x94643b84,\n    0x0d6d6a3e,\n    0x7a6a5aa8,\n    0xe40ecf0b,\n    0x9309ff9d,\n    0x0a00ae27,\n    0x7d079eb1,\n    0xf00f9344,\n    0x8708a3d2,\n    0x1e01f268,\n    0x6906c2fe,\n    0xf762575d,\n    0x806567cb,\n    0x196c3671,\n    0x6e6b06e7,\n    0xfed41b76,\n    0x89d32be0,\n    0x10da7a5a,\n    0x67dd4acc,\n    0xf9b9df6f,\n    0x8ebeeff9,\n    0x17b7be43,\n    0x60b08ed5,\n    0xd6d6a3e8,\n    0xa1d1937e,\n    0x38d8c2c4,\n    0x4fdff252,\n    0xd1bb67f1,\n    0xa6bc5767,\n    0x3fb506dd,\n    0x48b2364b,\n    0xd80d2bda,\n    0xaf0a1b4c,\n    0x36034af6,\n    0x41047a60,\n    0xdf60efc3,\n    0xa867df55,\n    0x316e8eef,\n    0x4669be79,\n    0xcb61b38c,\n    0xbc66831a,\n    0x256fd2a0,\n    0x5268e236,\n    0xcc0c7795,\n    0xbb0b4703,\n    0x220216b9,\n    0x5505262f,\n    0xc5ba3bbe,\n    0xb2bd0b28,\n    0x2bb45a92,\n    0x5cb36a04,\n    0xc2d7ffa7,\n    0xb5d0cf31,\n    0x2cd99e8b,\n    0x5bdeae1d,\n    0x9b64c2b0,\n    0xec63f226,\n    0x756aa39c,\n    0x026d930a,\n    0x9c0906a9,\n    0xeb0e363f,\n    0x72076785,\n    0x05005713,\n    0x95bf4a82,\n    0xe2b87a14,\n    0x7bb12bae,\n    0x0cb61b38,\n    0x92d28e9b,\n    0xe5d5be0d,\n    0x7cdcefb7,\n    0x0bdbdf21,\n    0x86d3d2d4,\n    0xf1d4e242,\n    0x68ddb3f8,\n    0x1fda836e,\n    0x81be16cd,\n    0xf6b9265b,\n    0x6fb077e1,\n    0x18b74777,\n    0x88085ae6,\n    0xff0f6a70,\n    0x66063bca,\n    0x11010b5c,\n    0x8f659eff,\n    0xf862ae69,\n    0x616bffd3,\n    0x166ccf45,\n    0xa00ae278,\n    0xd70dd2ee,\n    0x4e048354,\n    0x3903b3c2,\n    0xa7672661,\n    0xd06016f7,\n    0x4969474d,\n    0x3e6e77db,\n    0xaed16a4a,\n    0xd9d65adc,\n    0x40df0b66,\n    0x37d83bf0,\n    0xa9bcae53,\n    0xdebb9ec5,\n    0x47b2cf7f,\n    0x30b5ffe9,\n    0xbdbdf21c,\n    0xcabac28a,\n    0x53b39330,\n    0x24b4a3a6,\n    0xbad03605,\n    0xcdd70693,\n    0x54de5729,\n    0x23d967bf,\n    0xb3667a2e,\n    0xc4614ab8,\n    0x5d681b02,\n    0x2a6f2b94,\n    0xb40bbe37,\n    0xc30c8ea1,\n    0x5a05df1b,\n    0x2d02ef8d\n];\nif (typeof Int32Array !== 'undefined') $500ffa3d3ac6b2b7$var$TABLE = new Int32Array($500ffa3d3ac6b2b7$var$TABLE);\nconst $500ffa3d3ac6b2b7$var$crc32 = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('crc-32', function(buf, previous) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = previous === 0 ? 0 : ~~previous ^ -1;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = $500ffa3d3ac6b2b7$var$TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;\n    }\n    return crc ^ -1;\n});\nvar $500ffa3d3ac6b2b7$export$2e2bcd8739ae039 = $500ffa3d3ac6b2b7$var$crc32;\n\n\n\n\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\n// prettier-ignore\nlet $bbcfedd0f078ab9b$var$TABLE = [\n    0x00000000,\n    0x77073096,\n    0xee0e612c,\n    0x990951ba,\n    0x076dc419,\n    0x706af48f,\n    0xe963a535,\n    0x9e6495a3,\n    0x0edb8832,\n    0x79dcb8a4,\n    0xe0d5e91e,\n    0x97d2d988,\n    0x09b64c2b,\n    0x7eb17cbd,\n    0xe7b82d07,\n    0x90bf1d91,\n    0x1db71064,\n    0x6ab020f2,\n    0xf3b97148,\n    0x84be41de,\n    0x1adad47d,\n    0x6ddde4eb,\n    0xf4d4b551,\n    0x83d385c7,\n    0x136c9856,\n    0x646ba8c0,\n    0xfd62f97a,\n    0x8a65c9ec,\n    0x14015c4f,\n    0x63066cd9,\n    0xfa0f3d63,\n    0x8d080df5,\n    0x3b6e20c8,\n    0x4c69105e,\n    0xd56041e4,\n    0xa2677172,\n    0x3c03e4d1,\n    0x4b04d447,\n    0xd20d85fd,\n    0xa50ab56b,\n    0x35b5a8fa,\n    0x42b2986c,\n    0xdbbbc9d6,\n    0xacbcf940,\n    0x32d86ce3,\n    0x45df5c75,\n    0xdcd60dcf,\n    0xabd13d59,\n    0x26d930ac,\n    0x51de003a,\n    0xc8d75180,\n    0xbfd06116,\n    0x21b4f4b5,\n    0x56b3c423,\n    0xcfba9599,\n    0xb8bda50f,\n    0x2802b89e,\n    0x5f058808,\n    0xc60cd9b2,\n    0xb10be924,\n    0x2f6f7c87,\n    0x58684c11,\n    0xc1611dab,\n    0xb6662d3d,\n    0x76dc4190,\n    0x01db7106,\n    0x98d220bc,\n    0xefd5102a,\n    0x71b18589,\n    0x06b6b51f,\n    0x9fbfe4a5,\n    0xe8b8d433,\n    0x7807c9a2,\n    0x0f00f934,\n    0x9609a88e,\n    0xe10e9818,\n    0x7f6a0dbb,\n    0x086d3d2d,\n    0x91646c97,\n    0xe6635c01,\n    0x6b6b51f4,\n    0x1c6c6162,\n    0x856530d8,\n    0xf262004e,\n    0x6c0695ed,\n    0x1b01a57b,\n    0x8208f4c1,\n    0xf50fc457,\n    0x65b0d9c6,\n    0x12b7e950,\n    0x8bbeb8ea,\n    0xfcb9887c,\n    0x62dd1ddf,\n    0x15da2d49,\n    0x8cd37cf3,\n    0xfbd44c65,\n    0x4db26158,\n    0x3ab551ce,\n    0xa3bc0074,\n    0xd4bb30e2,\n    0x4adfa541,\n    0x3dd895d7,\n    0xa4d1c46d,\n    0xd3d6f4fb,\n    0x4369e96a,\n    0x346ed9fc,\n    0xad678846,\n    0xda60b8d0,\n    0x44042d73,\n    0x33031de5,\n    0xaa0a4c5f,\n    0xdd0d7cc9,\n    0x5005713c,\n    0x270241aa,\n    0xbe0b1010,\n    0xc90c2086,\n    0x5768b525,\n    0x206f85b3,\n    0xb966d409,\n    0xce61e49f,\n    0x5edef90e,\n    0x29d9c998,\n    0xb0d09822,\n    0xc7d7a8b4,\n    0x59b33d17,\n    0x2eb40d81,\n    0xb7bd5c3b,\n    0xc0ba6cad,\n    0xedb88320,\n    0x9abfb3b6,\n    0x03b6e20c,\n    0x74b1d29a,\n    0xead54739,\n    0x9dd277af,\n    0x04db2615,\n    0x73dc1683,\n    0xe3630b12,\n    0x94643b84,\n    0x0d6d6a3e,\n    0x7a6a5aa8,\n    0xe40ecf0b,\n    0x9309ff9d,\n    0x0a00ae27,\n    0x7d079eb1,\n    0xf00f9344,\n    0x8708a3d2,\n    0x1e01f268,\n    0x6906c2fe,\n    0xf762575d,\n    0x806567cb,\n    0x196c3671,\n    0x6e6b06e7,\n    0xfed41b76,\n    0x89d32be0,\n    0x10da7a5a,\n    0x67dd4acc,\n    0xf9b9df6f,\n    0x8ebeeff9,\n    0x17b7be43,\n    0x60b08ed5,\n    0xd6d6a3e8,\n    0xa1d1937e,\n    0x38d8c2c4,\n    0x4fdff252,\n    0xd1bb67f1,\n    0xa6bc5767,\n    0x3fb506dd,\n    0x48b2364b,\n    0xd80d2bda,\n    0xaf0a1b4c,\n    0x36034af6,\n    0x41047a60,\n    0xdf60efc3,\n    0xa867df55,\n    0x316e8eef,\n    0x4669be79,\n    0xcb61b38c,\n    0xbc66831a,\n    0x256fd2a0,\n    0x5268e236,\n    0xcc0c7795,\n    0xbb0b4703,\n    0x220216b9,\n    0x5505262f,\n    0xc5ba3bbe,\n    0xb2bd0b28,\n    0x2bb45a92,\n    0x5cb36a04,\n    0xc2d7ffa7,\n    0xb5d0cf31,\n    0x2cd99e8b,\n    0x5bdeae1d,\n    0x9b64c2b0,\n    0xec63f226,\n    0x756aa39c,\n    0x026d930a,\n    0x9c0906a9,\n    0xeb0e363f,\n    0x72076785,\n    0x05005713,\n    0x95bf4a82,\n    0xe2b87a14,\n    0x7bb12bae,\n    0x0cb61b38,\n    0x92d28e9b,\n    0xe5d5be0d,\n    0x7cdcefb7,\n    0x0bdbdf21,\n    0x86d3d2d4,\n    0xf1d4e242,\n    0x68ddb3f8,\n    0x1fda836e,\n    0x81be16cd,\n    0xf6b9265b,\n    0x6fb077e1,\n    0x18b74777,\n    0x88085ae6,\n    0xff0f6a70,\n    0x66063bca,\n    0x11010b5c,\n    0x8f659eff,\n    0xf862ae69,\n    0x616bffd3,\n    0x166ccf45,\n    0xa00ae278,\n    0xd70dd2ee,\n    0x4e048354,\n    0x3903b3c2,\n    0xa7672661,\n    0xd06016f7,\n    0x4969474d,\n    0x3e6e77db,\n    0xaed16a4a,\n    0xd9d65adc,\n    0x40df0b66,\n    0x37d83bf0,\n    0xa9bcae53,\n    0xdebb9ec5,\n    0x47b2cf7f,\n    0x30b5ffe9,\n    0xbdbdf21c,\n    0xcabac28a,\n    0x53b39330,\n    0x24b4a3a6,\n    0xbad03605,\n    0xcdd70693,\n    0x54de5729,\n    0x23d967bf,\n    0xb3667a2e,\n    0xc4614ab8,\n    0x5d681b02,\n    0x2a6f2b94,\n    0xb40bbe37,\n    0xc30c8ea1,\n    0x5a05df1b,\n    0x2d02ef8d\n];\nif (typeof Int32Array !== 'undefined') $bbcfedd0f078ab9b$var$TABLE = new Int32Array($bbcfedd0f078ab9b$var$TABLE);\nconst $bbcfedd0f078ab9b$var$crcjam = (0, $bad5f938a11c5999$export$2e2bcd8739ae039)('jam', function(buf, previous = -1) {\n    if (!(0, $51861dfc7ca9d588$export$a143d493d941bafc).isBuffer(buf)) buf = (0, $4c0ef3140afd0271$export$2e2bcd8739ae039)(buf);\n    let crc = previous === 0 ? 0 : ~~previous;\n    for(let index = 0; index < buf.length; index++){\n        const byte = buf[index];\n        crc = $bbcfedd0f078ab9b$var$TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;\n    }\n    return crc;\n});\nvar $bbcfedd0f078ab9b$export$2e2bcd8739ae039 = $bbcfedd0f078ab9b$var$crcjam;\n\n\nvar $9de79f689a5b580f$export$2e2bcd8739ae039 = {\n    crc1: $64cea43783ac55ff$export$2e2bcd8739ae039,\n    crc8: $08419104948e7b12$export$2e2bcd8739ae039,\n    crc81wire: $51aa00e9d3f50413$export$2e2bcd8739ae039,\n    crc16: $77b58d6d28a114a7$export$2e2bcd8739ae039,\n    crc16ccitt: $0d4a05e7ba704399$export$2e2bcd8739ae039,\n    crc16modbus: $ba86f052c75339fe$export$2e2bcd8739ae039,\n    crc16xmodem: $39d8939f69cc9bad$export$2e2bcd8739ae039,\n    crc16kermit: $03349339895ac91e$export$2e2bcd8739ae039,\n    crc24: $afa4629e20592799$export$2e2bcd8739ae039,\n    crc32: $500ffa3d3ac6b2b7$export$2e2bcd8739ae039,\n    crcjam: $bbcfedd0f078ab9b$export$2e2bcd8739ae039\n};\n\n\nvar $c2550c9a8f5b81d0$var$ID_PAYLOAD_FORMAT = '00';\nvar $c2550c9a8f5b81d0$var$ID_POI_METHOD = '01';\nvar $c2550c9a8f5b81d0$var$ID_MERCHANT_INFORMATION_BOT = '29';\nvar $c2550c9a8f5b81d0$var$ID_TRANSACTION_CURRENCY = '53';\nvar $c2550c9a8f5b81d0$var$ID_TRANSACTION_AMOUNT = '54';\nvar $c2550c9a8f5b81d0$var$ID_COUNTRY_CODE = '58';\nvar $c2550c9a8f5b81d0$var$ID_CRC = '63';\nvar $c2550c9a8f5b81d0$var$PAYLOAD_FORMAT_EMV_QRCPS_MERCHANT_PRESENTED_MODE = '01';\nvar $c2550c9a8f5b81d0$var$POI_METHOD_STATIC = '11';\nvar $c2550c9a8f5b81d0$var$POI_METHOD_DYNAMIC = '12';\nvar $c2550c9a8f5b81d0$var$MERCHANT_INFORMATION_TEMPLATE_ID_GUID = '00';\nvar $c2550c9a8f5b81d0$var$BOT_ID_MERCHANT_PHONE_NUMBER = '01';\nvar $c2550c9a8f5b81d0$var$BOT_ID_MERCHANT_TAX_ID = '02';\nvar $c2550c9a8f5b81d0$var$BOT_ID_MERCHANT_EWALLET_ID = '03';\nvar $c2550c9a8f5b81d0$var$GUID_PROMPTPAY = 'A000000677010111';\nvar $c2550c9a8f5b81d0$var$TRANSACTION_CURRENCY_THB = '764';\nvar $c2550c9a8f5b81d0$var$COUNTRY_CODE_TH = 'TH';\nfunction $c2550c9a8f5b81d0$var$generatePayload(target, options) {\n    target = $c2550c9a8f5b81d0$var$sanitizeTarget(target);\n    var amount = options.amount;\n    var targetType = target.length >= 15 ? $c2550c9a8f5b81d0$var$BOT_ID_MERCHANT_EWALLET_ID : target.length >= 13 ? $c2550c9a8f5b81d0$var$BOT_ID_MERCHANT_TAX_ID : $c2550c9a8f5b81d0$var$BOT_ID_MERCHANT_PHONE_NUMBER;\n    var data = [\n        $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_PAYLOAD_FORMAT, $c2550c9a8f5b81d0$var$PAYLOAD_FORMAT_EMV_QRCPS_MERCHANT_PRESENTED_MODE),\n        $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_POI_METHOD, amount ? $c2550c9a8f5b81d0$var$POI_METHOD_DYNAMIC : $c2550c9a8f5b81d0$var$POI_METHOD_STATIC),\n        $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_MERCHANT_INFORMATION_BOT, $c2550c9a8f5b81d0$var$serialize([\n            $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$MERCHANT_INFORMATION_TEMPLATE_ID_GUID, $c2550c9a8f5b81d0$var$GUID_PROMPTPAY),\n            $c2550c9a8f5b81d0$var$f(targetType, $c2550c9a8f5b81d0$var$formatTarget(target))\n        ])),\n        $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_COUNTRY_CODE, $c2550c9a8f5b81d0$var$COUNTRY_CODE_TH),\n        $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_TRANSACTION_CURRENCY, $c2550c9a8f5b81d0$var$TRANSACTION_CURRENCY_THB),\n        amount && $c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_TRANSACTION_AMOUNT, $c2550c9a8f5b81d0$var$formatAmount(amount))\n    ];\n    var dataToCrc = $c2550c9a8f5b81d0$var$serialize(data) + $c2550c9a8f5b81d0$var$ID_CRC + '04';\n    data.push($c2550c9a8f5b81d0$var$f($c2550c9a8f5b81d0$var$ID_CRC, $c2550c9a8f5b81d0$var$formatCrc($39d8939f69cc9bad$export$2e2bcd8739ae039(dataToCrc, 0xffff))));\n    return $c2550c9a8f5b81d0$var$serialize(data);\n}\nfunction $c2550c9a8f5b81d0$var$f(id, value) {\n    return [\n        id,\n        ('00' + value.length).slice(-2),\n        value\n    ].join('');\n}\nfunction $c2550c9a8f5b81d0$var$serialize(xs) {\n    return xs.filter(function(x) {\n        return x;\n    }).join('');\n}\nfunction $c2550c9a8f5b81d0$var$sanitizeTarget(id) {\n    return id.replace(/[^0-9]/g, '');\n}\nfunction $c2550c9a8f5b81d0$var$formatTarget(id) {\n    const numbers = $c2550c9a8f5b81d0$var$sanitizeTarget(id);\n    if (numbers.length >= 13) return numbers;\n    return ('0000000000000' + numbers.replace(/^0/, '66')).slice(-13);\n}\nfunction $c2550c9a8f5b81d0$var$formatAmount(amount) {\n    return amount.toFixed(2);\n}\nfunction $c2550c9a8f5b81d0$var$formatCrc(crcValue) {\n    return ('0000' + crcValue.toString(16).toUpperCase()).slice(-4);\n}\n$c2550c9a8f5b81d0$exports = $c2550c9a8f5b81d0$var$generatePayload;\n\n\nvar $092c7e998bebe629$exports = {};\n\n$parcel$export($092c7e998bebe629$exports, \"create\", () => $092c7e998bebe629$export$185802fd694ee1f5, (v) => $092c7e998bebe629$export$185802fd694ee1f5 = v);\n$parcel$export($092c7e998bebe629$exports, \"toCanvas\", () => $092c7e998bebe629$export$f87f6982d1fd4f81, (v) => $092c7e998bebe629$export$f87f6982d1fd4f81 = v);\n$parcel$export($092c7e998bebe629$exports, \"toDataURL\", () => $092c7e998bebe629$export$723e4939e5a27c8, (v) => $092c7e998bebe629$export$723e4939e5a27c8 = v);\n$parcel$export($092c7e998bebe629$exports, \"toString\", () => $092c7e998bebe629$export$f84e8e69fd4488a5, (v) => $092c7e998bebe629$export$f84e8e69fd4488a5 = v);\nvar $092c7e998bebe629$export$185802fd694ee1f5;\nvar $092c7e998bebe629$export$f87f6982d1fd4f81;\nvar $092c7e998bebe629$export$723e4939e5a27c8;\n// only svg for now.\nvar $092c7e998bebe629$export$f84e8e69fd4488a5;\nvar $e6419622b12b5572$exports = {};\n// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n$e6419622b12b5572$exports = function() {\n    return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};\n\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */ var $5f2127839fe01a16$export$185802fd694ee1f5;\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */ var $c1483b5b1305278f$export$8d4a06d3facd414b;\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */ var $c1483b5b1305278f$export$b05dac13c7a35c32;\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */ var $c1483b5b1305278f$export$ed1d66da50968976;\nvar $c1483b5b1305278f$export$6733b14783f975c2;\nvar $c1483b5b1305278f$export$ce5b1274f8597fa0;\nvar $c1483b5b1305278f$export$43dd553ecded716d;\nlet $c1483b5b1305278f$var$toSJISFunction;\nconst $c1483b5b1305278f$var$CODEWORDS_COUNT = [\n    0,\n    26,\n    44,\n    70,\n    100,\n    134,\n    172,\n    196,\n    242,\n    292,\n    346,\n    404,\n    466,\n    532,\n    581,\n    655,\n    733,\n    815,\n    901,\n    991,\n    1085,\n    1156,\n    1258,\n    1364,\n    1474,\n    1588,\n    1706,\n    1828,\n    1921,\n    2051,\n    2185,\n    2323,\n    2465,\n    2611,\n    2761,\n    2876,\n    3034,\n    3196,\n    3362,\n    3532,\n    3706\n];\n$c1483b5b1305278f$export$8d4a06d3facd414b = function getSymbolSize(version) {\n    if (!version) throw new Error('\"version\" cannot be null or undefined');\n    if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40');\n    return version * 4 + 17;\n};\n$c1483b5b1305278f$export$b05dac13c7a35c32 = function getSymbolTotalCodewords(version) {\n    return $c1483b5b1305278f$var$CODEWORDS_COUNT[version];\n};\n$c1483b5b1305278f$export$ed1d66da50968976 = function(data) {\n    let digit = 0;\n    while(data !== 0){\n        digit++;\n        data >>>= 1;\n    }\n    return digit;\n};\n$c1483b5b1305278f$export$6733b14783f975c2 = function setToSJISFunction(f) {\n    if (typeof f !== 'function') throw new Error('\"toSJISFunc\" is not a valid function.');\n    $c1483b5b1305278f$var$toSJISFunction = f;\n};\n$c1483b5b1305278f$export$ce5b1274f8597fa0 = function() {\n    return typeof $c1483b5b1305278f$var$toSJISFunction !== 'undefined';\n};\n$c1483b5b1305278f$export$43dd553ecded716d = function toSJIS(kanji) {\n    return $c1483b5b1305278f$var$toSJISFunction(kanji);\n};\n\n\nvar $d22956012916b666$export$61196ced6d74a310;\nvar $d22956012916b666$export$3a1a48c8f6ef640e;\nvar $d22956012916b666$export$3722cfe417b6ed86;\nvar $d22956012916b666$export$7f8ddf7c7c20b3cd;\nvar $d22956012916b666$export$1ea939691cdc45b8;\nvar $d22956012916b666$export$6788812c4e6611e6;\n$d22956012916b666$export$61196ced6d74a310 = {\n    bit: 1\n};\n$d22956012916b666$export$3a1a48c8f6ef640e = {\n    bit: 0\n};\n$d22956012916b666$export$3722cfe417b6ed86 = {\n    bit: 3\n};\n$d22956012916b666$export$7f8ddf7c7c20b3cd = {\n    bit: 2\n};\nfunction $d22956012916b666$var$fromString(string) {\n    if (typeof string !== 'string') throw new Error('Param is not a string');\n    const lcStr = string.toLowerCase();\n    switch(lcStr){\n        case 'l':\n        case 'low':\n            return $d22956012916b666$export$61196ced6d74a310;\n        case 'm':\n        case 'medium':\n            return $d22956012916b666$export$3a1a48c8f6ef640e;\n        case 'q':\n        case 'quartile':\n            return $d22956012916b666$export$3722cfe417b6ed86;\n        case 'h':\n        case 'high':\n            return $d22956012916b666$export$7f8ddf7c7c20b3cd;\n        default:\n            throw new Error('Unknown EC Level: ' + string);\n    }\n}\n$d22956012916b666$export$1ea939691cdc45b8 = function isValid(level) {\n    return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;\n};\n$d22956012916b666$export$6788812c4e6611e6 = function from(value, defaultValue) {\n    if ($d22956012916b666$export$1ea939691cdc45b8(value)) return value;\n    try {\n        return $d22956012916b666$var$fromString(value);\n    } catch (e) {\n        return defaultValue;\n    }\n};\n\n\nvar $22a6389bcfc83921$exports = {};\nfunction $22a6389bcfc83921$var$BitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\n$22a6389bcfc83921$var$BitBuffer.prototype = {\n    get: function(index) {\n        const bufIndex = Math.floor(index / 8);\n        return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;\n    },\n    put: function(num, length) {\n        for(let i = 0; i < length; i++)this.putBit((num >>> length - i - 1 & 1) === 1);\n    },\n    getLengthInBits: function() {\n        return this.length;\n    },\n    putBit: function(bit) {\n        const bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) this.buffer.push(0);\n        if (bit) this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        this.length++;\n    }\n};\n$22a6389bcfc83921$exports = $22a6389bcfc83921$var$BitBuffer;\n\n\nvar $3c0264e2c9c64d36$exports = {};\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */ function $3c0264e2c9c64d36$var$BitMatrix(size) {\n    if (!size || size < 1) throw new Error('BitMatrix size must be defined and greater than 0');\n    this.size = size;\n    this.data = new Uint8Array(size * size);\n    this.reservedBit = new Uint8Array(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */ $3c0264e2c9c64d36$var$BitMatrix.prototype.set = function(row, col, value, reserved) {\n    const index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved) this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */ $3c0264e2c9c64d36$var$BitMatrix.prototype.get = function(row, col) {\n    return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */ $3c0264e2c9c64d36$var$BitMatrix.prototype.xor = function(row, col, value) {\n    this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */ $3c0264e2c9c64d36$var$BitMatrix.prototype.isReserved = function(row, col) {\n    return this.reservedBit[row * this.size + col];\n};\n$3c0264e2c9c64d36$exports = $3c0264e2c9c64d36$var$BitMatrix;\n\n\n/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */ /**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */ var $c20e4b3185223698$export$cb05537eb8e57a83;\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */ var $c20e4b3185223698$export$c39457c570f2b189;\n\nvar $c20e4b3185223698$require$getSymbolSize = $c1483b5b1305278f$export$8d4a06d3facd414b;\n$c20e4b3185223698$export$cb05537eb8e57a83 = function getRowColCoords(version) {\n    if (version === 1) return [];\n    const posCount = Math.floor(version / 7) + 2;\n    const size = $c20e4b3185223698$require$getSymbolSize(version);\n    const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n    const positions = [\n        size - 7\n    ] // Last coord is always (size - 7)\n    ;\n    for(let i = 1; i < posCount - 1; i++)positions[i] = positions[i - 1] - intervals;\n    positions.push(6) // First coord is always 6\n    ;\n    return positions.reverse();\n};\n$c20e4b3185223698$export$c39457c570f2b189 = function getPositions(version) {\n    const coords = [];\n    const pos = $c20e4b3185223698$export$cb05537eb8e57a83(version);\n    const posLength = pos.length;\n    for(let i = 0; i < posLength; i++)for(let j = 0; j < posLength; j++){\n        // Skip if position is occupied by finder patterns\n        if (i === 0 && j === 0 || // top-left\n        i === 0 && j === posLength - 1 || // bottom-left\n        i === posLength - 1 && j === 0) continue;\n        coords.push([\n            pos[i],\n            pos[j]\n        ]);\n    }\n    return coords;\n};\n\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */ var $b4836838cc492349$export$c39457c570f2b189;\n\nvar $b4836838cc492349$require$getSymbolSize = $c1483b5b1305278f$export$8d4a06d3facd414b;\nconst $b4836838cc492349$var$FINDER_PATTERN_SIZE = 7;\n$b4836838cc492349$export$c39457c570f2b189 = function getPositions(version) {\n    const size = $b4836838cc492349$require$getSymbolSize(version);\n    return [\n        // top-left\n        [\n            0,\n            0\n        ],\n        // top-right\n        [\n            size - $b4836838cc492349$var$FINDER_PATTERN_SIZE,\n            0\n        ],\n        // bottom-left\n        [\n            0,\n            size - $b4836838cc492349$var$FINDER_PATTERN_SIZE\n        ]\n    ];\n};\n\n\n/**\n * Data mask pattern reference\n * @type {Object}\n */ var $1edc2624fba191d0$export$7ed115685df827af;\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */ var $1edc2624fba191d0$export$1ea939691cdc45b8;\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */ var $1edc2624fba191d0$export$6788812c4e6611e6;\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/ var $1edc2624fba191d0$export$a5fd3a02c14d0b3e;\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */ var $1edc2624fba191d0$export$9a9385107a518e46;\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */ var $1edc2624fba191d0$export$ade754353f0dc75e;\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */ var $1edc2624fba191d0$export$3ff6f04d40d9962b;\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */ var $1edc2624fba191d0$export$a1c9aa9c0e8ba394;\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */ var $1edc2624fba191d0$export$fe9625aaceb0e563;\n$1edc2624fba191d0$export$7ed115685df827af = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n};\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */ const $1edc2624fba191d0$var$PenaltyScores = {\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n};\n$1edc2624fba191d0$export$1ea939691cdc45b8 = function isValid(mask) {\n    return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n};\n$1edc2624fba191d0$export$6788812c4e6611e6 = function from(value) {\n    return $1edc2624fba191d0$export$1ea939691cdc45b8(value) ? parseInt(value, 10) : undefined;\n};\n$1edc2624fba191d0$export$a5fd3a02c14d0b3e = function getPenaltyN1(data) {\n    const size = data.size;\n    let points = 0;\n    let sameCountCol = 0;\n    let sameCountRow = 0;\n    let lastCol = null;\n    let lastRow = null;\n    for(let row = 0; row < size; row++){\n        sameCountCol = sameCountRow = 0;\n        lastCol = lastRow = null;\n        for(let col = 0; col < size; col++){\n            let module = data.get(row, col);\n            if (module === lastCol) sameCountCol++;\n            else {\n                if (sameCountCol >= 5) points += $1edc2624fba191d0$var$PenaltyScores.N1 + (sameCountCol - 5);\n                lastCol = module;\n                sameCountCol = 1;\n            }\n            module = data.get(col, row);\n            if (module === lastRow) sameCountRow++;\n            else {\n                if (sameCountRow >= 5) points += $1edc2624fba191d0$var$PenaltyScores.N1 + (sameCountRow - 5);\n                lastRow = module;\n                sameCountRow = 1;\n            }\n        }\n        if (sameCountCol >= 5) points += $1edc2624fba191d0$var$PenaltyScores.N1 + (sameCountCol - 5);\n        if (sameCountRow >= 5) points += $1edc2624fba191d0$var$PenaltyScores.N1 + (sameCountRow - 5);\n    }\n    return points;\n};\n$1edc2624fba191d0$export$9a9385107a518e46 = function getPenaltyN2(data) {\n    const size = data.size;\n    let points = 0;\n    for(let row = 0; row < size - 1; row++)for(let col = 0; col < size - 1; col++){\n        const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);\n        if (last === 4 || last === 0) points++;\n    }\n    return points * $1edc2624fba191d0$var$PenaltyScores.N2;\n};\n$1edc2624fba191d0$export$ade754353f0dc75e = function getPenaltyN3(data) {\n    const size = data.size;\n    let points = 0;\n    let bitsCol = 0;\n    let bitsRow = 0;\n    for(let row = 0; row < size; row++){\n        bitsCol = bitsRow = 0;\n        for(let col = 0; col < size; col++){\n            bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);\n            if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;\n            bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);\n            if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;\n        }\n    }\n    return points * $1edc2624fba191d0$var$PenaltyScores.N3;\n};\n$1edc2624fba191d0$export$3ff6f04d40d9962b = function getPenaltyN4(data) {\n    let darkCount = 0;\n    const modulesCount = data.data.length;\n    for(let i = 0; i < modulesCount; i++)darkCount += data.data[i];\n    const k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);\n    return k * $1edc2624fba191d0$var$PenaltyScores.N4;\n};\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */ function $1edc2624fba191d0$var$getMaskAt(maskPattern, i, j) {\n    switch(maskPattern){\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN000:\n            return (i + j) % 2 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN001:\n            return i % 2 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN010:\n            return j % 3 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN011:\n            return (i + j) % 3 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN100:\n            return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN101:\n            return i * j % 2 + i * j % 3 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN110:\n            return (i * j % 2 + i * j % 3) % 2 === 0;\n        case $1edc2624fba191d0$export$7ed115685df827af.PATTERN111:\n            return (i * j % 3 + (i + j) % 2) % 2 === 0;\n        default:\n            throw new Error('bad maskPattern:' + maskPattern);\n    }\n}\n$1edc2624fba191d0$export$a1c9aa9c0e8ba394 = function applyMask(pattern, data) {\n    const size = data.size;\n    for(let col = 0; col < size; col++)for(let row = 0; row < size; row++){\n        if (data.isReserved(row, col)) continue;\n        data.xor(row, col, $1edc2624fba191d0$var$getMaskAt(pattern, row, col));\n    }\n};\n$1edc2624fba191d0$export$fe9625aaceb0e563 = function getBestMask(data, setupFormatFunc) {\n    const numPatterns = Object.keys($1edc2624fba191d0$export$7ed115685df827af).length;\n    let bestPattern = 0;\n    let lowerPenalty = Infinity;\n    for(let p = 0; p < numPatterns; p++){\n        setupFormatFunc(p);\n        $1edc2624fba191d0$export$a1c9aa9c0e8ba394(p, data);\n        // Calculate penalty\n        const penalty = $1edc2624fba191d0$export$a5fd3a02c14d0b3e(data) + $1edc2624fba191d0$export$9a9385107a518e46(data) + $1edc2624fba191d0$export$ade754353f0dc75e(data) + $1edc2624fba191d0$export$3ff6f04d40d9962b(data);\n        // Undo previously applied mask\n        $1edc2624fba191d0$export$a1c9aa9c0e8ba394(p, data);\n        if (penalty < lowerPenalty) {\n            lowerPenalty = penalty;\n            bestPattern = p;\n        }\n    }\n    return bestPattern;\n};\n\n\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */ var $7f809b8d8966b945$export$41a1fc627aca72b9;\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */ var $7f809b8d8966b945$export$683d1b3e8a1a8438;\n\nconst $7f809b8d8966b945$var$EC_BLOCKS_TABLE = [\n    // L  M  Q  H\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    1,\n    2,\n    2,\n    4,\n    1,\n    2,\n    4,\n    4,\n    2,\n    4,\n    4,\n    4,\n    2,\n    4,\n    6,\n    5,\n    2,\n    4,\n    6,\n    6,\n    2,\n    5,\n    8,\n    8,\n    4,\n    5,\n    8,\n    8,\n    4,\n    5,\n    8,\n    11,\n    4,\n    8,\n    10,\n    11,\n    4,\n    9,\n    12,\n    16,\n    4,\n    9,\n    16,\n    16,\n    6,\n    10,\n    12,\n    18,\n    6,\n    10,\n    17,\n    16,\n    6,\n    11,\n    16,\n    19,\n    6,\n    13,\n    18,\n    21,\n    7,\n    14,\n    21,\n    25,\n    8,\n    16,\n    20,\n    25,\n    8,\n    17,\n    23,\n    25,\n    9,\n    17,\n    23,\n    34,\n    9,\n    18,\n    25,\n    30,\n    10,\n    20,\n    27,\n    32,\n    12,\n    21,\n    29,\n    35,\n    12,\n    23,\n    34,\n    37,\n    12,\n    25,\n    34,\n    40,\n    13,\n    26,\n    35,\n    42,\n    14,\n    28,\n    38,\n    45,\n    15,\n    29,\n    40,\n    48,\n    16,\n    31,\n    43,\n    51,\n    17,\n    33,\n    45,\n    54,\n    18,\n    35,\n    48,\n    57,\n    19,\n    37,\n    51,\n    60,\n    19,\n    38,\n    53,\n    63,\n    20,\n    40,\n    56,\n    66,\n    21,\n    43,\n    59,\n    70,\n    22,\n    45,\n    62,\n    74,\n    24,\n    47,\n    65,\n    77,\n    25,\n    49,\n    68,\n    81\n];\nconst $7f809b8d8966b945$var$EC_CODEWORDS_TABLE = [\n    // L  M  Q  H\n    7,\n    10,\n    13,\n    17,\n    10,\n    16,\n    22,\n    28,\n    15,\n    26,\n    36,\n    44,\n    20,\n    36,\n    52,\n    64,\n    26,\n    48,\n    72,\n    88,\n    36,\n    64,\n    96,\n    112,\n    40,\n    72,\n    108,\n    130,\n    48,\n    88,\n    132,\n    156,\n    60,\n    110,\n    160,\n    192,\n    72,\n    130,\n    192,\n    224,\n    80,\n    150,\n    224,\n    264,\n    96,\n    176,\n    260,\n    308,\n    104,\n    198,\n    288,\n    352,\n    120,\n    216,\n    320,\n    384,\n    132,\n    240,\n    360,\n    432,\n    144,\n    280,\n    408,\n    480,\n    168,\n    308,\n    448,\n    532,\n    180,\n    338,\n    504,\n    588,\n    196,\n    364,\n    546,\n    650,\n    224,\n    416,\n    600,\n    700,\n    224,\n    442,\n    644,\n    750,\n    252,\n    476,\n    690,\n    816,\n    270,\n    504,\n    750,\n    900,\n    300,\n    560,\n    810,\n    960,\n    312,\n    588,\n    870,\n    1050,\n    336,\n    644,\n    952,\n    1110,\n    360,\n    700,\n    1020,\n    1200,\n    390,\n    728,\n    1050,\n    1260,\n    420,\n    784,\n    1140,\n    1350,\n    450,\n    812,\n    1200,\n    1440,\n    480,\n    868,\n    1290,\n    1530,\n    510,\n    924,\n    1350,\n    1620,\n    540,\n    980,\n    1440,\n    1710,\n    570,\n    1036,\n    1530,\n    1800,\n    570,\n    1064,\n    1590,\n    1890,\n    600,\n    1120,\n    1680,\n    1980,\n    630,\n    1204,\n    1770,\n    2100,\n    660,\n    1260,\n    1860,\n    2220,\n    720,\n    1316,\n    1950,\n    2310,\n    750,\n    1372,\n    2040,\n    2430\n];\n$7f809b8d8966b945$export$41a1fc627aca72b9 = function getBlocksCount(version, errorCorrectionLevel) {\n    switch(errorCorrectionLevel){\n        case $d22956012916b666$export$61196ced6d74a310:\n            return $7f809b8d8966b945$var$EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n        case $d22956012916b666$export$3a1a48c8f6ef640e:\n            return $7f809b8d8966b945$var$EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n        case $d22956012916b666$export$3722cfe417b6ed86:\n            return $7f809b8d8966b945$var$EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n        case $d22956012916b666$export$7f8ddf7c7c20b3cd:\n            return $7f809b8d8966b945$var$EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n$7f809b8d8966b945$export$683d1b3e8a1a8438 = function getTotalCodewordsCount(version, errorCorrectionLevel) {\n    switch(errorCorrectionLevel){\n        case $d22956012916b666$export$61196ced6d74a310:\n            return $7f809b8d8966b945$var$EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n        case $d22956012916b666$export$3a1a48c8f6ef640e:\n            return $7f809b8d8966b945$var$EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n        case $d22956012916b666$export$3722cfe417b6ed86:\n            return $7f809b8d8966b945$var$EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n        case $d22956012916b666$export$7f8ddf7c7c20b3cd:\n            return $7f809b8d8966b945$var$EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n\n\nvar $06a1abce65162dc0$exports = {};\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */ var $9563d144998a4c78$export$6e3a27864ab166fe;\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */ var $9563d144998a4c78$export$842a2cf37af977e1;\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */ var $9563d144998a4c78$export$7b8be06a973a9d05;\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */ var $758ebb328fd03b3c$export$bef1f36f5486a6a3;\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */ var $758ebb328fd03b3c$export$b310ec824aaee37f;\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */ var $758ebb328fd03b3c$export$6e3a27864ab166fe;\nconst $758ebb328fd03b3c$var$EXP_TABLE = new Uint8Array(512);\nconst $758ebb328fd03b3c$var$LOG_TABLE = new Uint8Array(256);\n(function initTables() {\n    let x = 1;\n    for(let i = 0; i < 255; i++){\n        $758ebb328fd03b3c$var$EXP_TABLE[i] = x;\n        $758ebb328fd03b3c$var$LOG_TABLE[x] = i;\n        x <<= 1 // multiply by 2\n        ;\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n        if (x & 0x100) x ^= 0x11D;\n    }\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\n    // two GF numbers, no more).\n    // @see {@link mul}\n    for(let i = 255; i < 512; i++)$758ebb328fd03b3c$var$EXP_TABLE[i] = $758ebb328fd03b3c$var$EXP_TABLE[i - 255];\n})();\n$758ebb328fd03b3c$export$bef1f36f5486a6a3 = function log(n) {\n    if (n < 1) throw new Error('log(' + n + ')');\n    return $758ebb328fd03b3c$var$LOG_TABLE[n];\n};\n$758ebb328fd03b3c$export$b310ec824aaee37f = function exp(n) {\n    return $758ebb328fd03b3c$var$EXP_TABLE[n];\n};\n$758ebb328fd03b3c$export$6e3a27864ab166fe = function mul(x, y) {\n    if (x === 0 || y === 0) return 0;\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n    // @see {@link initTables}\n    return $758ebb328fd03b3c$var$EXP_TABLE[$758ebb328fd03b3c$var$LOG_TABLE[x] + $758ebb328fd03b3c$var$LOG_TABLE[y]];\n};\n\n\n$9563d144998a4c78$export$6e3a27864ab166fe = function mul(p1, p2) {\n    const coeff = new Uint8Array(p1.length + p2.length - 1);\n    for(let i = 0; i < p1.length; i++)for(let j = 0; j < p2.length; j++)coeff[i + j] ^= $758ebb328fd03b3c$export$6e3a27864ab166fe(p1[i], p2[j]);\n    return coeff;\n};\n$9563d144998a4c78$export$842a2cf37af977e1 = function mod(divident, divisor) {\n    let result = new Uint8Array(divident);\n    while(result.length - divisor.length >= 0){\n        const coeff = result[0];\n        for(let i = 0; i < divisor.length; i++)result[i] ^= $758ebb328fd03b3c$export$6e3a27864ab166fe(divisor[i], coeff);\n        // remove all zeros from buffer head\n        let offset = 0;\n        while(offset < result.length && result[offset] === 0)offset++;\n        result = result.slice(offset);\n    }\n    return result;\n};\n$9563d144998a4c78$export$7b8be06a973a9d05 = function generateECPolynomial(degree) {\n    let poly = new Uint8Array([\n        1\n    ]);\n    for(let i = 0; i < degree; i++)poly = $9563d144998a4c78$export$6e3a27864ab166fe(poly, new Uint8Array([\n        1,\n        $758ebb328fd03b3c$export$b310ec824aaee37f(i)\n    ]));\n    return poly;\n};\n\n\nfunction $06a1abce65162dc0$var$ReedSolomonEncoder(degree) {\n    this.genPoly = undefined;\n    this.degree = degree;\n    if (this.degree) this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */ $06a1abce65162dc0$var$ReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n    // create an irreducible generator polynomial\n    this.degree = degree;\n    this.genPoly = $9563d144998a4c78$export$7b8be06a973a9d05(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */ $06a1abce65162dc0$var$ReedSolomonEncoder.prototype.encode = function encode(data) {\n    if (!this.genPoly) throw new Error('Encoder not initialized');\n    // Calculate EC for this data block\n    // extends data size to data+genPoly size\n    const paddedData = new Uint8Array(data.length + this.degree);\n    paddedData.set(data);\n    // The error correction codewords are the remainder after dividing the data codewords\n    // by a generator polynomial\n    const remainder = $9563d144998a4c78$export$842a2cf37af977e1(paddedData, this.genPoly);\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\n    // If coefficients number in remainder are less than genPoly degree,\n    // pad with 0s to the left to reach the needed number of coefficients\n    const start = this.degree - remainder.length;\n    if (start > 0) {\n        const buff = new Uint8Array(this.degree);\n        buff.set(remainder, start);\n        return buff;\n    }\n    return remainder;\n};\n$06a1abce65162dc0$exports = $06a1abce65162dc0$var$ReedSolomonEncoder;\n\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */ var $140eee110ea3b5f9$export$6788812c4e6611e6;\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */ var $140eee110ea3b5f9$export$55b283886ec2d3fb;\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */ var $140eee110ea3b5f9$export$264e969aa7a8ff7e;\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */ var $140eee110ea3b5f9$export$eee5438974ef6f0e;\n\n\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */ var $21e4e023abb588c2$export$4d318981b5a83836;\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */ var $21e4e023abb588c2$export$376a9ed239d6c1c8;\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */ var $21e4e023abb588c2$export$8f4bf8f7eb581284;\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */ var $21e4e023abb588c2$export$a4d452c2363c8e12;\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */ var $21e4e023abb588c2$export$bb410559a65d3418;\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */ var $21e4e023abb588c2$export$e79764af6ffaeb8d;\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */ var $21e4e023abb588c2$export$1bd4c93ffb42e55e;\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */ var $21e4e023abb588c2$export$f84e8e69fd4488a5;\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */ var $21e4e023abb588c2$export$1ea939691cdc45b8;\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */ var $21e4e023abb588c2$export$6788812c4e6611e6;\n/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */ var $7f0bebb05133540b$export$1ea939691cdc45b8;\n$7f0bebb05133540b$export$1ea939691cdc45b8 = function isValid(version) {\n    return !isNaN(version) && version >= 1 && version <= 40;\n};\n\n\nvar $d479c387334094fb$export$a4d452c2363c8e12;\nvar $d479c387334094fb$export$9df7c29d562bab83;\nvar $d479c387334094fb$export$8f4bf8f7eb581284;\nvar $d479c387334094fb$export$4d318981b5a83836;\nvar $d479c387334094fb$export$376a9ed239d6c1c8;\nvar $d479c387334094fb$export$175f16aef75a4569;\nvar $d479c387334094fb$export$50b7f9bf92c74274;\nvar $d479c387334094fb$export$4ba5f52893b4ac97;\nconst $d479c387334094fb$var$numeric = '[0-9]+';\nconst $d479c387334094fb$var$alphanumeric = '[A-Z $%*+\\\\-./:]+';\nlet $d479c387334094fb$var$kanji = \"(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+\";\n$d479c387334094fb$var$kanji = $d479c387334094fb$var$kanji.replace(/u/g, '\\\\u');\nconst $d479c387334094fb$var$byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + $d479c387334094fb$var$kanji + ')(?:.|[\\r\\n]))+';\n$d479c387334094fb$export$a4d452c2363c8e12 = new RegExp($d479c387334094fb$var$kanji, 'g');\n$d479c387334094fb$export$9df7c29d562bab83 = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\n$d479c387334094fb$export$8f4bf8f7eb581284 = new RegExp($d479c387334094fb$var$byte, 'g');\n$d479c387334094fb$export$4d318981b5a83836 = new RegExp($d479c387334094fb$var$numeric, 'g');\n$d479c387334094fb$export$376a9ed239d6c1c8 = new RegExp($d479c387334094fb$var$alphanumeric, 'g');\nconst $d479c387334094fb$var$TEST_KANJI = new RegExp('^' + $d479c387334094fb$var$kanji + '$');\nconst $d479c387334094fb$var$TEST_NUMERIC = new RegExp('^' + $d479c387334094fb$var$numeric + '$');\nconst $d479c387334094fb$var$TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\n$d479c387334094fb$export$175f16aef75a4569 = function testKanji(str) {\n    return $d479c387334094fb$var$TEST_KANJI.test(str);\n};\n$d479c387334094fb$export$50b7f9bf92c74274 = function testNumeric(str) {\n    return $d479c387334094fb$var$TEST_NUMERIC.test(str);\n};\n$d479c387334094fb$export$4ba5f52893b4ac97 = function testAlphanumeric(str) {\n    return $d479c387334094fb$var$TEST_ALPHANUMERIC.test(str);\n};\n\n\n$21e4e023abb588c2$export$4d318981b5a83836 = {\n    id: 'Numeric',\n    bit: 1,\n    ccBits: [\n        10,\n        12,\n        14\n    ]\n};\n$21e4e023abb588c2$export$376a9ed239d6c1c8 = {\n    id: 'Alphanumeric',\n    bit: 2,\n    ccBits: [\n        9,\n        11,\n        13\n    ]\n};\n$21e4e023abb588c2$export$8f4bf8f7eb581284 = {\n    id: 'Byte',\n    bit: 4,\n    ccBits: [\n        8,\n        16,\n        16\n    ]\n};\n$21e4e023abb588c2$export$a4d452c2363c8e12 = {\n    id: 'Kanji',\n    bit: 8,\n    ccBits: [\n        8,\n        10,\n        12\n    ]\n};\n$21e4e023abb588c2$export$bb410559a65d3418 = {\n    bit: -1\n};\n$21e4e023abb588c2$export$e79764af6ffaeb8d = function getCharCountIndicator(mode, version) {\n    if (!mode.ccBits) throw new Error('Invalid mode: ' + mode);\n    if (!$7f0bebb05133540b$export$1ea939691cdc45b8(version)) throw new Error('Invalid version: ' + version);\n    if (version >= 1 && version < 10) return mode.ccBits[0];\n    else if (version < 27) return mode.ccBits[1];\n    return mode.ccBits[2];\n};\n$21e4e023abb588c2$export$1bd4c93ffb42e55e = function getBestModeForData(dataStr) {\n    if ($d479c387334094fb$export$50b7f9bf92c74274(dataStr)) return $21e4e023abb588c2$export$4d318981b5a83836;\n    else if ($d479c387334094fb$export$4ba5f52893b4ac97(dataStr)) return $21e4e023abb588c2$export$376a9ed239d6c1c8;\n    else if ($d479c387334094fb$export$175f16aef75a4569(dataStr)) return $21e4e023abb588c2$export$a4d452c2363c8e12;\n    else return $21e4e023abb588c2$export$8f4bf8f7eb581284;\n};\n$21e4e023abb588c2$export$f84e8e69fd4488a5 = function toString(mode) {\n    if (mode && mode.id) return mode.id;\n    throw new Error('Invalid mode');\n};\n$21e4e023abb588c2$export$1ea939691cdc45b8 = function isValid(mode) {\n    return mode && mode.bit && mode.ccBits;\n};\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */ function $21e4e023abb588c2$var$fromString(string) {\n    if (typeof string !== 'string') throw new Error('Param is not a string');\n    const lcStr = string.toLowerCase();\n    switch(lcStr){\n        case 'numeric':\n            return $21e4e023abb588c2$export$4d318981b5a83836;\n        case 'alphanumeric':\n            return $21e4e023abb588c2$export$376a9ed239d6c1c8;\n        case 'kanji':\n            return $21e4e023abb588c2$export$a4d452c2363c8e12;\n        case 'byte':\n            return $21e4e023abb588c2$export$8f4bf8f7eb581284;\n        default:\n            throw new Error('Unknown mode: ' + string);\n    }\n}\n$21e4e023abb588c2$export$6788812c4e6611e6 = function from(value, defaultValue) {\n    if ($21e4e023abb588c2$export$1ea939691cdc45b8(value)) return value;\n    try {\n        return $21e4e023abb588c2$var$fromString(value);\n    } catch (e) {\n        return defaultValue;\n    }\n};\n\n\n\n// Generator polynomial used to encode version information\nconst $140eee110ea3b5f9$var$G18 = 7973;\nconst $140eee110ea3b5f9$var$G18_BCH = $c1483b5b1305278f$export$ed1d66da50968976($140eee110ea3b5f9$var$G18);\nfunction $140eee110ea3b5f9$var$getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n    for(let currentVersion = 1; currentVersion <= 40; currentVersion++){\n        if (length <= $140eee110ea3b5f9$export$55b283886ec2d3fb(currentVersion, errorCorrectionLevel, mode)) return currentVersion;\n    }\n    return undefined;\n}\nfunction $140eee110ea3b5f9$var$getReservedBitsCount(mode, version) {\n    // Character count indicator + mode indicator bits\n    return $21e4e023abb588c2$export$e79764af6ffaeb8d(mode, version) + 4;\n}\nfunction $140eee110ea3b5f9$var$getTotalBitsFromDataArray(segments, version) {\n    let totalBits = 0;\n    segments.forEach(function(data) {\n        const reservedBits = $140eee110ea3b5f9$var$getReservedBitsCount(data.mode, version);\n        totalBits += reservedBits + data.getBitsLength();\n    });\n    return totalBits;\n}\nfunction $140eee110ea3b5f9$var$getBestVersionForMixedData(segments, errorCorrectionLevel) {\n    for(let currentVersion = 1; currentVersion <= 40; currentVersion++){\n        const length = $140eee110ea3b5f9$var$getTotalBitsFromDataArray(segments, currentVersion);\n        if (length <= $140eee110ea3b5f9$export$55b283886ec2d3fb(currentVersion, errorCorrectionLevel, $21e4e023abb588c2$export$bb410559a65d3418)) return currentVersion;\n    }\n    return undefined;\n}\n$140eee110ea3b5f9$export$6788812c4e6611e6 = function from(value, defaultValue) {\n    if ($7f0bebb05133540b$export$1ea939691cdc45b8(value)) return parseInt(value, 10);\n    return defaultValue;\n};\n$140eee110ea3b5f9$export$55b283886ec2d3fb = function getCapacity(version, errorCorrectionLevel, mode) {\n    if (!$7f0bebb05133540b$export$1ea939691cdc45b8(version)) throw new Error('Invalid QR Code version');\n    // Use Byte mode as default\n    if (typeof mode === 'undefined') mode = $21e4e023abb588c2$export$8f4bf8f7eb581284;\n    // Total codewords for this QR code version (Data + Error correction)\n    const totalCodewords = $c1483b5b1305278f$export$b05dac13c7a35c32(version);\n    // Total number of error correction codewords\n    const ecTotalCodewords = $7f809b8d8966b945$export$683d1b3e8a1a8438(version, errorCorrectionLevel);\n    // Total number of data codewords\n    const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    if (mode === $21e4e023abb588c2$export$bb410559a65d3418) return dataTotalCodewordsBits;\n    const usableBits = dataTotalCodewordsBits - $140eee110ea3b5f9$var$getReservedBitsCount(mode, version);\n    // Return max number of storable codewords\n    switch(mode){\n        case $21e4e023abb588c2$export$4d318981b5a83836:\n            return Math.floor(usableBits / 10 * 3);\n        case $21e4e023abb588c2$export$376a9ed239d6c1c8:\n            return Math.floor(usableBits / 11 * 2);\n        case $21e4e023abb588c2$export$a4d452c2363c8e12:\n            return Math.floor(usableBits / 13);\n        case $21e4e023abb588c2$export$8f4bf8f7eb581284:\n        default:\n            return Math.floor(usableBits / 8);\n    }\n};\n$140eee110ea3b5f9$export$264e969aa7a8ff7e = function getBestVersionForData(data, errorCorrectionLevel) {\n    let seg;\n    const ecl = $d22956012916b666$export$6788812c4e6611e6(errorCorrectionLevel, $d22956012916b666$export$3a1a48c8f6ef640e);\n    if (Array.isArray(data)) {\n        if (data.length > 1) return $140eee110ea3b5f9$var$getBestVersionForMixedData(data, ecl);\n        if (data.length === 0) return 1;\n        seg = data[0];\n    } else seg = data;\n    return $140eee110ea3b5f9$var$getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n};\n$140eee110ea3b5f9$export$eee5438974ef6f0e = function getEncodedBits(version) {\n    if (!$7f0bebb05133540b$export$1ea939691cdc45b8(version) || version < 7) throw new Error('Invalid QR Code version');\n    let d = version << 12;\n    while($c1483b5b1305278f$export$ed1d66da50968976(d) - $140eee110ea3b5f9$var$G18_BCH >= 0)d ^= $140eee110ea3b5f9$var$G18 << $c1483b5b1305278f$export$ed1d66da50968976(d) - $140eee110ea3b5f9$var$G18_BCH;\n    return version << 12 | d;\n};\n\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */ var $1f894980312e7d2a$export$eee5438974ef6f0e;\n\nconst $1f894980312e7d2a$var$G15 = 1335;\nconst $1f894980312e7d2a$var$G15_MASK = 21522;\nconst $1f894980312e7d2a$var$G15_BCH = $c1483b5b1305278f$export$ed1d66da50968976($1f894980312e7d2a$var$G15);\n$1f894980312e7d2a$export$eee5438974ef6f0e = function getEncodedBits(errorCorrectionLevel, mask) {\n    const data = errorCorrectionLevel.bit << 3 | mask;\n    let d = data << 10;\n    while($c1483b5b1305278f$export$ed1d66da50968976(d) - $1f894980312e7d2a$var$G15_BCH >= 0)d ^= $1f894980312e7d2a$var$G15 << $c1483b5b1305278f$export$ed1d66da50968976(d) - $1f894980312e7d2a$var$G15_BCH;\n    // xor final data with mask pattern in order to ensure that\n    // no combination of Error Correction Level and data mask pattern\n    // will result in an all-zero data string\n    return (data << 10 | d) ^ $1f894980312e7d2a$var$G15_MASK;\n};\n\n\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */ var $06b6d7424b9df2df$export$571d59b505e6bb4e;\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */ var $06b6d7424b9df2df$export$3004f64547af360e;\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */ var $06b6d7424b9df2df$export$89ab1afb9839589b;\n\nvar $7a5bacf4a539441d$exports = {};\n\nfunction $7a5bacf4a539441d$var$NumericData(data) {\n    this.mode = $21e4e023abb588c2$export$4d318981b5a83836;\n    this.data = data.toString();\n}\n$7a5bacf4a539441d$var$NumericData.getBitsLength = function getBitsLength(length) {\n    return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);\n};\n$7a5bacf4a539441d$var$NumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\n$7a5bacf4a539441d$var$NumericData.prototype.getBitsLength = function getBitsLength() {\n    return $7a5bacf4a539441d$var$NumericData.getBitsLength(this.data.length);\n};\n$7a5bacf4a539441d$var$NumericData.prototype.write = function write(bitBuffer) {\n    let i, group, value;\n    // The input data string is divided into groups of three digits,\n    // and each group is converted to its 10-bit binary equivalent.\n    for(i = 0; i + 3 <= this.data.length; i += 3){\n        group = this.data.substr(i, 3);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, 10);\n    }\n    // If the number of input digits is not an exact multiple of three,\n    // the final one or two digits are converted to 4 or 7 bits respectively.\n    const remainingNum = this.data.length - i;\n    if (remainingNum > 0) {\n        group = this.data.substr(i);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, remainingNum * 3 + 1);\n    }\n};\n$7a5bacf4a539441d$exports = $7a5bacf4a539441d$var$NumericData;\n\n\nvar $f6549c884fd9ace3$exports = {};\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */ const $f6549c884fd9ace3$var$ALPHA_NUM_CHARS = [\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    ' ',\n    '$',\n    '%',\n    '*',\n    '+',\n    '-',\n    '.',\n    '/',\n    ':'\n];\nfunction $f6549c884fd9ace3$var$AlphanumericData(data) {\n    this.mode = $21e4e023abb588c2$export$376a9ed239d6c1c8;\n    this.data = data;\n}\n$f6549c884fd9ace3$var$AlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\n$f6549c884fd9ace3$var$AlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\n$f6549c884fd9ace3$var$AlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return $f6549c884fd9ace3$var$AlphanumericData.getBitsLength(this.data.length);\n};\n$f6549c884fd9ace3$var$AlphanumericData.prototype.write = function write(bitBuffer) {\n    let i;\n    // Input data characters are divided into groups of two characters\n    // and encoded as 11-bit binary codes.\n    for(i = 0; i + 2 <= this.data.length; i += 2){\n        // The character value of the first character is multiplied by 45\n        let value = $f6549c884fd9ace3$var$ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n        // The character value of the second digit is added to the product\n        value += $f6549c884fd9ace3$var$ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n        // The sum is then stored as 11-bit binary number\n        bitBuffer.put(value, 11);\n    }\n    // If the number of input data characters is not a multiple of two,\n    // the character value of the final character is encoded as a 6-bit binary number.\n    if (this.data.length % 2) bitBuffer.put($f6549c884fd9ace3$var$ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n};\n$f6549c884fd9ace3$exports = $f6549c884fd9ace3$var$AlphanumericData;\n\n\nvar $47f01312d66828cb$exports = {};\n\nfunction $47f01312d66828cb$var$ByteData(data) {\n    this.mode = $21e4e023abb588c2$export$8f4bf8f7eb581284;\n    if (typeof data === 'string') this.data = new TextEncoder().encode(data);\n    else this.data = new Uint8Array(data);\n}\n$47f01312d66828cb$var$ByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n};\n$47f01312d66828cb$var$ByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\n$47f01312d66828cb$var$ByteData.prototype.getBitsLength = function getBitsLength() {\n    return $47f01312d66828cb$var$ByteData.getBitsLength(this.data.length);\n};\n$47f01312d66828cb$var$ByteData.prototype.write = function(bitBuffer) {\n    for(let i = 0, l = this.data.length; i < l; i++)bitBuffer.put(this.data[i], 8);\n};\n$47f01312d66828cb$exports = $47f01312d66828cb$var$ByteData;\n\n\nvar $668803520f2d7445$exports = {};\n\n\nfunction $668803520f2d7445$var$KanjiData(data) {\n    this.mode = $21e4e023abb588c2$export$a4d452c2363c8e12;\n    this.data = data;\n}\n$668803520f2d7445$var$KanjiData.getBitsLength = function getBitsLength(length) {\n    return length * 13;\n};\n$668803520f2d7445$var$KanjiData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\n$668803520f2d7445$var$KanjiData.prototype.getBitsLength = function getBitsLength() {\n    return $668803520f2d7445$var$KanjiData.getBitsLength(this.data.length);\n};\n$668803520f2d7445$var$KanjiData.prototype.write = function(bitBuffer) {\n    let i;\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n    // These byte values are shifted from the JIS X 0208 values.\n    // JIS X 0208 gives details of the shift coded representation.\n    for(i = 0; i < this.data.length; i++){\n        let value = $c1483b5b1305278f$export$43dd553ecded716d(this.data[i]);\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n        if (value >= 0x8140 && value <= 0x9FFC) // Subtract 0x8140 from Shift JIS value\n        value -= 0x8140;\n        else if (value >= 0xE040 && value <= 0xEBBF) // Subtract 0xC140 from Shift JIS value\n        value -= 0xC140;\n        else throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' + 'Make sure your charset is UTF-8');\n        // Multiply most significant byte of result by 0xC0\n        // and add least significant byte to product\n        value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff);\n        // Convert result to a 13-bit binary string\n        bitBuffer.put(value, 13);\n    }\n};\n$668803520f2d7445$exports = $668803520f2d7445$var$KanjiData;\n\n\n\n\nvar $6c1abb425b529163$exports = {};\n'use strict';\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/ var $6c1abb425b529163$var$dijkstra = {\n    single_source_shortest_paths: function(graph, s, d) {\n        // Predecessor map for each node that has been encountered.\n        // node ID => predecessor node ID\n        var predecessors = {};\n        // Costs of shortest paths from s to all nodes encountered.\n        // node ID => cost\n        var costs = {};\n        costs[s] = 0;\n        // Costs of shortest paths from s to all nodes encountered; differs from\n        // `costs` in that it provides easy access to the node that currently has\n        // the known shortest path from s.\n        // XXX: Do we actually need both `costs` and `open`?\n        var open = $6c1abb425b529163$var$dijkstra.PriorityQueue.make();\n        open.push(s, 0);\n        var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\n        while(!open.empty()){\n            // In the nodes remaining in graph that have a known cost from s,\n            // find the node, u, that currently has the shortest path from s.\n            closest = open.pop();\n            u = closest.value;\n            cost_of_s_to_u = closest.cost;\n            // Get nodes adjacent to u...\n            adjacent_nodes = graph[u] || {};\n            // ...and explore the edges that connect u to those nodes, updating\n            // the cost of the shortest paths to any or all of those nodes as\n            // necessary. v is the node across the current edge from u.\n            for(v in adjacent_nodes)if (adjacent_nodes.hasOwnProperty(v)) {\n                // Get the cost of the edge running from u to v.\n                cost_of_e = adjacent_nodes[v];\n                // Cost of s to u plus the cost of u to v across e--this is *a*\n                // cost from s to v that may or may not be less than the current\n                // known cost to v.\n                cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n                // If we haven't visited v yet OR if the current known cost from s to\n                // v is greater than the new cost we just found (cost of s to u plus\n                // cost of u to v across e), update v's cost in the cost list and\n                // update v's predecessor in the predecessor list (it's now u).\n                cost_of_s_to_v = costs[v];\n                first_visit = typeof costs[v] === 'undefined';\n                if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n                    costs[v] = cost_of_s_to_u_plus_cost_of_e;\n                    open.push(v, cost_of_s_to_u_plus_cost_of_e);\n                    predecessors[v] = u;\n                }\n            }\n        }\n        if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n            var msg = [\n                'Could not find a path from ',\n                s,\n                ' to ',\n                d,\n                '.'\n            ].join('');\n            throw new Error(msg);\n        }\n        return predecessors;\n    },\n    extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n        var nodes = [];\n        var u = d;\n        var predecessor;\n        while(u){\n            nodes.push(u);\n            predecessor = predecessors[u];\n            u = predecessors[u];\n        }\n        nodes.reverse();\n        return nodes;\n    },\n    find_path: function(graph, s, d) {\n        var predecessors = $6c1abb425b529163$var$dijkstra.single_source_shortest_paths(graph, s, d);\n        return $6c1abb425b529163$var$dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\n    },\n    /**\n   * A very naive priority queue implementation.\n   */ PriorityQueue: {\n        make: function(opts) {\n            var T = $6c1abb425b529163$var$dijkstra.PriorityQueue, t = {}, key;\n            opts = opts || {};\n            for(key in T)if (T.hasOwnProperty(key)) t[key] = T[key];\n            t.queue = [];\n            t.sorter = opts.sorter || T.default_sorter;\n            return t;\n        },\n        default_sorter: function(a, b) {\n            return a.cost - b.cost;\n        },\n        /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */ push: function(value, cost) {\n            var item = {\n                value: value,\n                cost: cost\n            };\n            this.queue.push(item);\n            this.queue.sort(this.sorter);\n        },\n        /**\n     * Return the highest priority element in the queue.\n     */ pop: function() {\n            return this.queue.shift();\n        },\n        empty: function() {\n            return this.queue.length === 0;\n        }\n    }\n};\n$6c1abb425b529163$exports = $6c1abb425b529163$var$dijkstra;\n\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */ function $06b6d7424b9df2df$var$getStringByteLength(str) {\n    return unescape(encodeURIComponent(str)).length;\n}\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */ function $06b6d7424b9df2df$var$getSegments(regex, mode, str) {\n    const segments = [];\n    let result;\n    while((result = regex.exec(str)) !== null)segments.push({\n        data: result[0],\n        index: result.index,\n        mode: mode,\n        length: result[0].length\n    });\n    return segments;\n}\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */ function $06b6d7424b9df2df$var$getSegmentsFromString(dataStr) {\n    const numSegs = $06b6d7424b9df2df$var$getSegments($d479c387334094fb$export$4d318981b5a83836, $21e4e023abb588c2$export$4d318981b5a83836, dataStr);\n    const alphaNumSegs = $06b6d7424b9df2df$var$getSegments($d479c387334094fb$export$376a9ed239d6c1c8, $21e4e023abb588c2$export$376a9ed239d6c1c8, dataStr);\n    let byteSegs;\n    let kanjiSegs;\n    if ($c1483b5b1305278f$export$ce5b1274f8597fa0()) {\n        byteSegs = $06b6d7424b9df2df$var$getSegments($d479c387334094fb$export$8f4bf8f7eb581284, $21e4e023abb588c2$export$8f4bf8f7eb581284, dataStr);\n        kanjiSegs = $06b6d7424b9df2df$var$getSegments($d479c387334094fb$export$a4d452c2363c8e12, $21e4e023abb588c2$export$a4d452c2363c8e12, dataStr);\n    } else {\n        byteSegs = $06b6d7424b9df2df$var$getSegments($d479c387334094fb$export$9df7c29d562bab83, $21e4e023abb588c2$export$8f4bf8f7eb581284, dataStr);\n        kanjiSegs = [];\n    }\n    const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n    return segs.sort(function(s1, s2) {\n        return s1.index - s2.index;\n    }).map(function(obj) {\n        return {\n            data: obj.data,\n            mode: obj.mode,\n            length: obj.length\n        };\n    });\n}\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */ function $06b6d7424b9df2df$var$getSegmentBitsLength(length, mode) {\n    switch(mode){\n        case $21e4e023abb588c2$export$4d318981b5a83836:\n            return $7a5bacf4a539441d$exports.getBitsLength(length);\n        case $21e4e023abb588c2$export$376a9ed239d6c1c8:\n            return $f6549c884fd9ace3$exports.getBitsLength(length);\n        case $21e4e023abb588c2$export$a4d452c2363c8e12:\n            return $668803520f2d7445$exports.getBitsLength(length);\n        case $21e4e023abb588c2$export$8f4bf8f7eb581284:\n            return $47f01312d66828cb$exports.getBitsLength(length);\n    }\n}\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */ function $06b6d7424b9df2df$var$mergeSegments(segs) {\n    return segs.reduce(function(acc, curr) {\n        const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n        if (prevSeg && prevSeg.mode === curr.mode) {\n            acc[acc.length - 1].data += curr.data;\n            return acc;\n        }\n        acc.push(curr);\n        return acc;\n    }, []);\n}\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */ function $06b6d7424b9df2df$var$buildNodes(segs) {\n    const nodes = [];\n    for(let i = 0; i < segs.length; i++){\n        const seg = segs[i];\n        switch(seg.mode){\n            case $21e4e023abb588c2$export$4d318981b5a83836:\n                nodes.push([\n                    seg,\n                    {\n                        data: seg.data,\n                        mode: $21e4e023abb588c2$export$376a9ed239d6c1c8,\n                        length: seg.length\n                    },\n                    {\n                        data: seg.data,\n                        mode: $21e4e023abb588c2$export$8f4bf8f7eb581284,\n                        length: seg.length\n                    }\n                ]);\n                break;\n            case $21e4e023abb588c2$export$376a9ed239d6c1c8:\n                nodes.push([\n                    seg,\n                    {\n                        data: seg.data,\n                        mode: $21e4e023abb588c2$export$8f4bf8f7eb581284,\n                        length: seg.length\n                    }\n                ]);\n                break;\n            case $21e4e023abb588c2$export$a4d452c2363c8e12:\n                nodes.push([\n                    seg,\n                    {\n                        data: seg.data,\n                        mode: $21e4e023abb588c2$export$8f4bf8f7eb581284,\n                        length: $06b6d7424b9df2df$var$getStringByteLength(seg.data)\n                    }\n                ]);\n                break;\n            case $21e4e023abb588c2$export$8f4bf8f7eb581284:\n                nodes.push([\n                    {\n                        data: seg.data,\n                        mode: $21e4e023abb588c2$export$8f4bf8f7eb581284,\n                        length: $06b6d7424b9df2df$var$getStringByteLength(seg.data)\n                    }\n                ]);\n        }\n    }\n    return nodes;\n}\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */ function $06b6d7424b9df2df$var$buildGraph(nodes, version) {\n    const table = {};\n    const graph = {\n        start: {}\n    };\n    let prevNodeIds = [\n        'start'\n    ];\n    for(let i = 0; i < nodes.length; i++){\n        const nodeGroup = nodes[i];\n        const currentNodeIds = [];\n        for(let j = 0; j < nodeGroup.length; j++){\n            const node = nodeGroup[j];\n            const key = '' + i + j;\n            currentNodeIds.push(key);\n            table[key] = {\n                node: node,\n                lastCount: 0\n            };\n            graph[key] = {};\n            for(let n = 0; n < prevNodeIds.length; n++){\n                const prevNodeId = prevNodeIds[n];\n                if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n                    graph[prevNodeId][key] = $06b6d7424b9df2df$var$getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - $06b6d7424b9df2df$var$getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n                    table[prevNodeId].lastCount += node.length;\n                } else {\n                    if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;\n                    graph[prevNodeId][key] = $06b6d7424b9df2df$var$getSegmentBitsLength(node.length, node.mode) + 4 + $21e4e023abb588c2$export$e79764af6ffaeb8d(node.mode, version) // switch cost\n                    ;\n                }\n            }\n        }\n        prevNodeIds = currentNodeIds;\n    }\n    for(let n = 0; n < prevNodeIds.length; n++)graph[prevNodeIds[n]].end = 0;\n    return {\n        map: graph,\n        table: table\n    };\n}\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */ function $06b6d7424b9df2df$var$buildSingleSegment(data, modesHint) {\n    let mode;\n    const bestMode = $21e4e023abb588c2$export$1bd4c93ffb42e55e(data);\n    mode = $21e4e023abb588c2$export$6788812c4e6611e6(modesHint, bestMode);\n    // Make sure data can be encoded\n    if (mode !== $21e4e023abb588c2$export$8f4bf8f7eb581284 && mode.bit < bestMode.bit) throw new Error('\"' + data + '\"' + ' cannot be encoded with mode ' + $21e4e023abb588c2$export$f84e8e69fd4488a5(mode) + '.\\n Suggested mode is: ' + $21e4e023abb588c2$export$f84e8e69fd4488a5(bestMode));\n    // Use Mode.BYTE if Kanji support is disabled\n    if (mode === $21e4e023abb588c2$export$a4d452c2363c8e12 && !$c1483b5b1305278f$export$ce5b1274f8597fa0()) mode = $21e4e023abb588c2$export$8f4bf8f7eb581284;\n    switch(mode){\n        case $21e4e023abb588c2$export$4d318981b5a83836:\n            return new $7a5bacf4a539441d$exports(data);\n        case $21e4e023abb588c2$export$376a9ed239d6c1c8:\n            return new $f6549c884fd9ace3$exports(data);\n        case $21e4e023abb588c2$export$a4d452c2363c8e12:\n            return new $668803520f2d7445$exports(data);\n        case $21e4e023abb588c2$export$8f4bf8f7eb581284:\n            return new $47f01312d66828cb$exports(data);\n    }\n}\n$06b6d7424b9df2df$export$571d59b505e6bb4e = function fromArray(array) {\n    return array.reduce(function(acc, seg) {\n        if (typeof seg === 'string') acc.push($06b6d7424b9df2df$var$buildSingleSegment(seg, null));\n        else if (seg.data) acc.push($06b6d7424b9df2df$var$buildSingleSegment(seg.data, seg.mode));\n        return acc;\n    }, []);\n};\n$06b6d7424b9df2df$export$3004f64547af360e = function fromString(data, version) {\n    const segs = $06b6d7424b9df2df$var$getSegmentsFromString(data, $c1483b5b1305278f$export$ce5b1274f8597fa0());\n    const nodes = $06b6d7424b9df2df$var$buildNodes(segs);\n    const graph = $06b6d7424b9df2df$var$buildGraph(nodes, version);\n    const path = $6c1abb425b529163$exports.find_path(graph.map, 'start', 'end');\n    const optimizedSegs = [];\n    for(let i = 1; i < path.length - 1; i++)optimizedSegs.push(graph.table[path[i]].node);\n    return $06b6d7424b9df2df$export$571d59b505e6bb4e($06b6d7424b9df2df$var$mergeSegments(optimizedSegs));\n};\n$06b6d7424b9df2df$export$89ab1afb9839589b = function rawSplit(data) {\n    return $06b6d7424b9df2df$export$571d59b505e6bb4e($06b6d7424b9df2df$var$getSegmentsFromString(data, $c1483b5b1305278f$export$ce5b1274f8597fa0()));\n};\n\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/ /**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */ function $5f2127839fe01a16$var$setupFinderPattern(matrix, version) {\n    const size = matrix.size;\n    const pos = $b4836838cc492349$export$c39457c570f2b189(version);\n    for(let i = 0; i < pos.length; i++){\n        const row = pos[i][0];\n        const col = pos[i][1];\n        for(let r = -1; r <= 7; r++){\n            if (row + r <= -1 || size <= row + r) continue;\n            for(let c = -1; c <= 7; c++){\n                if (col + c <= -1 || size <= col + c) continue;\n                if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) matrix.set(row + r, col + c, true, true);\n                else matrix.set(row + r, col + c, false, true);\n            }\n        }\n    }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */ function $5f2127839fe01a16$var$setupTimingPattern(matrix) {\n    const size = matrix.size;\n    for(let r = 8; r < size - 8; r++){\n        const value = r % 2 === 0;\n        matrix.set(r, 6, value, true);\n        matrix.set(6, r, value, true);\n    }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */ function $5f2127839fe01a16$var$setupAlignmentPattern(matrix, version) {\n    const pos = $c20e4b3185223698$export$c39457c570f2b189(version);\n    for(let i = 0; i < pos.length; i++){\n        const row = pos[i][0];\n        const col = pos[i][1];\n        for(let r = -2; r <= 2; r++){\n            for(let c = -2; c <= 2; c++)if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) matrix.set(row + r, col + c, true, true);\n            else matrix.set(row + r, col + c, false, true);\n        }\n    }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */ function $5f2127839fe01a16$var$setupVersionInfo(matrix, version) {\n    const size = matrix.size;\n    const bits = $140eee110ea3b5f9$export$eee5438974ef6f0e(version);\n    let row, col, mod;\n    for(let i = 0; i < 18; i++){\n        row = Math.floor(i / 3);\n        col = i % 3 + size - 8 - 3;\n        mod = (bits >> i & 1) === 1;\n        matrix.set(row, col, mod, true);\n        matrix.set(col, row, mod, true);\n    }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */ function $5f2127839fe01a16$var$setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n    const size = matrix.size;\n    const bits = $1f894980312e7d2a$export$eee5438974ef6f0e(errorCorrectionLevel, maskPattern);\n    let i, mod;\n    for(i = 0; i < 15; i++){\n        mod = (bits >> i & 1) === 1;\n        // vertical\n        if (i < 6) matrix.set(i, 8, mod, true);\n        else if (i < 8) matrix.set(i + 1, 8, mod, true);\n        else matrix.set(size - 15 + i, 8, mod, true);\n        // horizontal\n        if (i < 8) matrix.set(8, size - i - 1, mod, true);\n        else if (i < 9) matrix.set(8, 15 - i - 1 + 1, mod, true);\n        else matrix.set(8, 15 - i - 1, mod, true);\n    }\n    // fixed module\n    matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */ function $5f2127839fe01a16$var$setupData(matrix, data) {\n    const size = matrix.size;\n    let inc = -1;\n    let row = size - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for(let col = size - 1; col > 0; col -= 2){\n        if (col === 6) col--;\n        while(true){\n            for(let c = 0; c < 2; c++)if (!matrix.isReserved(row, col - c)) {\n                let dark = false;\n                if (byteIndex < data.length) dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n                matrix.set(row, col - c, dark);\n                bitIndex--;\n                if (bitIndex === -1) {\n                    byteIndex++;\n                    bitIndex = 7;\n                }\n            }\n            row += inc;\n            if (row < 0 || size <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */ function $5f2127839fe01a16$var$createData(version, errorCorrectionLevel, segments) {\n    // Prepare data buffer\n    const buffer = new $22a6389bcfc83921$exports();\n    segments.forEach(function(data) {\n        // prefix data with mode indicator (4 bits)\n        buffer.put(data.mode.bit, 4);\n        // Prefix data with character count indicator.\n        // The character count indicator is a string of bits that represents the\n        // number of characters that are being encoded.\n        // The character count indicator must be placed after the mode indicator\n        // and must be a certain number of bits long, depending on the QR version\n        // and data mode\n        // @see {@link Mode.getCharCountIndicator}.\n        buffer.put(data.getLength(), $21e4e023abb588c2$export$e79764af6ffaeb8d(data.mode, version));\n        // add binary data sequence to buffer\n        data.write(buffer);\n    });\n    // Calculate required number of bits\n    const totalCodewords = $c1483b5b1305278f$export$b05dac13c7a35c32(version);\n    const ecTotalCodewords = $7f809b8d8966b945$export$683d1b3e8a1a8438(version, errorCorrectionLevel);\n    const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    // Add a terminator.\n    // If the bit string is shorter than the total number of required bits,\n    // a terminator of up to four 0s must be added to the right side of the string.\n    // If the bit string is more than four bits shorter than the required number of bits,\n    // add four 0s to the end.\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) buffer.put(0, 4);\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\n    // are needed to reach the required number of bits.\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\n    while(buffer.getLengthInBits() % 8 !== 0)buffer.putBit(0);\n    // Add pad bytes if the string is still shorter than the total number of required bits.\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n    // and 00010001 (0x11) alternately.\n    const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n    for(let i = 0; i < remainingByte; i++)buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n    return $5f2127839fe01a16$var$createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */ function $5f2127839fe01a16$var$createCodewords(bitBuffer, version, errorCorrectionLevel) {\n    // Total codewords for this QR code version (Data + Error correction)\n    const totalCodewords = $c1483b5b1305278f$export$b05dac13c7a35c32(version);\n    // Total number of error correction codewords\n    const ecTotalCodewords = $7f809b8d8966b945$export$683d1b3e8a1a8438(version, errorCorrectionLevel);\n    // Total number of data codewords\n    const dataTotalCodewords = totalCodewords - ecTotalCodewords;\n    // Total number of blocks\n    const ecTotalBlocks = $7f809b8d8966b945$export$41a1fc627aca72b9(version, errorCorrectionLevel);\n    // Calculate how many blocks each group should contain\n    const blocksInGroup2 = totalCodewords % ecTotalBlocks;\n    const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n    const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n    const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n    const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n    // Number of EC codewords is the same for both groups\n    const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n    const rs = new $06a1abce65162dc0$exports(ecCount);\n    let offset = 0;\n    const dcData = new Array(ecTotalBlocks);\n    const ecData = new Array(ecTotalBlocks);\n    let maxDataSize = 0;\n    const buffer = new Uint8Array(bitBuffer.buffer);\n    // Divide the buffer into the required number of blocks\n    for(let b = 0; b < ecTotalBlocks; b++){\n        const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n        // extract a block of data from buffer\n        dcData[b] = buffer.slice(offset, offset + dataSize);\n        // Calculate EC codewords for this data block\n        ecData[b] = rs.encode(dcData[b]);\n        offset += dataSize;\n        maxDataSize = Math.max(maxDataSize, dataSize);\n    }\n    // Create final data\n    // Interleave the data and error correction codewords from each block\n    const data = new Uint8Array(totalCodewords);\n    let index = 0;\n    let i, r;\n    // Add data codewords\n    for(i = 0; i < maxDataSize; i++){\n        for(r = 0; r < ecTotalBlocks; r++)if (i < dcData[r].length) data[index++] = dcData[r][i];\n    }\n    // Apped EC codewords\n    for(i = 0; i < ecCount; i++)for(r = 0; r < ecTotalBlocks; r++)data[index++] = ecData[r][i];\n    return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */ function $5f2127839fe01a16$var$createSymbol(data, version, errorCorrectionLevel, maskPattern) {\n    let segments;\n    if (Array.isArray(data)) segments = $06b6d7424b9df2df$export$571d59b505e6bb4e(data);\n    else if (typeof data === 'string') {\n        let estimatedVersion = version;\n        if (!estimatedVersion) {\n            const rawSegments = $06b6d7424b9df2df$export$89ab1afb9839589b(data);\n            // Estimate best version that can contain raw splitted segments\n            estimatedVersion = $140eee110ea3b5f9$export$264e969aa7a8ff7e(rawSegments, errorCorrectionLevel);\n        }\n        // Build optimized segments\n        // If estimated version is undefined, try with the highest version\n        segments = $06b6d7424b9df2df$export$3004f64547af360e(data, estimatedVersion || 40);\n    } else throw new Error('Invalid data');\n    // Get the min version that can contain data\n    const bestVersion = $140eee110ea3b5f9$export$264e969aa7a8ff7e(segments, errorCorrectionLevel);\n    // If no version is found, data cannot be stored\n    if (!bestVersion) throw new Error('The amount of data is too big to be stored in a QR Code');\n    // If not specified, use min version as default\n    if (!version) version = bestVersion;\n    else if (version < bestVersion) throw new Error(\"\\nThe chosen QR Code version cannot contain this amount of data.\\nMinimum version required to store current data is: \" + bestVersion + '.\\n');\n    const dataBits = $5f2127839fe01a16$var$createData(version, errorCorrectionLevel, segments);\n    // Allocate matrix buffer\n    const moduleCount = $c1483b5b1305278f$export$8d4a06d3facd414b(version);\n    const modules = new $3c0264e2c9c64d36$exports(moduleCount);\n    // Add function modules\n    $5f2127839fe01a16$var$setupFinderPattern(modules, version);\n    $5f2127839fe01a16$var$setupTimingPattern(modules);\n    $5f2127839fe01a16$var$setupAlignmentPattern(modules, version);\n    // Add temporary dummy bits for format info just to set them as reserved.\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n    // since the masking operation must be performed only on the encoding region.\n    // These blocks will be replaced with correct values later in code.\n    $5f2127839fe01a16$var$setupFormatInfo(modules, errorCorrectionLevel, 0);\n    if (version >= 7) $5f2127839fe01a16$var$setupVersionInfo(modules, version);\n    // Add data codewords\n    $5f2127839fe01a16$var$setupData(modules, dataBits);\n    if (isNaN(maskPattern)) // Find best mask pattern\n    maskPattern = $1edc2624fba191d0$export$fe9625aaceb0e563(modules, $5f2127839fe01a16$var$setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n    // Apply mask pattern\n    $1edc2624fba191d0$export$a1c9aa9c0e8ba394(maskPattern, modules);\n    // Replace format info bits with correct values\n    $5f2127839fe01a16$var$setupFormatInfo(modules, errorCorrectionLevel, maskPattern);\n    return {\n        modules: modules,\n        version: version,\n        errorCorrectionLevel: errorCorrectionLevel,\n        maskPattern: maskPattern,\n        segments: segments\n    };\n}\n$5f2127839fe01a16$export$185802fd694ee1f5 = function create(data, options) {\n    if (typeof data === 'undefined' || data === '') throw new Error('No input text');\n    let errorCorrectionLevel = $d22956012916b666$export$3a1a48c8f6ef640e;\n    let version;\n    let mask;\n    if (typeof options !== 'undefined') {\n        // Use higher error correction level as default\n        errorCorrectionLevel = $d22956012916b666$export$6788812c4e6611e6(options.errorCorrectionLevel, $d22956012916b666$export$3a1a48c8f6ef640e);\n        version = $140eee110ea3b5f9$export$6788812c4e6611e6(options.version);\n        mask = $1edc2624fba191d0$export$6788812c4e6611e6(options.maskPattern);\n        if (options.toSJISFunc) $c1483b5b1305278f$export$6733b14783f975c2(options.toSJISFunc);\n    }\n    return $5f2127839fe01a16$var$createSymbol(data, version, errorCorrectionLevel, mask);\n};\n\n\nvar $53c344a5283c422c$export$b3890eb0ae9dca99;\nvar $53c344a5283c422c$export$c3e5526bbaf70a25;\nvar $c890d85f31194258$export$d2312e68e1f5ad00;\nvar $c890d85f31194258$export$5cdac61cf538712e;\nvar $c890d85f31194258$export$c3a1a1f268a8142b;\nvar $c890d85f31194258$export$83136f57c739c5f3;\nfunction $c890d85f31194258$var$hex2rgba(hex) {\n    if (typeof hex === 'number') hex = hex.toString();\n    if (typeof hex !== 'string') throw new Error('Color should be defined as hex string');\n    let hexCode = hex.slice().replace('#', '').split('');\n    if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) throw new Error('Invalid hex color: ' + hex);\n    // Convert from short to long form (fff -> ffffff)\n    if (hexCode.length === 3 || hexCode.length === 4) hexCode = Array.prototype.concat.apply([], hexCode.map(function(c) {\n        return [\n            c,\n            c\n        ];\n    }));\n    // Add default alpha value\n    if (hexCode.length === 6) hexCode.push('F', 'F');\n    const hexValue = parseInt(hexCode.join(''), 16);\n    return {\n        r: hexValue >> 24 & 255,\n        g: hexValue >> 16 & 255,\n        b: hexValue >> 8 & 255,\n        a: hexValue & 255,\n        hex: '#' + hexCode.slice(0, 6).join('')\n    };\n}\n$c890d85f31194258$export$d2312e68e1f5ad00 = function getOptions(options) {\n    if (!options) options = {};\n    if (!options.color) options.color = {};\n    const margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;\n    const width = options.width && options.width >= 21 ? options.width : undefined;\n    const scale = options.scale || 4;\n    return {\n        width: width,\n        scale: width ? 4 : scale,\n        margin: margin,\n        color: {\n            dark: $c890d85f31194258$var$hex2rgba(options.color.dark || '#000000ff'),\n            light: $c890d85f31194258$var$hex2rgba(options.color.light || '#ffffffff')\n        },\n        type: options.type,\n        rendererOpts: options.rendererOpts || {}\n    };\n};\n$c890d85f31194258$export$5cdac61cf538712e = function getScale(qrSize, opts) {\n    return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;\n};\n$c890d85f31194258$export$c3a1a1f268a8142b = function getImageWidth(qrSize, opts) {\n    const scale = $c890d85f31194258$export$5cdac61cf538712e(qrSize, opts);\n    return Math.floor((qrSize + opts.margin * 2) * scale);\n};\n$c890d85f31194258$export$83136f57c739c5f3 = function qrToImageData(imgData, qr, opts) {\n    const size = qr.modules.size;\n    const data = qr.modules.data;\n    const scale = $c890d85f31194258$export$5cdac61cf538712e(size, opts);\n    const symbolSize = Math.floor((size + opts.margin * 2) * scale);\n    const scaledMargin = opts.margin * scale;\n    const palette = [\n        opts.color.light,\n        opts.color.dark\n    ];\n    for(let i = 0; i < symbolSize; i++)for(let j = 0; j < symbolSize; j++){\n        let posDst = (i * symbolSize + j) * 4;\n        let pxColor = opts.color.light;\n        if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n            const iSrc = Math.floor((i - scaledMargin) / scale);\n            const jSrc = Math.floor((j - scaledMargin) / scale);\n            pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n        }\n        imgData[posDst++] = pxColor.r;\n        imgData[posDst++] = pxColor.g;\n        imgData[posDst++] = pxColor.b;\n        imgData[posDst] = pxColor.a;\n    }\n};\n\n\nfunction $53c344a5283c422c$var$clearCanvas(ctx, canvas, size) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (!canvas.style) canvas.style = {};\n    canvas.height = size;\n    canvas.width = size;\n    canvas.style.height = size + 'px';\n    canvas.style.width = size + 'px';\n}\nfunction $53c344a5283c422c$var$getCanvasElement() {\n    try {\n        return document.createElement('canvas');\n    } catch (e) {\n        throw new Error('You need to specify a canvas element');\n    }\n}\n$53c344a5283c422c$export$b3890eb0ae9dca99 = function render(qrData, canvas, options) {\n    let opts = options;\n    let canvasEl = canvas;\n    if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n        opts = canvas;\n        canvas = undefined;\n    }\n    if (!canvas) canvasEl = $53c344a5283c422c$var$getCanvasElement();\n    opts = $c890d85f31194258$export$d2312e68e1f5ad00(opts);\n    const size = $c890d85f31194258$export$c3a1a1f268a8142b(qrData.modules.size, opts);\n    const ctx = canvasEl.getContext('2d');\n    const image = ctx.createImageData(size, size);\n    $c890d85f31194258$export$83136f57c739c5f3(image.data, qrData, opts);\n    $53c344a5283c422c$var$clearCanvas(ctx, canvasEl, size);\n    ctx.putImageData(image, 0, 0);\n    return canvasEl;\n};\n$53c344a5283c422c$export$c3e5526bbaf70a25 = function renderToDataURL(qrData, canvas, options) {\n    let opts = options;\n    if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n        opts = canvas;\n        canvas = undefined;\n    }\n    if (!opts) opts = {};\n    const canvasEl = $53c344a5283c422c$export$b3890eb0ae9dca99(qrData, canvas, opts);\n    const type = opts.type || 'image/png';\n    const rendererOpts = opts.rendererOpts || {};\n    return canvasEl.toDataURL(type, rendererOpts.quality);\n};\n\n\nvar $3112213e4acbe245$export$b3890eb0ae9dca99;\n\nfunction $3112213e4acbe245$var$getColorAttrib(color, attrib) {\n    const alpha = color.a / 255;\n    const str = attrib + '=\"' + color.hex + '\"';\n    return alpha < 1 ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"' : str;\n}\nfunction $3112213e4acbe245$var$svgCmd(cmd, x, y) {\n    let str = cmd + x;\n    if (typeof y !== 'undefined') str += ' ' + y;\n    return str;\n}\nfunction $3112213e4acbe245$var$qrToPath(data, size, margin) {\n    let path = '';\n    let moveBy = 0;\n    let newRow = false;\n    let lineLength = 0;\n    for(let i = 0; i < data.length; i++){\n        const col = Math.floor(i % size);\n        const row = Math.floor(i / size);\n        if (!col && !newRow) newRow = true;\n        if (data[i]) {\n            lineLength++;\n            if (!(i > 0 && col > 0 && data[i - 1])) {\n                path += newRow ? $3112213e4acbe245$var$svgCmd('M', col + margin, 0.5 + row + margin) : $3112213e4acbe245$var$svgCmd('m', moveBy, 0);\n                moveBy = 0;\n                newRow = false;\n            }\n            if (!(col + 1 < size && data[i + 1])) {\n                path += $3112213e4acbe245$var$svgCmd('h', lineLength);\n                lineLength = 0;\n            }\n        } else moveBy++;\n    }\n    return path;\n}\n$3112213e4acbe245$export$b3890eb0ae9dca99 = function render(qrData, options, cb) {\n    const opts = $c890d85f31194258$export$d2312e68e1f5ad00(options);\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n    const qrcodesize = size + opts.margin * 2;\n    const bg = !opts.color.light.a ? '' : '<path ' + $3112213e4acbe245$var$getColorAttrib(opts.color.light, 'fill') + ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n    const path = '<path ' + $3112213e4acbe245$var$getColorAttrib(opts.color.dark, 'stroke') + ' d=\"' + $3112213e4acbe245$var$qrToPath(data, size, opts.margin) + '\"/>';\n    const viewBox = 'viewBox=\"0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n    const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n    const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n    if (typeof cb === 'function') cb(null, svgTag);\n    return svgTag;\n};\n\n\nfunction $092c7e998bebe629$var$renderCanvas(renderFunc, canvas, text, opts, cb) {\n    const args = [].slice.call(arguments, 1);\n    const argsNum = args.length;\n    const isLastArgCb = typeof args[argsNum - 1] === 'function';\n    if (!isLastArgCb && !$e6419622b12b5572$exports()) throw new Error('Callback required as last argument');\n    if (isLastArgCb) {\n        if (argsNum < 2) throw new Error('Too few arguments provided');\n        if (argsNum === 2) {\n            cb = text;\n            text = canvas;\n            canvas = opts = undefined;\n        } else if (argsNum === 3) {\n            if (canvas.getContext && typeof cb === 'undefined') {\n                cb = opts;\n                opts = undefined;\n            } else {\n                cb = opts;\n                opts = text;\n                text = canvas;\n                canvas = undefined;\n            }\n        }\n    } else {\n        if (argsNum < 1) throw new Error('Too few arguments provided');\n        if (argsNum === 1) {\n            text = canvas;\n            canvas = opts = undefined;\n        } else if (argsNum === 2 && !canvas.getContext) {\n            opts = text;\n            text = canvas;\n            canvas = undefined;\n        }\n        return new Promise(function(resolve, reject) {\n            try {\n                const data = $5f2127839fe01a16$export$185802fd694ee1f5(text, opts);\n                resolve(renderFunc(data, canvas, opts));\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        const data = $5f2127839fe01a16$export$185802fd694ee1f5(text, opts);\n        cb(null, renderFunc(data, canvas, opts));\n    } catch (e) {\n        cb(e);\n    }\n}\n$092c7e998bebe629$export$185802fd694ee1f5 = $5f2127839fe01a16$export$185802fd694ee1f5;\n$092c7e998bebe629$export$f87f6982d1fd4f81 = $092c7e998bebe629$var$renderCanvas.bind(null, $53c344a5283c422c$export$b3890eb0ae9dca99);\n$092c7e998bebe629$export$723e4939e5a27c8 = $092c7e998bebe629$var$renderCanvas.bind(null, $53c344a5283c422c$export$c3e5526bbaf70a25);\n$092c7e998bebe629$export$f84e8e69fd4488a5 = $092c7e998bebe629$var$renderCanvas.bind(null, function(data, _, opts) {\n    return $3112213e4acbe245$export$b3890eb0ae9dca99(data, opts);\n});\n\n\n// ======== Element References ========\nconst $c1ce9d969bfa6909$var$xorModeBtn = document.getElementById('xorModeBtn');\nconst $c1ce9d969bfa6909$var$wordSpinnerModeBtn = document.getElementById('wordSpinnerModeBtn');\nconst $c1ce9d969bfa6909$var$emojiModeBtn = document.getElementById('emojiModeBtn');\nconst $c1ce9d969bfa6909$var$keywordSection = document.getElementById('keywordSection');\nconst $c1ce9d969bfa6909$var$keywordInput = document.getElementById('keywordInput');\nconst $c1ce9d969bfa6909$var$inputText = document.getElementById('inputText');\nconst $c1ce9d969bfa6909$var$outputText = document.getElementById('outputText');\nconst $c1ce9d969bfa6909$var$copyButton = document.getElementById('copyButton');\nconst $c1ce9d969bfa6909$var$clearButton = document.getElementById('clearButton');\n// Help Modal Elements\nconst $c1ce9d969bfa6909$var$helpBtn = document.getElementById('helpBtn');\nconst $c1ce9d969bfa6909$var$helpModal = document.getElementById('helpModal');\nconst $c1ce9d969bfa6909$var$closeBtn = $c1ce9d969bfa6909$var$helpModal.querySelector('.close-btn');\nconst $c1ce9d969bfa6909$var$helpContent = document.getElementById('helpContent');\n// NEW: Donate Modal Elements\nconst $c1ce9d969bfa6909$var$supportTrigger = document.getElementById('supportTrigger');\nconst $c1ce9d969bfa6909$var$donateModal = document.getElementById('donateModal');\nconst $c1ce9d969bfa6909$var$donateCloseBtn = document.getElementById('donateCloseBtn');\nconst $c1ce9d969bfa6909$var$generateQrBtn = document.getElementById('generateQrBtn');\nconst $c1ce9d969bfa6909$var$donateAmountInput = document.getElementById('donateAmount');\nconst $c1ce9d969bfa6909$var$qrResultArea = document.getElementById('qrResultArea');\nconst $c1ce9d969bfa6909$var$qrInstruction = document.getElementById('qrInstruction');\nconst $c1ce9d969bfa6909$var$qrImage = document.getElementById('promptpayQrImage');\nconst $c1ce9d969bfa6909$var$qrAmountDisplay = document.getElementById('qrAmountDisplay');\nlet $c1ce9d969bfa6909$var$currentMode = null;\nlet $c1ce9d969bfa6909$var$toastTimeout = null;\n// ======== Toast Notification Function ========\nfunction $c1ce9d969bfa6909$var$showToast(message, duration = 3000, isError = false) {\n    // Clear existing toast\n    const existingToast = document.querySelector('.toast-notification');\n    if (existingToast) {\n        clearTimeout($c1ce9d969bfa6909$var$toastTimeout);\n        existingToast.remove();\n    }\n    // Create new toast\n    const toast = document.createElement('div');\n    toast.textContent = message;\n    toast.className = 'toast-notification';\n    if (isError) {\n        toast.classList.add('error-toast'); // Use class for styling errors\n        toast.style.backgroundColor = 'rgba(244, 67, 54, 0.85)';\n    }\n    document.body.appendChild(toast);\n    // Animation timeout\n    $c1ce9d969bfa6909$var$toastTimeout = setTimeout(()=>{\n        toast.style.opacity = '0';\n        setTimeout(()=>{\n            if (toast.parentElement) toast.remove();\n        }, 300);\n    }, duration - 300);\n}\n// ######################################################################\n// ########   CORE ENCRYPTION/DECRYPTION LOGIC (UNCHANGED)        ########\n// ######################################################################\nconst $c1ce9d969bfa6909$var$ALLOWED_CHARS = \"\\u0E01\\u0E02\\u0E04\\u0E06\\u0E07\\u0E08\\u0E09\\u0E0A\\u0E0B\\u0E0C\\u0E0D\\u0E0E\\u0E0F\\u0E10\\u0E11\\u0E12\\u0E13\\u0E14\\u0E15\\u0E16\\u0E17\\u0E18\\u0E19\\u0E1A\\u0E1B\\u0E1C\\u0E1D\\u0E1E\\u0E1F\\u0E20\\u0E21\\u0E22\\u0E23\\u0E25\\u0E27\\u0E28\\u0E29\\u0E2A\\u0E2B\\u0E2C\\u0E2D\\u0E2E\\u0E24\\u0E46\\u0E30\\u0E31\\u0E32\\u0E34\\u0E35\\u0E36\\u0E37\\u0E38\\u0E39\\u0E47\\u0E40\\u0E41\\u0E42\\u0E43\\u0E44\\u0E45\\u0E33\\u0E48\\u0E49\\u0E4A\\u0E4BabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-=[]{}|;:,./<>?\\u0E50\\u03B1\\u03B2\\u03B3\\u03B4\\u03B5\\u03B6\\u03B7\\u03B8\\u03B9\\u03BA\\u03BB\\u03BC\\u03BD\\u03BE\\u03BF\\u03C0\\u03C1\\u03C3\\u03C4\\u03C5\\u03C6\\u03C7\\u03C8\\u03C9\\u0391\\u0392\\u0393\\u0394\\u0395\\u0396\\u0397\\u0398\\u0399\\u039A\\u039B\\u039C\\u039D\\u039E\\u039F\\u03A0\\u03A1\\u03A3\\u03A4\\u03A5\\u03A6\\u03A7\\u03A8\\u03A9\";\nconst $c1ce9d969bfa6909$var$DEFAULT_KEYWORD = 'jornjud';\nconst $c1ce9d969bfa6909$var$DEFAULT_PREFIX = '~';\nconst $c1ce9d969bfa6909$var$SEED_LENGTH = 4;\nfunction $c1ce9d969bfa6909$var$generateShortSeed() {\n    return Math.random().toString(36).slice(-$c1ce9d969bfa6909$var$SEED_LENGTH).padStart($c1ce9d969bfa6909$var$SEED_LENGTH, '0');\n}\nfunction $c1ce9d969bfa6909$var$createPRNG(seed) {\n    const seedHash = [\n        ...seed\n    ].reduce((hash, ch)=>hash * 31 + ch.charCodeAt(0) & 0x7fffffff, 0);\n    let state = seedHash;\n    return ()=>{\n        state = state * 1103515245 + 12345 & 0x7fffffff;\n        return state / 0x80000000;\n    };\n}\nconst $c1ce9d969bfa6909$var$pigpenEmojis = [\n    \"\\uD83D\\uDE00\",\n    \"\\uD83D\\uDE01\",\n    \"\\uD83D\\uDE02\",\n    \"\\uD83E\\uDD23\",\n    \"\\uD83D\\uDE03\",\n    \"\\uD83D\\uDE04\",\n    \"\\uD83D\\uDE05\",\n    \"\\uD83D\\uDE06\",\n    \"\\uD83D\\uDE09\",\n    \"\\uD83D\\uDE0A\",\n    \"\\uD83D\\uDE0B\",\n    \"\\uD83D\\uDE0E\",\n    \"\\uD83D\\uDE0D\",\n    \"\\uD83D\\uDE18\",\n    \"\\uD83D\\uDE17\",\n    \"\\uD83D\\uDE19\",\n    \"\\uD83D\\uDE1A\",\n    \"\\uD83D\\uDE42\",\n    \"\\uD83E\\uDD17\",\n    \"\\uD83E\\uDD29\",\n    \"\\uD83E\\uDD14\",\n    \"\\uD83E\\uDD28\",\n    \"\\uD83D\\uDE10\",\n    \"\\uD83D\\uDE11\",\n    \"\\uD83D\\uDE36\",\n    \"\\uD83D\\uDE44\",\n    \"\\uD83D\\uDE0F\",\n    \"\\uD83D\\uDE23\",\n    \"\\uD83D\\uDE25\",\n    \"\\uD83D\\uDE2E\",\n    \"\\uD83E\\uDD10\",\n    \"\\uD83D\\uDE2F\",\n    \"\\uD83D\\uDE2A\",\n    \"\\uD83D\\uDE2B\",\n    \"\\uD83D\\uDE34\",\n    \"\\uD83D\\uDE0C\",\n    \"\\uD83D\\uDE1B\",\n    \"\\uD83D\\uDE1C\",\n    \"\\uD83D\\uDE1D\",\n    \"\\uD83E\\uDD24\",\n    \"\\uD83D\\uDE12\",\n    \"\\uD83D\\uDE13\",\n    \"\\uD83D\\uDE14\",\n    \"\\uD83D\\uDE15\",\n    \"\\uD83D\\uDE43\",\n    \"\\uD83E\\uDD11\",\n    \"\\uD83D\\uDE32\",\n    \"\\u2639\\uFE0F\",\n    \"\\uD83D\\uDE41\",\n    \"\\uD83D\\uDE16\",\n    \"\\uD83D\\uDE1E\",\n    \"\\uD83D\\uDE1F\",\n    \"\\uD83D\\uDE24\",\n    \"\\uD83D\\uDE22\",\n    \"\\uD83D\\uDE2D\",\n    \"\\uD83D\\uDE26\",\n    \"\\uD83D\\uDE27\",\n    \"\\uD83D\\uDE28\",\n    \"\\uD83D\\uDE29\",\n    \"\\uD83E\\uDD2F\",\n    \"\\uD83D\\uDE2C\",\n    \"\\uD83D\\uDE30\",\n    \"\\uD83D\\uDE31\",\n    \"\\uD83E\\uDD75\",\n    \"\\uD83E\\uDD76\",\n    \"\\uD83D\\uDE33\",\n    \"\\uD83E\\uDD2A\",\n    \"\\uD83D\\uDE35\",\n    \"\\uD83D\\uDE21\",\n    \"\\uD83D\\uDE20\",\n    \"\\uD83E\\uDD2C\",\n    \"\\uD83D\\uDE37\",\n    \"\\uD83E\\uDD12\",\n    \"\\uD83E\\uDD15\",\n    \"\\uD83E\\uDD22\",\n    \"\\uD83E\\uDD2E\",\n    \"\\uD83E\\uDD27\",\n    \"\\uD83D\\uDE07\",\n    \"\\uD83E\\uDD70\",\n    \"\\uD83E\\uDD20\",\n    \"\\uD83E\\uDD21\",\n    \"\\uD83E\\uDD73\",\n    \"\\uD83E\\uDD74\",\n    \"\\uD83E\\uDD7A\",\n    \"\\uD83E\\uDD25\",\n    \"\\uD83E\\uDD2B\",\n    \"\\uD83E\\uDD2D\",\n    \"\\uD83E\\uDDD0\",\n    \"\\uD83E\\uDD13\",\n    \"\\uD83D\\uDE08\",\n    \"\\uD83D\\uDC7F\",\n    \"\\uD83D\\uDC79\",\n    \"\\uD83D\\uDC7A\",\n    \"\\uD83D\\uDC80\",\n    \"\\uD83D\\uDC7B\",\n    \"\\uD83D\\uDC7D\",\n    \"\\uD83E\\uDD16\",\n    \"\\uD83D\\uDCA9\",\n    \"\\uD83D\\uDE3A\",\n    \"\\uD83D\\uDE38\",\n    \"\\uD83D\\uDE39\",\n    \"\\uD83D\\uDE3B\",\n    \"\\uD83D\\uDE3C\",\n    \"\\uD83D\\uDE3D\",\n    \"\\uD83D\\uDE40\",\n    \"\\uD83D\\uDE3F\",\n    \"\\uD83D\\uDE3E\",\n    \"\\uD83D\\uDC36\",\n    \"\\uD83D\\uDC31\",\n    \"\\uD83D\\uDC2D\",\n    \"\\uD83D\\uDC39\",\n    \"\\uD83D\\uDC30\",\n    \"\\uD83E\\uDD8A\",\n    \"\\uD83D\\uDC3B\",\n    \"\\uD83D\\uDC3C\",\n    \"\\uD83D\\uDC28\",\n    \"\\uD83D\\uDC2F\",\n    \"\\uD83E\\uDD81\",\n    \"\\uD83D\\uDC2E\",\n    \"\\uD83D\\uDC37\",\n    \"\\uD83D\\uDC3D\",\n    \"\\uD83D\\uDC38\",\n    \"\\uD83D\\uDC35\",\n    \"\\uD83D\\uDE48\",\n    \"\\uD83D\\uDE49\",\n    \"\\uD83D\\uDE4A\",\n    \"\\uD83D\\uDC12\",\n    \"\\uD83D\\uDC14\",\n    \"\\uD83D\\uDC27\",\n    \"\\uD83D\\uDC26\",\n    \"\\uD83D\\uDC24\",\n    \"\\uD83D\\uDC23\",\n    \"\\uD83D\\uDC25\",\n    \"\\uD83E\\uDD86\",\n    \"\\uD83E\\uDD85\",\n    \"\\uD83E\\uDD89\",\n    \"\\uD83E\\uDD87\",\n    \"\\uD83D\\uDC3A\",\n    \"\\uD83D\\uDC17\",\n    \"\\uD83D\\uDC34\",\n    \"\\uD83E\\uDD84\",\n    \"\\uD83D\\uDC1D\",\n    \"\\uD83D\\uDC1B\",\n    \"\\uD83E\\uDD8B\",\n    \"\\uD83D\\uDC0C\",\n    \"\\uD83D\\uDC1E\",\n    \"\\uD83D\\uDC1C\",\n    \"\\uD83E\\uDD97\",\n    \"\\uD83D\\uDD77\",\n    \"\\uD83D\\uDD78\",\n    \"\\uD83E\\uDD82\",\n    \"\\uD83D\\uDC22\",\n    \"\\uD83D\\uDC0D\",\n    \"\\uD83E\\uDD8E\",\n    \"\\uD83E\\uDD96\",\n    \"\\uD83E\\uDD95\",\n    \"\\uD83D\\uDC19\",\n    \"\\uD83E\\uDD91\",\n    \"\\uD83E\\uDD90\",\n    \"\\uD83E\\uDD80\",\n    \"\\uD83D\\uDC21\",\n    \"\\uD83D\\uDC20\",\n    \"\\uD83D\\uDC1F\",\n    \"\\uD83D\\uDC2C\",\n    \"\\uD83D\\uDC33\",\n    \"\\uD83D\\uDC0B\",\n    \"\\uD83E\\uDD88\",\n    \"\\uD83D\\uDC0A\",\n    \"\\uD83D\\uDC05\",\n    \"\\uD83D\\uDC06\",\n    \"\\uD83E\\uDD93\",\n    \"\\uD83E\\uDD8D\",\n    \"\\uD83D\\uDC18\",\n    \"\\uD83E\\uDD8F\",\n    \"\\uD83D\\uDC2A\",\n    \"\\uD83D\\uDC2B\",\n    \"\\uD83E\\uDD92\",\n    \"\\uD83E\\uDD98\",\n    \"\\uD83D\\uDC03\",\n    \"\\uD83D\\uDC02\",\n    \"\\uD83D\\uDC04\",\n    \"\\uD83D\\uDC0E\",\n    \"\\uD83D\\uDC16\",\n    \"\\uD83D\\uDC0F\",\n    \"\\uD83D\\uDC11\",\n    \"\\uD83D\\uDC10\",\n    \"\\uD83D\\uDC13\",\n    \"\\uD83E\\uDD83\",\n    \"\\uD83D\\uDD4A\",\n    \"\\uD83D\\uDC07\",\n    \"\\uD83D\\uDC01\",\n    \"\\uD83D\\uDC00\",\n    \"\\uD83D\\uDC3F\",\n    \"\\uD83E\\uDD94\",\n    \"\\uD83D\\uDC3E\",\n    \"\\uD83D\\uDC09\",\n    \"\\uD83D\\uDC32\",\n    \"\\uD83C\\uDF35\",\n    \"\\uD83C\\uDF84\",\n    \"\\uD83C\\uDF32\",\n    \"\\uD83C\\uDF33\",\n    \"\\uD83C\\uDF34\",\n    \"\\uD83C\\uDF31\",\n    \"\\uD83C\\uDF3F\",\n    \"\\u2618\\uFE0F\",\n    \"\\uD83C\\uDF40\",\n    \"\\uD83C\\uDF8D\",\n    \"\\uD83C\\uDF8B\",\n    \"\\uD83C\\uDF43\",\n    \"\\uD83C\\uDF42\",\n    \"\\uD83C\\uDF41\",\n    \"\\uD83C\\uDF44\",\n    \"\\uD83C\\uDF3E\",\n    \"\\uD83D\\uDC90\",\n    \"\\uD83C\\uDF37\",\n    \"\\uD83C\\uDF39\",\n    \"\\uD83E\\uDD40\",\n    \"\\uD83C\\uDF3A\",\n    \"\\uD83C\\uDF38\",\n    \"\\uD83C\\uDF3C\",\n    \"\\uD83C\\uDF3B\",\n    \"\\uD83C\\uDF1E\",\n    \"\\uD83C\\uDF1D\",\n    \"\\uD83C\\uDF1B\",\n    \"\\uD83C\\uDF1A\",\n    \"\\uD83C\\uDF1C\",\n    \"\\uD83C\\uDF19\",\n    \"\\u2B50\",\n    \"\\uD83C\\uDF1F\",\n    \"\\uD83D\\uDCAB\",\n    \"\\u2728\",\n    \"\\u26A1\",\n    \"\\u2604\\uFE0F\",\n    \"\\uD83D\\uDCA5\",\n    \"\\uD83D\\uDD25\",\n    \"\\uD83C\\uDF2A\",\n    \"\\uD83C\\uDF08\",\n    \"\\u2600\\uFE0F\",\n    \"\\uD83C\\uDF24\",\n    \"\\u26C5\",\n    \"\\uD83C\\uDF25\",\n    \"\\u2601\\uFE0F\",\n    \"\\uD83C\\uDF26\",\n    \"\\uD83C\\uDF27\",\n    \"\\u26C8\",\n    \"\\uD83C\\uDF29\",\n    \"\\uD83C\\uDF28\",\n    \"\\u2744\\uFE0F\",\n    \"\\u2603\\uFE0F\",\n    \"\\u26C4\",\n    \"\\uD83C\\uDF2C\",\n    \"\\uD83D\\uDCA8\",\n    \"\\uD83D\\uDCA7\",\n    \"\\uD83D\\uDCA6\",\n    \"\\u2614\",\n    \"\\u2602\\uFE0F\",\n    \"\\uD83C\\uDF0A\",\n    \"\\uD83C\\uDF2B\",\n    \"\\uD83C\\uDF4F\",\n    \"\\uD83C\\uDF4E\",\n    \"\\uD83C\\uDF50\",\n    \"\\uD83C\\uDF4A\",\n    \"\\uD83C\\uDF4B\",\n    \"\\uD83C\\uDF4C\",\n    \"\\uD83C\\uDF49\",\n    \"\\uD83C\\uDF47\",\n    \"\\uD83C\\uDF53\",\n    \"\\uD83C\\uDF48\",\n    \"\\uD83C\\uDF52\",\n    \"\\uD83C\\uDF51\",\n    \"\\uD83E\\uDD6D\",\n    \"\\uD83C\\uDF4D\",\n    \"\\uD83E\\uDD65\",\n    \"\\uD83E\\uDD5D\",\n    \"\\uD83C\\uDF45\",\n    \"\\uD83C\\uDF46\",\n    \"\\uD83E\\uDD51\",\n    \"\\uD83E\\uDD66\",\n    \"\\uD83E\\uDD6C\",\n    \"\\uD83E\\uDD52\",\n    \"\\uD83C\\uDF36\",\n    \"\\uD83C\\uDF3D\",\n    \"\\uD83E\\uDD55\",\n    \"\\uD83E\\uDD54\",\n    \"\\uD83C\\uDF60\",\n    \"\\uD83E\\uDD50\",\n    \"\\uD83C\\uDF5E\",\n    \"\\uD83E\\uDD56\",\n    \"\\uD83E\\uDD68\",\n    \"\\uD83E\\uDDC0\",\n    \"\\uD83E\\uDD5A\",\n    \"\\uD83C\\uDF73\",\n    \"\\uD83E\\uDD5E\",\n    \"\\uD83E\\uDD53\",\n    \"\\uD83E\\uDD69\",\n    \"\\uD83C\\uDF57\",\n    \"\\uD83C\\uDF56\",\n    \"\\uD83C\\uDF2D\",\n    \"\\uD83C\\uDF54\",\n    \"\\uD83C\\uDF5F\",\n    \"\\uD83C\\uDF55\",\n    \"\\uD83E\\uDD6A\",\n    \"\\uD83E\\uDD59\",\n    \"\\uD83C\\uDF2E\",\n    \"\\uD83C\\uDF2F\",\n    \"\\uD83E\\uDD57\",\n    \"\\uD83E\\uDD58\",\n    \"\\uD83C\\uDF5D\",\n    \"\\uD83C\\uDF5C\",\n    \"\\uD83C\\uDF72\",\n    \"\\uD83C\\uDF65\",\n    \"\\uD83E\\uDD60\",\n    \"\\uD83C\\uDF63\",\n    \"\\uD83C\\uDF71\",\n    \"\\uD83C\\uDF5B\",\n    \"\\uD83C\\uDF5A\",\n    \"\\uD83C\\uDF59\",\n    \"\\uD83C\\uDF58\",\n    \"\\uD83C\\uDF62\",\n    \"\\uD83C\\uDF61\",\n    \"\\uD83C\\uDF67\",\n    \"\\uD83C\\uDF68\",\n    \"\\uD83C\\uDF66\",\n    \"\\uD83E\\uDD67\",\n    \"\\uD83E\\uDDC1\",\n    \"\\uD83C\\uDF70\",\n    \"\\uD83C\\uDF82\",\n    \"\\uD83C\\uDF6E\",\n    \"\\uD83C\\uDF6D\",\n    \"\\uD83C\\uDF6C\",\n    \"\\uD83C\\uDF6B\",\n    \"\\uD83C\\uDF7F\",\n    \"\\uD83C\\uDF69\",\n    \"\\uD83C\\uDF6A\",\n    \"\\uD83C\\uDF30\",\n    \"\\uD83E\\uDD5C\",\n    \"\\uD83C\\uDF6F\",\n    \"\\uD83E\\uDD5B\",\n    \"\\uD83C\\uDF7C\",\n    \"\\u2615\",\n    \"\\uD83C\\uDF75\",\n    \"\\uD83E\\uDD64\",\n    \"\\uD83C\\uDF76\",\n    \"\\uD83C\\uDF7A\",\n    \"\\uD83C\\uDF7B\",\n    \"\\uD83E\\uDD42\",\n    \"\\uD83C\\uDF77\",\n    \"\\uD83E\\uDD43\",\n    \"\\uD83C\\uDF78\",\n    \"\\uD83C\\uDF79\",\n    \"\\uD83C\\uDF7E\",\n    \"\\uD83E\\uDD44\",\n    \"\\uD83C\\uDF74\",\n    \"\\uD83C\\uDF7D\",\n    \"\\uD83E\\uDD63\",\n    \"\\uD83E\\uDD61\",\n    \"\\uD83E\\uDD62\",\n    \"\\uD83D\\uDE97\",\n    \"\\uD83D\\uDE95\",\n    \"\\uD83D\\uDE99\",\n    \"\\uD83D\\uDE8C\",\n    \"\\uD83D\\uDE8E\",\n    \"\\uD83C\\uDFCE\",\n    \"\\uD83D\\uDE93\",\n    \"\\uD83D\\uDE91\",\n    \"\\uD83D\\uDE92\",\n    \"\\uD83D\\uDE90\",\n    \"\\uD83D\\uDE9A\",\n    \"\\uD83D\\uDE9B\",\n    \"\\uD83D\\uDE9C\",\n    \"\\uD83D\\uDEF4\",\n    \"\\uD83D\\uDEB2\",\n    \"\\uD83D\\uDEF5\",\n    \"\\uD83C\\uDFCD\",\n    \"\\uD83D\\uDEA8\",\n    \"\\uD83D\\uDE94\",\n    \"\\uD83D\\uDE8D\",\n    \"\\uD83D\\uDE98\",\n    \"\\uD83D\\uDE96\",\n    \"\\uD83D\\uDEA1\",\n    \"\\uD83D\\uDEA0\",\n    \"\\uD83D\\uDE9F\",\n    \"\\uD83D\\uDE83\",\n    \"\\uD83D\\uDE8B\",\n    \"\\uD83D\\uDE9E\",\n    \"\\uD83D\\uDE9D\",\n    \"\\uD83D\\uDE84\",\n    \"\\uD83D\\uDE85\",\n    \"\\uD83D\\uDE88\",\n    \"\\uD83D\\uDE82\",\n    \"\\uD83D\\uDE86\",\n    \"\\uD83D\\uDE87\",\n    \"\\uD83D\\uDE8A\",\n    \"\\uD83D\\uDE89\",\n    \"\\u2708\\uFE0F\",\n    \"\\uD83D\\uDEEB\",\n    \"\\uD83D\\uDEEC\",\n    \"\\uD83D\\uDEE9\",\n    \"\\uD83D\\uDCBA\",\n    \"\\uD83D\\uDEF0\",\n    \"\\uD83D\\uDE80\",\n    \"\\uD83D\\uDEF8\",\n    \"\\uD83D\\uDE81\",\n    \"\\uD83D\\uDEF6\",\n    \"\\u26F5\",\n    \"\\uD83D\\uDEA4\",\n    \"\\uD83D\\uDEE5\",\n    \"\\uD83D\\uDEF3\",\n    \"\\u26F4\",\n    \"\\uD83D\\uDEA2\",\n    \"\\u2693\",\n    \"\\uD83D\\uDEA7\",\n    \"\\u26FD\",\n    \"\\uD83D\\uDE8F\",\n    \"\\uD83D\\uDEA6\",\n    \"\\uD83D\\uDEA5\",\n    \"\\uD83D\\uDDFA\",\n    \"\\uD83D\\uDDFF\",\n    \"\\uD83D\\uDDFD\",\n    \"\\u26F2\",\n    \"\\uD83D\\uDDFC\",\n    \"\\uD83C\\uDFF0\",\n    \"\\uD83C\\uDFEF\",\n    \"\\uD83C\\uDFA1\",\n    \"\\uD83C\\uDFA2\",\n    \"\\uD83C\\uDFA0\",\n    \"\\u26F1\",\n    \"\\uD83C\\uDFD6\",\n    \"\\uD83C\\uDFDD\",\n    \"\\uD83C\\uDF0B\",\n    \"\\u26F0\",\n    \"\\uD83C\\uDFD4\",\n    \"\\uD83D\\uDDFB\",\n    \"\\uD83C\\uDFD5\",\n    \"\\u26FA\",\n    \"\\uD83C\\uDFE0\",\n    \"\\uD83C\\uDFE1\",\n    \"\\uD83C\\uDFD8\",\n    \"\\uD83C\\uDFDA\",\n    \"\\uD83C\\uDFD7\",\n    \"\\uD83C\\uDFED\",\n    \"\\uD83C\\uDFE2\",\n    \"\\uD83C\\uDFEC\",\n    \"\\uD83C\\uDFE3\",\n    \"\\uD83C\\uDFE4\",\n    \"\\uD83C\\uDFE5\",\n    \"\\uD83C\\uDFE6\",\n    \"\\uD83C\\uDFE8\",\n    \"\\uD83C\\uDFEA\",\n    \"\\uD83C\\uDFEB\",\n    \"\\uD83C\\uDFE9\",\n    \"\\uD83D\\uDC92\",\n    \"\\uD83C\\uDFDB\",\n    \"\\u26EA\",\n    \"\\uD83D\\uDD4C\",\n    \"\\uD83D\\uDD4D\",\n    \"\\uD83D\\uDD4B\",\n    \"\\u26E9\",\n    \"\\uD83D\\uDEE4\",\n    \"\\uD83D\\uDEE3\",\n    \"\\uD83D\\uDDFE\",\n    \"\\uD83C\\uDF91\",\n    \"\\uD83C\\uDFDE\",\n    \"\\uD83C\\uDF05\",\n    \"\\uD83C\\uDF04\",\n    \"\\uD83C\\uDF20\",\n    \"\\uD83C\\uDF87\",\n    \"\\uD83C\\uDF86\",\n    \"\\uD83C\\uDF07\",\n    \"\\uD83C\\uDF06\",\n    \"\\uD83C\\uDFD9\",\n    \"\\uD83C\\uDF03\",\n    \"\\uD83C\\uDF0C\",\n    \"\\uD83C\\uDF09\",\n    \"\\uD83C\\uDF01\"\n];\nconst $c1ce9d969bfa6909$var$charToEmoji = new Map();\nconst $c1ce9d969bfa6909$var$emojiToChar = new Map();\nfor(let i = 0; i < $c1ce9d969bfa6909$var$ALLOWED_CHARS.length && i < $c1ce9d969bfa6909$var$pigpenEmojis.length; i++){\n    $c1ce9d969bfa6909$var$charToEmoji.set($c1ce9d969bfa6909$var$ALLOWED_CHARS[i], $c1ce9d969bfa6909$var$pigpenEmojis[i]);\n    $c1ce9d969bfa6909$var$emojiToChar.set($c1ce9d969bfa6909$var$pigpenEmojis[i], $c1ce9d969bfa6909$var$ALLOWED_CHARS[i]);\n}\nfunction $c1ce9d969bfa6909$var$encodeEmoji(text) {\n    return [\n        ...text\n    ].map((ch)=>$c1ce9d969bfa6909$var$charToEmoji.get(ch) || ch).join('');\n}\nfunction $c1ce9d969bfa6909$var$decodeEmoji(text) {\n    const emojiArray = Array.from(text);\n    return emojiArray.map((emoji)=>$c1ce9d969bfa6909$var$emojiToChar.get(emoji) || emoji).join('');\n}\nfunction $c1ce9d969bfa6909$var$isAllEmoji(str) {\n    const emojiArray = Array.from(str);\n    return emojiArray.every((emoji)=>$c1ce9d969bfa6909$var$emojiToChar.has(emoji) || /\\s/.test(emoji));\n}\nfunction $c1ce9d969bfa6909$var$encodeWordspinner(text) {\n    const chars = [\n        ...text\n    ];\n    const seed = $c1ce9d969bfa6909$var$generateShortSeed();\n    const prng = $c1ce9d969bfa6909$var$createPRNG(seed);\n    const positions = chars.map((_, i)=>i).sort(()=>prng() - 0.5);\n    const shuffledText = positions.map((pos)=>chars[pos]).join('');\n    return `${$c1ce9d969bfa6909$var$DEFAULT_PREFIX}${seed}${shuffledText}`;\n}\nfunction $c1ce9d969bfa6909$var$decodeWordspinner(text) {\n    if (!text.startsWith($c1ce9d969bfa6909$var$DEFAULT_PREFIX) || text.length < $c1ce9d969bfa6909$var$DEFAULT_PREFIX.length + $c1ce9d969bfa6909$var$SEED_LENGTH) return text;\n    const seed = text.slice($c1ce9d969bfa6909$var$DEFAULT_PREFIX.length, $c1ce9d969bfa6909$var$DEFAULT_PREFIX.length + $c1ce9d969bfa6909$var$SEED_LENGTH);\n    const cipherText = text.slice($c1ce9d969bfa6909$var$DEFAULT_PREFIX.length + $c1ce9d969bfa6909$var$SEED_LENGTH);\n    if (cipherText.length === 0) return '';\n    const prng = $c1ce9d969bfa6909$var$createPRNG(seed);\n    const positions = [\n        ...Array(cipherText.length).keys()\n    ].sort(()=>prng() - 0.5);\n    const reversePositions = new Array(cipherText.length);\n    positions.forEach((shuffledIndex, originalIndex)=>{\n        reversePositions[shuffledIndex] = originalIndex;\n    });\n    return reversePositions.map((pos)=>cipherText[pos]).join('');\n}\nfunction $c1ce9d969bfa6909$var$isLikelyWordspinner(text) {\n    return text.startsWith($c1ce9d969bfa6909$var$DEFAULT_PREFIX) && text.length >= $c1ce9d969bfa6909$var$DEFAULT_PREFIX.length + $c1ce9d969bfa6909$var$SEED_LENGTH;\n}\nfunction $c1ce9d969bfa6909$var$encodeThaiEng(text, keyword) {\n    const seed = $c1ce9d969bfa6909$var$generateShortSeed();\n    const prng = $c1ce9d969bfa6909$var$createPRNG(seed + keyword);\n    return seed + [\n        ...text\n    ].map((ch)=>{\n        const idx = $c1ce9d969bfa6909$var$ALLOWED_CHARS.indexOf(ch);\n        if (idx === -1) return ch;\n        const randOffset = Math.floor(prng() * $c1ce9d969bfa6909$var$ALLOWED_CHARS.length);\n        return $c1ce9d969bfa6909$var$ALLOWED_CHARS[(idx + randOffset) % $c1ce9d969bfa6909$var$ALLOWED_CHARS.length];\n    }).join('');\n}\nfunction $c1ce9d969bfa6909$var$decodeThaiEng(encText, keyword) {\n    if (!encText || encText.length < $c1ce9d969bfa6909$var$SEED_LENGTH) return encText;\n    const seed = encText.slice(0, $c1ce9d969bfa6909$var$SEED_LENGTH);\n    const cipherText = encText.slice($c1ce9d969bfa6909$var$SEED_LENGTH);\n    if (cipherText.length === 0) return '';\n    const prng = $c1ce9d969bfa6909$var$createPRNG(seed + keyword);\n    return [\n        ...cipherText\n    ].map((ch)=>{\n        const idx = $c1ce9d969bfa6909$var$ALLOWED_CHARS.indexOf(ch);\n        if (idx === -1) return ch;\n        const randOffset = Math.floor(prng() * $c1ce9d969bfa6909$var$ALLOWED_CHARS.length);\n        return $c1ce9d969bfa6909$var$ALLOWED_CHARS[(idx - randOffset % $c1ce9d969bfa6909$var$ALLOWED_CHARS.length + $c1ce9d969bfa6909$var$ALLOWED_CHARS.length) % $c1ce9d969bfa6909$var$ALLOWED_CHARS.length];\n    }).join('');\n}\nfunction $c1ce9d969bfa6909$var$isLikelyEncoded(text) {\n    return /^[a-z0-9]{4}/.test(text) && text.length > $c1ce9d969bfa6909$var$SEED_LENGTH;\n}\n// ######################################################################\nfunction $c1ce9d969bfa6909$var$updateUI() {\n    if ($c1ce9d969bfa6909$var$keywordSection) $c1ce9d969bfa6909$var$keywordSection.style.display = $c1ce9d969bfa6909$var$currentMode === 'xor' ? 'flex' : 'none';\n}\nfunction $c1ce9d969bfa6909$var$processCurrentMode() {\n    const text = $c1ce9d969bfa6909$var$inputText.value;\n    let result = '';\n    let action = '';\n    if (text.trim() === '') {\n        if ($c1ce9d969bfa6909$var$outputText) $c1ce9d969bfa6909$var$outputText.value = '';\n        return;\n    }\n    if (!$c1ce9d969bfa6909$var$currentMode) {\n        if ($c1ce9d969bfa6909$var$outputText) $c1ce9d969bfa6909$var$outputText.value = \"\\u26A0\\uFE0F \\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E42\\u0E2B\\u0E21\\u0E14\\u0E01\\u0E48\\u0E2D\\u0E19\";\n        $c1ce9d969bfa6909$var$showToast(\"\\u26A0\\uFE0F \\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E42\\u0E2B\\u0E21\\u0E14\\u0E01\\u0E48\\u0E2D\\u0E19\", 3000);\n        return;\n    }\n    try {\n        if ($c1ce9d969bfa6909$var$currentMode === 'xor') {\n            let key = $c1ce9d969bfa6909$var$keywordInput.value.trim() || $c1ce9d969bfa6909$var$DEFAULT_KEYWORD;\n            action = $c1ce9d969bfa6909$var$isLikelyEncoded(text) ? \"\\uD83D\\uDD11 \\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E16\\u0E2D\\u0E14\\u0E23\\u0E2B\\u0E31\\u0E2A (Key)...\" : \"\\uD83D\\uDD12 \\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E40\\u0E02\\u0E49\\u0E32\\u0E23\\u0E2B\\u0E31\\u0E2A (Key)...\";\n            $c1ce9d969bfa6909$var$showToast(action);\n            result = $c1ce9d969bfa6909$var$isLikelyEncoded(text) ? $c1ce9d969bfa6909$var$decodeThaiEng(text, key) : $c1ce9d969bfa6909$var$encodeThaiEng(text.trim(), key);\n        } else if ($c1ce9d969bfa6909$var$currentMode === 'wordspinner') {\n            action = $c1ce9d969bfa6909$var$isLikelyWordspinner(text) ? \"\\uD83D\\uDD04 \\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E16\\u0E2D\\u0E14\\u0E23\\u0E2B\\u0E31\\u0E2A (Spinner)...\" : \"\\u2728 \\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E40\\u0E02\\u0E49\\u0E32\\u0E23\\u0E2B\\u0E31\\u0E2A (Spinner)...\";\n            $c1ce9d969bfa6909$var$showToast(action);\n            result = $c1ce9d969bfa6909$var$isLikelyWordspinner(text) ? $c1ce9d969bfa6909$var$decodeWordspinner(text) : $c1ce9d969bfa6909$var$encodeWordspinner(text.trim());\n        } else if ($c1ce9d969bfa6909$var$currentMode === 'emoji') {\n            action = $c1ce9d969bfa6909$var$isAllEmoji(text) ? \"\\uD83D\\uDE03 \\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E16\\u0E2D\\u0E14\\u0E23\\u0E2B\\u0E31\\u0E2A (Emoji)...\" : \"\\uD83E\\uDD2A \\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E40\\u0E02\\u0E49\\u0E32\\u0E23\\u0E2B\\u0E31\\u0E2A (Emoji)...\";\n            $c1ce9d969bfa6909$var$showToast(action);\n            result = $c1ce9d969bfa6909$var$isAllEmoji(text) ? $c1ce9d969bfa6909$var$decodeEmoji(text) : $c1ce9d969bfa6909$var$encodeEmoji(text.trim());\n        }\n        if ($c1ce9d969bfa6909$var$outputText) $c1ce9d969bfa6909$var$outputText.value = result;\n    } catch (error) {\n        console.error(\"Processing Error:\", error);\n        $c1ce9d969bfa6909$var$showToast(`\\u{274C} \\u{E40}\\u{E01}\\u{E34}\\u{E14}\\u{E02}\\u{E49}\\u{E2D}\\u{E1C}\\u{E34}\\u{E14}\\u{E1E}\\u{E25}\\u{E32}\\u{E14}: ${error.message}`, 4000, true);\n        if ($c1ce9d969bfa6909$var$outputText) $c1ce9d969bfa6909$var$outputText.value = \"\\u0E40\\u0E01\\u0E34\\u0E14\\u0E02\\u0E49\\u0E2D\\u0E1C\\u0E34\\u0E14\\u0E1E\\u0E25\\u0E32\\u0E14!\";\n    }\n}\n// Event Listeners for mode buttons\n[\n    $c1ce9d969bfa6909$var$xorModeBtn,\n    $c1ce9d969bfa6909$var$wordSpinnerModeBtn,\n    $c1ce9d969bfa6909$var$emojiModeBtn\n].forEach((btn)=>{\n    if (!btn) return;\n    btn.addEventListener('click', ()=>{\n        const newMode = btn.id.replace('ModeBtn', '').toLowerCase();\n        if ($c1ce9d969bfa6909$var$currentMode === newMode) return;\n        $c1ce9d969bfa6909$var$currentMode = newMode;\n        document.querySelectorAll('.mode-btn').forEach((b)=>b.classList.remove('active'));\n        btn.classList.add('active');\n        $c1ce9d969bfa6909$var$updateUI();\n        $c1ce9d969bfa6909$var$processCurrentMode();\n        let modeName = btn.textContent.trim();\n        $c1ce9d969bfa6909$var$showToast(`\\u{2705} \\u{E40}\\u{E1B}\\u{E25}\\u{E35}\\u{E48}\\u{E22}\\u{E19}\\u{E40}\\u{E1B}\\u{E47}\\u{E19}\\u{E42}\\u{E2B}\\u{E21}\\u{E14} ${modeName}`);\n    });\n});\nif ($c1ce9d969bfa6909$var$inputText) $c1ce9d969bfa6909$var$inputText.addEventListener('input', $c1ce9d969bfa6909$var$processCurrentMode);\nif ($c1ce9d969bfa6909$var$keywordInput) $c1ce9d969bfa6909$var$keywordInput.addEventListener('input', ()=>{\n    if ($c1ce9d969bfa6909$var$currentMode === 'xor') $c1ce9d969bfa6909$var$processCurrentMode();\n});\n// Action Buttons\nif ($c1ce9d969bfa6909$var$copyButton) $c1ce9d969bfa6909$var$copyButton.addEventListener('click', ()=>{\n    if (!$c1ce9d969bfa6909$var$outputText || !$c1ce9d969bfa6909$var$outputText.value) {\n        $c1ce9d969bfa6909$var$showToast(\"\\u2753 \\u0E44\\u0E21\\u0E48\\u0E21\\u0E35\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\\u0E43\\u0E2B\\u0E49\\u0E04\\u0E31\\u0E14\\u0E25\\u0E2D\\u0E01\", 2000);\n        return;\n    }\n    navigator.clipboard.writeText($c1ce9d969bfa6909$var$outputText.value).then(()=>{\n        $c1ce9d969bfa6909$var$showToast(\"\\uD83D\\uDCCB \\u0E04\\u0E31\\u0E14\\u0E25\\u0E2D\\u0E01\\u0E44\\u0E1B\\u0E22\\u0E31\\u0E07\\u0E04\\u0E25\\u0E34\\u0E1B\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E14\\u0E41\\u0E25\\u0E49\\u0E27\");\n    }).catch((err)=>{\n        $c1ce9d969bfa6909$var$showToast(\"\\u274C \\u0E04\\u0E31\\u0E14\\u0E25\\u0E2D\\u0E01\\u0E44\\u0E21\\u0E48\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\", 3000, true);\n        console.error('Clipboard API failed: ', err);\n    });\n});\nif ($c1ce9d969bfa6909$var$clearButton) $c1ce9d969bfa6909$var$clearButton.addEventListener('click', ()=>{\n    if ($c1ce9d969bfa6909$var$inputText) $c1ce9d969bfa6909$var$inputText.value = '';\n    if ($c1ce9d969bfa6909$var$outputText) $c1ce9d969bfa6909$var$outputText.value = '';\n    $c1ce9d969bfa6909$var$showToast(\"\\uD83E\\uDDF9 \\u0E25\\u0E49\\u0E32\\u0E07\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\\u0E41\\u0E25\\u0E49\\u0E27\");\n    if ($c1ce9d969bfa6909$var$inputText) $c1ce9d969bfa6909$var$inputText.focus();\n});\n// ======== Modal Logic (Help & Donate) ========\n// --- Help Modal ---\nfunction $c1ce9d969bfa6909$var$showHelp() {\n    if (!$c1ce9d969bfa6909$var$helpContent) return;\n    $c1ce9d969bfa6909$var$helpContent.innerHTML = `\n        <div><h3><i class=\"fas fa-key\"></i> Key Translator Mode</h3><p>\\u{E43}\\u{E2A}\\u{E48}\\u{E02}\\u{E49}\\u{E2D}\\u{E04}\\u{E27}\\u{E32}\\u{E21}\\u{E41}\\u{E25}\\u{E30} Keyword (\\u{E2B}\\u{E32}\\u{E01}\\u{E40}\\u{E27}\\u{E49}\\u{E19}\\u{E27}\\u{E48}\\u{E32}\\u{E07}\\u{E08}\\u{E30}\\u{E43}\\u{E0A}\\u{E49}\\u{E04}\\u{E48}\\u{E32}\\u{E40}\\u{E23}\\u{E34}\\u{E48}\\u{E21}\\u{E15}\\u{E49}\\u{E19} <code>${$c1ce9d969bfa6909$var$DEFAULT_KEYWORD}</code>) \\u{E23}\\u{E30}\\u{E1A}\\u{E1A}\\u{E08}\\u{E30}\\u{E40}\\u{E02}\\u{E49}\\u{E32}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A} \\u{E2B}\\u{E32}\\u{E01}\\u{E02}\\u{E49}\\u{E2D}\\u{E04}\\u{E27}\\u{E32}\\u{E21}\\u{E17}\\u{E35}\\u{E48}\\u{E1B}\\u{E49}\\u{E2D}\\u{E19}\\u{E14}\\u{E39}\\u{E40}\\u{E2B}\\u{E21}\\u{E37}\\u{E2D}\\u{E19}\\u{E16}\\u{E39}\\u{E01}\\u{E40}\\u{E02}\\u{E49}\\u{E32}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A}\\u{E41}\\u{E25}\\u{E49}\\u{E27} \\u{E23}\\u{E30}\\u{E1A}\\u{E1A}\\u{E08}\\u{E30}\\u{E1E}\\u{E22}\\u{E32}\\u{E22}\\u{E32}\\u{E21}\\u{E16}\\u{E2D}\\u{E14}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A}\\u{E14}\\u{E49}\\u{E27}\\u{E22} Keyword \\u{E40}\\u{E14}\\u{E35}\\u{E22}\\u{E27}\\u{E01}\\u{E31}\\u{E19}</p></div>\n        <div><h3><i class=\"fas fa-smile\"></i> Emoji Code Mode</h3><p>\\u{E41}\\u{E1B}\\u{E25}\\u{E07}\\u{E15}\\u{E31}\\u{E27}\\u{E2D}\\u{E31}\\u{E01}\\u{E29}\\u{E23} (\\u{E44}\\u{E17}\\u{E22}, \\u{E2D}\\u{E31}\\u{E07}\\u{E01}\\u{E24}\\u{E29}, \\u{E15}\\u{E31}\\u{E27}\\u{E40}\\u{E25}\\u{E02}, \\u{E2A}\\u{E31}\\u{E0D}\\u{E25}\\u{E31}\\u{E01}\\u{E29}\\u{E13}\\u{E4C}\\u{E1A}\\u{E32}\\u{E07}\\u{E15}\\u{E31}\\u{E27}) \\u{E40}\\u{E1B}\\u{E47}\\u{E19} Emoji \\u{E2B}\\u{E23}\\u{E37}\\u{E2D}\\u{E41}\\u{E1B}\\u{E25}\\u{E07} Emoji \\u{E01}\\u{E25}\\u{E31}\\u{E1A}\\u{E40}\\u{E1B}\\u{E47}\\u{E19}\\u{E02}\\u{E49}\\u{E2D}\\u{E04}\\u{E27}\\u{E32}\\u{E21}\\u{E40}\\u{E14}\\u{E34}\\u{E21} \\u{E23}\\u{E30}\\u{E1A}\\u{E1A}\\u{E08}\\u{E30}\\u{E04}\\u{E32}\\u{E14}\\u{E40}\\u{E14}\\u{E32}\\u{E42}\\u{E14}\\u{E22}\\u{E2D}\\u{E31}\\u{E15}\\u{E42}\\u{E19}\\u{E21}\\u{E31}\\u{E15}\\u{E34}\\u{E27}\\u{E48}\\u{E32}\\u{E04}\\u{E27}\\u{E23}\\u{E40}\\u{E02}\\u{E49}\\u{E32}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A}\\u{E2B}\\u{E23}\\u{E37}\\u{E2D}\\u{E16}\\u{E2D}\\u{E14}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A}</p></div>\n        <div><h3><i class=\"fas fa-sync-alt\"></i> Word Spinner Mode</h3><p>\\u{E2A}\\u{E25}\\u{E31}\\u{E1A}\\u{E15}\\u{E33}\\u{E41}\\u{E2B}\\u{E19}\\u{E48}\\u{E07}\\u{E15}\\u{E31}\\u{E27}\\u{E2D}\\u{E31}\\u{E01}\\u{E29}\\u{E23}\\u{E17}\\u{E31}\\u{E49}\\u{E07}\\u{E2B}\\u{E21}\\u{E14}\\u{E43}\\u{E19}\\u{E02}\\u{E49}\\u{E2D}\\u{E04}\\u{E27}\\u{E32}\\u{E21}\\u{E41}\\u{E1A}\\u{E1A}\\u{E2A}\\u{E38}\\u{E48}\\u{E21} \\u{E1E}\\u{E23}\\u{E49}\\u{E2D}\\u{E21}\\u{E40}\\u{E1E}\\u{E34}\\u{E48}\\u{E21} Prefix <code>${$c1ce9d969bfa6909$var$DEFAULT_PREFIX}</code> \\u{E41}\\u{E25}\\u{E30}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A} Seed 4 \\u{E15}\\u{E31}\\u{E27}\\u{E17}\\u{E35}\\u{E48}\\u{E14}\\u{E49}\\u{E32}\\u{E19}\\u{E2B}\\u{E19}\\u{E49}\\u{E32} \\u{E2B}\\u{E32}\\u{E01}\\u{E02}\\u{E49}\\u{E2D}\\u{E04}\\u{E27}\\u{E32}\\u{E21}\\u{E17}\\u{E35}\\u{E48}\\u{E1B}\\u{E49}\\u{E2D}\\u{E19}\\u{E02}\\u{E36}\\u{E49}\\u{E19}\\u{E15}\\u{E49}\\u{E19}\\u{E14}\\u{E49}\\u{E27}\\u{E22} Prefix \\u{E41}\\u{E25}\\u{E30} Seed \\u{E23}\\u{E30}\\u{E1A}\\u{E1A}\\u{E08}\\u{E30}\\u{E16}\\u{E2D}\\u{E14}\\u{E23}\\u{E2B}\\u{E31}\\u{E2A}\\u{E01}\\u{E25}\\u{E31}\\u{E1A}\\u{E40}\\u{E1B}\\u{E47}\\u{E19}\\u{E02}\\u{E49}\\u{E2D}\\u{E04}\\u{E27}\\u{E32}\\u{E21}\\u{E40}\\u{E14}\\u{E34}\\u{E21}</p></div>\n        <hr>\n        <p style=\"font-size: 0.9em; color: #777;\">\\u{E43}\\u{E0A}\\u{E49}\\u{E07}\\u{E32}\\u{E19}\\u{E44}\\u{E14}\\u{E49}\\u{E40}\\u{E25}\\u{E22} \\u{E44}\\u{E21}\\u{E48}\\u{E15}\\u{E49}\\u{E2D}\\u{E07}\\u{E25}\\u{E47}\\u{E2D}\\u{E01}\\u{E2D}\\u{E34}\\u{E19} \\u{1F609}</p>`;\n    if ($c1ce9d969bfa6909$var$helpModal) $c1ce9d969bfa6909$var$helpModal.style.display = 'block';\n}\nif ($c1ce9d969bfa6909$var$helpBtn) $c1ce9d969bfa6909$var$helpBtn.addEventListener('click', $c1ce9d969bfa6909$var$showHelp);\nif ($c1ce9d969bfa6909$var$closeBtn) $c1ce9d969bfa6909$var$closeBtn.addEventListener('click', ()=>{\n    $c1ce9d969bfa6909$var$helpModal.style.display = 'none';\n});\n// --- NEW: Donate Modal ---\nfunction $c1ce9d969bfa6909$var$showDonateModal() {\n    if ($c1ce9d969bfa6909$var$donateModal) {\n        // Reset modal to initial state every time it's opened\n        if ($c1ce9d969bfa6909$var$qrResultArea) $c1ce9d969bfa6909$var$qrResultArea.classList.add('hidden');\n        if ($c1ce9d969bfa6909$var$qrInstruction) $c1ce9d969bfa6909$var$qrInstruction.classList.remove('hidden');\n        if ($c1ce9d969bfa6909$var$donateAmountInput) $c1ce9d969bfa6909$var$donateAmountInput.value = '20'; // Reset to default amount\n        $c1ce9d969bfa6909$var$donateModal.style.display = 'block';\n    }\n}\nfunction $c1ce9d969bfa6909$var$closeDonateModal() {\n    if ($c1ce9d969bfa6909$var$donateModal) $c1ce9d969bfa6909$var$donateModal.style.display = 'none';\n}\nif ($c1ce9d969bfa6909$var$supportTrigger) $c1ce9d969bfa6909$var$supportTrigger.addEventListener('click', $c1ce9d969bfa6909$var$showDonateModal);\nif ($c1ce9d969bfa6909$var$donateCloseBtn) $c1ce9d969bfa6909$var$donateCloseBtn.addEventListener('click', $c1ce9d969bfa6909$var$closeDonateModal);\n// Close modals when clicking outside\nwindow.addEventListener('click', (event)=>{\n    if (event.target === $c1ce9d969bfa6909$var$helpModal) {\n        if ($c1ce9d969bfa6909$var$helpModal) $c1ce9d969bfa6909$var$helpModal.style.display = 'none';\n    }\n    if (event.target === $c1ce9d969bfa6909$var$donateModal) $c1ce9d969bfa6909$var$closeDonateModal();\n});\n// --- NEW: Logic for creating QR Code (inside the modal) ---\nconst $c1ce9d969bfa6909$var$myPromptpayId = '0616164179';\nasync function $c1ce9d969bfa6909$var$updateQrCode() {\n    if (!$c1ce9d969bfa6909$var$donateAmountInput || !$c1ce9d969bfa6909$var$qrImage || !$c1ce9d969bfa6909$var$qrAmountDisplay || !$c1ce9d969bfa6909$var$qrResultArea || !$c1ce9d969bfa6909$var$qrInstruction) {\n        console.error(\"QR Code modal elements not found!\");\n        return;\n    }\n    const amount = parseFloat($c1ce9d969bfa6909$var$donateAmountInput.value);\n    if (isNaN(amount) || amount <= 0) {\n        $c1ce9d969bfa6909$var$showToast(\"\\u0E40\\u0E2E\\u0E49\\u0E22\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E19! \\u0E43\\u0E2A\\u0E48\\u0E22\\u0E2D\\u0E14\\u0E40\\u0E07\\u0E34\\u0E19\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E14\\u0E34 \\uD83E\\uDD23\", 3000, true);\n        return;\n    }\n    // --- ส่วนที่เปลี่ยนคือตรงนี้ ---\n    try {\n        // 1. สร้างชุดข้อความด้วย promptpay-qr\n        const payload = (0, (/*@__PURE__*/$parcel$interopDefault($c2550c9a8f5b81d0$exports)))($c1ce9d969bfa6909$var$myPromptpayId, {\n            amount: amount\n        });\n        // 2. วาดรูป QR Code จากชุดข้อความด้วย qrcode\n        const qrDataURL = await (0, (/*@__PURE__*/$parcel$interopDefault($092c7e998bebe629$exports))).toDataURL(payload);\n        // 3. เอารูปไปโชว์ในแท็ก img\n        $c1ce9d969bfa6909$var$qrImage.src = qrDataURL;\n        // --- จบส่วนที่เปลี่ยน ---\n        $c1ce9d969bfa6909$var$qrAmountDisplay.textContent = `${amount.toFixed(2)} \\u{E1A}\\u{E32}\\u{E17}`;\n        $c1ce9d969bfa6909$var$qrResultArea.classList.remove('hidden');\n        $c1ce9d969bfa6909$var$qrInstruction.classList.add('hidden');\n        $c1ce9d969bfa6909$var$showToast(`\\u{2705} QR \\u{E2A}\\u{E33}\\u{E2B}\\u{E23}\\u{E31}\\u{E1A} ${amount} \\u{E1A}\\u{E32}\\u{E17}\\u{E21}\\u{E32}\\u{E41}\\u{E25}\\u{E49}\\u{E27}! \\u{E02}\\u{E2D}\\u{E1A}\\u{E43}\\u{E08}\\u{E19}\\u{E30}\\u{E40}\\u{E1E}\\u{E37}\\u{E48}\\u{E2D}\\u{E19} \\u{1F44A}`, 3500);\n    } catch (err) {\n        console.error(\"Failed to generate QR Code:\", err);\n        $c1ce9d969bfa6909$var$showToast(\"\\u274C \\u0E42\\u0E2D\\u0E49\\u0E22! \\u0E2A\\u0E23\\u0E49\\u0E32\\u0E07 QR Code \\u0E44\\u0E21\\u0E48\\u0E44\\u0E14\\u0E49\\u0E27\\u0E48\\u0E30!\", 4000, true);\n    }\n}\nif ($c1ce9d969bfa6909$var$generateQrBtn) $c1ce9d969bfa6909$var$generateQrBtn.addEventListener('click', $c1ce9d969bfa6909$var$updateQrCode);\nif ($c1ce9d969bfa6909$var$donateAmountInput) $c1ce9d969bfa6909$var$donateAmountInput.addEventListener('keydown', (event)=>{\n    if (event.key === 'Enter') {\n        event.preventDefault();\n        $c1ce9d969bfa6909$var$updateQrCode();\n    }\n});\n// Initial UI setup\n$c1ce9d969bfa6909$var$updateUI();\nconsole.log(\"\\u0E2A\\u0E04\\u0E23\\u0E34\\u0E1B\\u0E15\\u0E4C\\u0E2B\\u0E25\\u0E31\\u0E01\\u0E42\\u0E2B\\u0E25\\u0E14\\u0E41\\u0E25\\u0E30\\u0E1E\\u0E23\\u0E49\\u0E2D\\u0E21\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\");\nvar $a99b1c90995f445f$exports = {};\n$a99b1c90995f445f$exports = import.meta.resolve(\"czWhb\");\n\n\n// Service Worker registration\nif ('serviceWorker' in navigator) window.addEventListener('load', ()=>{\n    navigator.serviceWorker.register($a99b1c90995f445f$exports).then((reg)=>console.log('Service Worker registered:', reg.scope)).catch((err)=>console.error('Service Worker registration failed:', err));\n});\n\n\n//# sourceMappingURL=3in1-key-emoji-spinner.e80311a4.js.map\n","/*******************************************************\r\n  script.js - Main Application Logic\r\n  - Handles UI interactions, encoding/decoding, and modals.\r\n********************************************************/\r\n// เพิ่มบนสุดเลย\r\nimport promptpay from 'promptpay-qr';\r\nimport QRCode from 'qrcode';\r\n\r\n// ======== Element References ========\r\nconst xorModeBtn = document.getElementById('xorModeBtn');\r\nconst wordSpinnerModeBtn = document.getElementById('wordSpinnerModeBtn');\r\nconst emojiModeBtn = document.getElementById('emojiModeBtn');\r\nconst keywordSection = document.getElementById('keywordSection');\r\nconst keywordInput = document.getElementById('keywordInput');\r\nconst inputText = document.getElementById('inputText');\r\nconst outputText = document.getElementById('outputText');\r\nconst copyButton = document.getElementById('copyButton');\r\nconst clearButton = document.getElementById('clearButton');\r\n\r\n// Help Modal Elements\r\nconst helpBtn = document.getElementById('helpBtn');\r\nconst helpModal = document.getElementById('helpModal');\r\nconst closeBtn = helpModal.querySelector('.close-btn');\r\nconst helpContent = document.getElementById('helpContent');\r\n\r\n// NEW: Donate Modal Elements\r\nconst supportTrigger = document.getElementById('supportTrigger');\r\nconst donateModal = document.getElementById('donateModal');\r\nconst donateCloseBtn = document.getElementById('donateCloseBtn');\r\nconst generateQrBtn = document.getElementById('generateQrBtn');\r\nconst donateAmountInput = document.getElementById('donateAmount');\r\nconst qrResultArea = document.getElementById('qrResultArea');\r\nconst qrInstruction = document.getElementById('qrInstruction');\r\nconst qrImage = document.getElementById('promptpayQrImage');\r\nconst qrAmountDisplay = document.getElementById('qrAmountDisplay');\r\n\r\n\r\nlet currentMode = null;\r\nlet toastTimeout = null;\r\n\r\n// ======== Toast Notification Function ========\r\nfunction showToast(message, duration = 3000, isError = false) {\r\n  // Clear existing toast\r\n  const existingToast = document.querySelector('.toast-notification');\r\n  if (existingToast) {\r\n    clearTimeout(toastTimeout);\r\n    existingToast.remove();\r\n  }\r\n  // Create new toast\r\n  const toast = document.createElement('div');\r\n  toast.textContent = message;\r\n  toast.className = 'toast-notification';\r\n  if (isError) {\r\n    toast.classList.add('error-toast'); // Use class for styling errors\r\n    toast.style.backgroundColor = 'rgba(244, 67, 54, 0.85)';\r\n  }\r\n  document.body.appendChild(toast);\r\n  // Animation timeout\r\n  toastTimeout = setTimeout(() => {\r\n    toast.style.opacity = '0';\r\n    setTimeout(() => {\r\n        if (toast.parentElement) {\r\n            toast.remove();\r\n        }\r\n    }, 300);\r\n  }, duration - 300);\r\n}\r\n\r\n\r\n// ######################################################################\r\n// ########   CORE ENCRYPTION/DECRYPTION LOGIC (UNCHANGED)        ########\r\n// ######################################################################\r\nconst ALLOWED_CHARS = 'กขคฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรลวศษสหฬอฮฤๆะัาิีึืุู็เแโใไๅำ่้๊๋abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-=[]{}|;:,./<>?๐αβγδεζηθικλμνξοπρστυφχψωΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ';\r\nconst DEFAULT_KEYWORD = 'jornjud';\r\nconst DEFAULT_PREFIX = '~';\r\nconst SEED_LENGTH = 4;\r\nfunction generateShortSeed() { return Math.random().toString(36).slice(-SEED_LENGTH).padStart(SEED_LENGTH, '0'); }\r\nfunction createPRNG(seed) { const seedHash = [...seed].reduce((hash, ch) => (hash * 31 + ch.charCodeAt(0)) & 0x7fffffff, 0); let state = seedHash; return () => { state = (state * 1103515245 + 12345) & 0x7fffffff; return state / 0x80000000; }; }\r\nconst pigpenEmojis = ['😀','😁','😂','🤣','😃','😄','😅','😆','😉','😊', '😋','😎','😍','😘','😗','😙','😚','🙂','🤗','🤩','🤔','🤨','😐','😑','😶','🙄','😏','😣','😥','😮', '🤐','😯','😪','😫','😴','😌','😛','😜','😝','🤤','😒','😓','😔','😕','🙃','🤑','😲','☹️','🙁','😖', '😞','😟','😤','😢','😭','😦','😧','😨','😩','🤯','😬','😰','😱','🥵','🥶','😳','🤪','😵','😡','😠', '🤬','😷','🤒','🤕','🤢','🤮','🤧','😇','🥰','🤠','🤡','🥳','🥴','🥺','🤥','🤫','🤭','🧐','🤓','😈', '👿','👹','👺','💀','👻','👽','🤖','💩','😺','😸','😹','😻','😼','😽','🙀','😿','😾','🐶','🐱','🐭', '🐹','🐰','🦊','🐻','🐼','🐨','🐯','🦁','🐮','🐷','🐽','🐸','🐵','🙈','🙉','🙊','🐒','🐔','🐧','🐦', '🐤','🐣','🐥','🦆','🦅','🦉','🦇','🐺','🐗','🐴','🦄','🐝','🐛','🦋','🐌','🐞','🐜','🦗','🕷','🕸', '🦂','🐢','🐍','🦎','🦖','🦕','🐙','🦑','🦐','🦀','🐡','🐠','🐟','🐬','🐳','🐋','🦈','🐊','🐅','🐆', '🦓','🦍','🐘','🦏','🐪','🐫','🦒','🦘','🐃','🐂','🐄','🐎','🐖','🐏','🐑','🐐','🐓','🦃','🕊','🐇', '🐁','🐀','🐿','🦔','🐾','🐉','🐲','🌵','🎄','🌲','🌳','🌴','🌱','🌿','☘️','🍀','🎍','🎋','🍃','🍂', '🍁','🍄','🌾','💐','🌷','🌹','🥀','🌺','🌸','🌼','🌻','🌞','🌝','🌛','🌚','🌜','🌙','⭐','🌟','💫', '✨','⚡','☄️','💥','🔥','🌪','🌈','☀️','🌤','⛅','🌥','☁️','🌦','🌧','⛈','🌩','🌨','❄️','☃️','⛄', '🌬','💨','💧','💦','☔','☂️','🌊','🌫','🍏','🍎','🍐','🍊','🍋','🍌','🍉','🍇','🍓','🍈','🍒','🍑', '🥭','🍍','🥥','🥝','🍅','🍆','🥑','🥦','🥬','🥒','🌶','🌽','🥕','🥔','🍠','🥐','🍞','🥖','🥨','🧀', '🥚','🍳','🥞','🥓','🥩','🍗','🍖','🌭','🍔','🍟','🍕','🥪','🥙','🌮','🌯','🥗','🥘','🍝','🍜','🍲', '🍥','🥠','🍣','🍱','🍛','🍚','🍙','🍘','🍢','🍡','🍧','🍨','🍦','🥧','🧁','🍰','🎂','🍮','🍭','🍬', '🍫','🍿','🍩','🍪','🌰','🥜','🍯','🥛','🍼','☕','🍵','🥤','🍶','🍺','🍻','🥂','🍷','🥃','🍸','🍹', '🍾','🥄','🍴','🍽','🥣','🥡','🥢','🚗','🚕','🚙','🚌','🚎','🏎','🚓','🚑','🚒','🚐','🚚','🚛','🚜', '🛴','🚲','🛵','🏍','🚨','🚔','🚍','🚘','🚖','🚡','🚠','🚟','🚃','🚋','🚞','🚝','🚄','🚅','🚈','🚂', '🚆','🚇','🚊','🚉','✈️','🛫','🛬','🛩','💺','🛰','🚀','🛸','🚁','🛶','⛵','🚤','🛥','🛳','⛴','🚢', '⚓','🚧','⛽','🚏','🚦','🚥','🗺','🗿','🗽','⛲','🗼','🏰','🏯','🎡','🎢','🎠','⛱','🏖','🏝','🌋', '⛰','🏔','🗻','🏕','⛺','🏠','🏡','🏘','🏚','🏗','🏭','🏢','🏬','🏣','🏤','🏥','🏦','🏨','🏪','🏫', '🏩','💒','🏛','⛪','🕌','🕍','🕋','⛩','🛤','🛣','🗾','🎑','🏞','🌅','🌄','🌠','🎇','🎆','🌇','🌆', '🏙','🌃','🌌','🌉','🌁'];\r\nconst charToEmoji = new Map(); const emojiToChar = new Map();\r\nfor (let i = 0; i < ALLOWED_CHARS.length && i < pigpenEmojis.length; i++) { charToEmoji.set(ALLOWED_CHARS[i], pigpenEmojis[i]); emojiToChar.set(pigpenEmojis[i], ALLOWED_CHARS[i]); }\r\nfunction encodeEmoji(text) { return [...text].map(ch => charToEmoji.get(ch) || ch).join(''); }\r\nfunction decodeEmoji(text) { const emojiArray = Array.from(text); return emojiArray.map(emoji => emojiToChar.get(emoji) || emoji).join(''); }\r\nfunction isAllEmoji(str) { const emojiArray = Array.from(str); return emojiArray.every(emoji => emojiToChar.has(emoji) || /\\s/.test(emoji)); }\r\nfunction encodeWordspinner(text) { const chars = [...text]; const seed = generateShortSeed(); const prng = createPRNG(seed); const positions = chars.map((_, i) => i).sort(() => prng() - 0.5); const shuffledText = positions.map(pos => chars[pos]).join(''); return `${DEFAULT_PREFIX}${seed}${shuffledText}`; }\r\nfunction decodeWordspinner(text) { if (!text.startsWith(DEFAULT_PREFIX) || text.length < (DEFAULT_PREFIX.length + SEED_LENGTH)) return text; const seed = text.slice(DEFAULT_PREFIX.length, DEFAULT_PREFIX.length + SEED_LENGTH); const cipherText = text.slice(DEFAULT_PREFIX.length + SEED_LENGTH); if (cipherText.length === 0) return ''; const prng = createPRNG(seed); const positions = [...Array(cipherText.length).keys()].sort(() => prng() - 0.5); const reversePositions = new Array(cipherText.length); positions.forEach((shuffledIndex, originalIndex) => { reversePositions[shuffledIndex] = originalIndex; }); return reversePositions.map(pos => cipherText[pos]).join(''); }\r\nfunction isLikelyWordspinner(text) { return text.startsWith(DEFAULT_PREFIX) && text.length >= (DEFAULT_PREFIX.length + SEED_LENGTH); }\r\nfunction encodeThaiEng(text, keyword) { const seed = generateShortSeed(); const prng = createPRNG(seed + keyword); return seed + [...text].map(ch => { const idx = ALLOWED_CHARS.indexOf(ch); if (idx === -1) return ch; const randOffset = Math.floor(prng() * ALLOWED_CHARS.length); return ALLOWED_CHARS[(idx + randOffset) % ALLOWED_CHARS.length]; }).join(''); }\r\nfunction decodeThaiEng(encText, keyword) { if (!encText || encText.length < SEED_LENGTH) return encText; const seed = encText.slice(0, SEED_LENGTH); const cipherText = encText.slice(SEED_LENGTH); if (cipherText.length === 0) return ''; const prng = createPRNG(seed + keyword); return [...cipherText].map(ch => { const idx = ALLOWED_CHARS.indexOf(ch); if (idx === -1) return ch; const randOffset = Math.floor(prng() * ALLOWED_CHARS.length); return ALLOWED_CHARS[(idx - randOffset % ALLOWED_CHARS.length + ALLOWED_CHARS.length) % ALLOWED_CHARS.length]; }).join(''); }\r\nfunction isLikelyEncoded(text) { return /^[a-z0-9]{4}/.test(text) && text.length > SEED_LENGTH; }\r\n// ######################################################################\r\n\r\nfunction updateUI() {\r\n    if(keywordSection) {\r\n        keywordSection.style.display = (currentMode === 'xor') ? 'flex' : 'none';\r\n    }\r\n}\r\n\r\nfunction processCurrentMode() {\r\n    const text = inputText.value;\r\n    let result = '';\r\n    let action = '';\r\n\r\n    if (text.trim() === '') {\r\n        if(outputText) outputText.value = '';\r\n        return;\r\n    }\r\n\r\n    if (!currentMode) {\r\n        if(outputText) outputText.value = '⚠️ กรุณาเลือกโหมดก่อน';\r\n        showToast('⚠️ กรุณาเลือกโหมดก่อน', 3000);\r\n        return;\r\n    }\r\n\r\n    try {\r\n        if (currentMode === 'xor') {\r\n            let key = keywordInput.value.trim() || DEFAULT_KEYWORD;\r\n            action = isLikelyEncoded(text) ? '🔑 กำลังถอดรหัส (Key)...' : '🔒 กำลังเข้ารหัส (Key)...';\r\n            showToast(action);\r\n            result = isLikelyEncoded(text) ? decodeThaiEng(text, key) : encodeThaiEng(text.trim(), key);\r\n        } else if (currentMode === 'wordspinner') {\r\n            action = isLikelyWordspinner(text) ? '🔄 กำลังถอดรหัส (Spinner)...' : '✨ กำลังเข้ารหัส (Spinner)...';\r\n            showToast(action);\r\n            result = isLikelyWordspinner(text) ? decodeWordspinner(text) : encodeWordspinner(text.trim());\r\n        } else if (currentMode === 'emoji') {\r\n            action = isAllEmoji(text) ? '😃 กำลังถอดรหัส (Emoji)...' : '🤪 กำลังเข้ารหัส (Emoji)...';\r\n            showToast(action);\r\n            result = isAllEmoji(text) ? decodeEmoji(text) : encodeEmoji(text.trim());\r\n        }\r\n        if(outputText) outputText.value = result;\r\n    } catch (error) {\r\n        console.error(\"Processing Error:\", error);\r\n        showToast(`❌ เกิดข้อผิดพลาด: ${error.message}`, 4000, true);\r\n        if(outputText) outputText.value = 'เกิดข้อผิดพลาด!';\r\n    }\r\n}\r\n\r\n// Event Listeners for mode buttons\r\n[xorModeBtn, wordSpinnerModeBtn, emojiModeBtn].forEach(btn => {\r\n    if(!btn) return;\r\n    btn.addEventListener('click', () => {\r\n        const newMode = btn.id.replace('ModeBtn', '').toLowerCase();\r\n        if (currentMode === newMode) return;\r\n        \r\n        currentMode = newMode;\r\n        document.querySelectorAll('.mode-btn').forEach(b => b.classList.remove('active'));\r\n        btn.classList.add('active');\r\n        \r\n        updateUI();\r\n        processCurrentMode();\r\n        \r\n        let modeName = btn.textContent.trim();\r\n        showToast(`✅ เปลี่ยนเป็นโหมด ${modeName}`);\r\n    });\r\n});\r\n\r\nif(inputText) inputText.addEventListener('input', processCurrentMode);\r\nif(keywordInput) keywordInput.addEventListener('input', () => { if (currentMode === 'xor') processCurrentMode(); });\r\n\r\n// Action Buttons\r\nif(copyButton) {\r\n    copyButton.addEventListener('click', () => {\r\n        if (!outputText || !outputText.value) {\r\n            showToast('❓ ไม่มีข้อความให้คัดลอก', 2000);\r\n            return;\r\n        }\r\n        navigator.clipboard.writeText(outputText.value).then(() => {\r\n            showToast('📋 คัดลอกไปยังคลิปบอร์ดแล้ว');\r\n        }).catch(err => {\r\n            showToast('❌ คัดลอกไม่สำเร็จ', 3000, true);\r\n            console.error('Clipboard API failed: ', err);\r\n        });\r\n    });\r\n}\r\n\r\nif(clearButton) {\r\n    clearButton.addEventListener('click', () => {\r\n        if(inputText) inputText.value = '';\r\n        if(outputText) outputText.value = '';\r\n        showToast('🧹 ล้างข้อความแล้ว');\r\n        if(inputText) inputText.focus();\r\n    });\r\n}\r\n\r\n// ======== Modal Logic (Help & Donate) ========\r\n\r\n// --- Help Modal ---\r\nfunction showHelp() {\r\n    if(!helpContent) return;\r\n    helpContent.innerHTML = `\r\n        <div><h3><i class=\"fas fa-key\"></i> Key Translator Mode</h3><p>ใส่ข้อความและ Keyword (หากเว้นว่างจะใช้ค่าเริ่มต้น <code>${DEFAULT_KEYWORD}</code>) ระบบจะเข้ารหัส หากข้อความที่ป้อนดูเหมือนถูกเข้ารหัสแล้ว ระบบจะพยายามถอดรหัสด้วย Keyword เดียวกัน</p></div>\r\n        <div><h3><i class=\"fas fa-smile\"></i> Emoji Code Mode</h3><p>แปลงตัวอักษร (ไทย, อังกฤษ, ตัวเลข, สัญลักษณ์บางตัว) เป็น Emoji หรือแปลง Emoji กลับเป็นข้อความเดิม ระบบจะคาดเดาโดยอัตโนมัติว่าควรเข้ารหัสหรือถอดรหัส</p></div>\r\n        <div><h3><i class=\"fas fa-sync-alt\"></i> Word Spinner Mode</h3><p>สลับตำแหน่งตัวอักษรทั้งหมดในข้อความแบบสุ่ม พร้อมเพิ่ม Prefix <code>${DEFAULT_PREFIX}</code> และรหัส Seed 4 ตัวที่ด้านหน้า หากข้อความที่ป้อนขึ้นต้นด้วย Prefix และ Seed ระบบจะถอดรหัสกลับเป็นข้อความเดิม</p></div>\r\n        <hr>\r\n        <p style=\"font-size: 0.9em; color: #777;\">ใช้งานได้เลย ไม่ต้องล็อกอิน 😉</p>`;\r\n    if(helpModal) helpModal.style.display = 'block';\r\n}\r\n\r\nif(helpBtn) helpBtn.addEventListener('click', showHelp);\r\nif(closeBtn) closeBtn.addEventListener('click', () => { helpModal.style.display = 'none'; });\r\n// --- NEW: Donate Modal ---\r\nfunction showDonateModal() {\r\n    if(donateModal) {\r\n        // Reset modal to initial state every time it's opened\r\n        if(qrResultArea) qrResultArea.classList.add('hidden');\r\n        if(qrInstruction) qrInstruction.classList.remove('hidden');\r\n        if(donateAmountInput) donateAmountInput.value = '20'; // Reset to default amount\r\n        donateModal.style.display = 'block';\r\n    }\r\n}\r\n\r\nfunction closeDonateModal() {\r\n    if(donateModal) donateModal.style.display = 'none';\r\n}\r\n\r\nif(supportTrigger) supportTrigger.addEventListener('click', showDonateModal);\r\nif(donateCloseBtn) donateCloseBtn.addEventListener('click', closeDonateModal);\r\n\r\n// Close modals when clicking outside\r\nwindow.addEventListener('click', (event) => {\r\n    if (event.target === helpModal) {\r\n        if(helpModal) helpModal.style.display = 'none';\r\n    }\r\n    if (event.target === donateModal) {\r\n        closeDonateModal();\r\n    }\r\n});\r\n\r\n// --- NEW: Logic for creating QR Code (inside the modal) ---\r\nconst myPromptpayId = '0616164179';\r\n\r\nasync function updateQrCode() { // <--- เพิ่ม async ตรงนี้\r\n  if (!donateAmountInput || !qrImage || !qrAmountDisplay || !qrResultArea || !qrInstruction) {\r\n    console.error(\"QR Code modal elements not found!\");\r\n    return;\r\n  }\r\n  const amount = parseFloat(donateAmountInput.value);\r\n\r\n  if (isNaN(amount) || amount <= 0) {\r\n    showToast('เฮ้ยเพื่อน! ใส่ยอดเงินก่อนดิ 🤣', 3000, true);\r\n    return;\r\n  }\r\n\r\n  // --- ส่วนที่เปลี่ยนคือตรงนี้ ---\r\n  try {\r\n    // 1. สร้างชุดข้อความด้วย promptpay-qr\r\n    const payload = promptpay(myPromptpayId, { amount });\r\n\r\n    // 2. วาดรูป QR Code จากชุดข้อความด้วย qrcode\r\n    const qrDataURL = await QRCode.toDataURL(payload);\r\n\r\n    // 3. เอารูปไปโชว์ในแท็ก img\r\n    qrImage.src = qrDataURL;\r\n\r\n    // --- จบส่วนที่เปลี่ยน ---\r\n\r\n    qrAmountDisplay.textContent = `${amount.toFixed(2)} บาท`;\r\n    qrResultArea.classList.remove('hidden');\r\n    qrInstruction.classList.add('hidden');\r\n    showToast(`✅ QR สำหรับ ${amount} บาทมาแล้ว! ขอบใจนะเพื่อน 👊`, 3500);\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to generate QR Code:\", err);\r\n    showToast('❌ โอ้ย! สร้าง QR Code ไม่ได้ว่ะ!', 4000, true);\r\n  }\r\n}\r\n\r\nif (generateQrBtn) generateQrBtn.addEventListener('click', updateQrCode);\r\nif (donateAmountInput) {\r\n    donateAmountInput.addEventListener('keydown', (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            updateQrCode();\r\n        }\r\n    });\r\n}\r\n\r\n// Initial UI setup\r\nupdateUI();\r\nconsole.log(\"สคริปต์หลักโหลดและพร้อมใช้งาน\");\r\n\r\n// Service Worker registration\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register(new URL('./sw.js', import.meta.url))\r\n      .then(reg => console.log('Service Worker registered:', reg.scope))\r\n      .catch(err => console.error('Service Worker registration failed:', err));\r\n  });\r\n}\r\n","/*!\n * promptpay-qr\n * JavaScript library to generate PromptPay QR code\n * <https://github.com/dtinth/promptpay-qr>\n *\n * Refs:\n * - https://www.blognone.com/node/95133\n * - https://www.emvco.com/emv-technologies/qrcodes/\n *\n * @license MIT\n */\n\nvar crc = require('crc')\n\nvar ID_PAYLOAD_FORMAT = '00'\nvar ID_POI_METHOD = '01'\nvar ID_MERCHANT_INFORMATION_BOT = '29'\nvar ID_TRANSACTION_CURRENCY = '53'\nvar ID_TRANSACTION_AMOUNT = '54'\nvar ID_COUNTRY_CODE = '58'\nvar ID_CRC = '63'\n\nvar PAYLOAD_FORMAT_EMV_QRCPS_MERCHANT_PRESENTED_MODE = '01'\nvar POI_METHOD_STATIC = '11'\nvar POI_METHOD_DYNAMIC = '12'\nvar MERCHANT_INFORMATION_TEMPLATE_ID_GUID = '00'\nvar BOT_ID_MERCHANT_PHONE_NUMBER = '01'\nvar BOT_ID_MERCHANT_TAX_ID = '02'\nvar BOT_ID_MERCHANT_EWALLET_ID = '03'\nvar GUID_PROMPTPAY = 'A000000677010111'\nvar TRANSACTION_CURRENCY_THB = '764'\nvar COUNTRY_CODE_TH = 'TH'\n\nfunction generatePayload (target, options) {\n  target = sanitizeTarget(target)\n\n  var amount = options.amount\n  var targetType = (\n    target.length >= 15 ? (\n      BOT_ID_MERCHANT_EWALLET_ID\n    ) : target.length >= 13 ? (\n      BOT_ID_MERCHANT_TAX_ID\n    ) : (\n      BOT_ID_MERCHANT_PHONE_NUMBER\n    )\n  )\n\n  var data = [\n    f(ID_PAYLOAD_FORMAT, PAYLOAD_FORMAT_EMV_QRCPS_MERCHANT_PRESENTED_MODE),\n    f(ID_POI_METHOD, amount ? POI_METHOD_DYNAMIC : POI_METHOD_STATIC),\n    f(ID_MERCHANT_INFORMATION_BOT, serialize([\n      f(MERCHANT_INFORMATION_TEMPLATE_ID_GUID, GUID_PROMPTPAY),\n      f(targetType, formatTarget(target))\n    ])),\n    f(ID_COUNTRY_CODE, COUNTRY_CODE_TH),\n    f(ID_TRANSACTION_CURRENCY, TRANSACTION_CURRENCY_THB),\n    amount && f(ID_TRANSACTION_AMOUNT, formatAmount(amount))\n  ]\n  var dataToCrc = serialize(data) + ID_CRC + '04'\n  data.push(f(ID_CRC, formatCrc(crc.crc16xmodem(dataToCrc, 0xffff))))\n  return serialize(data)\n}\n\nfunction f (id, value) {\n  return [ id, ('00' + value.length).slice(-2), value ].join('')\n}\n\nfunction serialize (xs) {\n  return xs.filter(function (x) { return x }).join('')\n}\n\nfunction sanitizeTarget (id) {\n  return id.replace(/[^0-9]/g, '')\n}\n\nfunction formatTarget (id) {\n  const numbers = sanitizeTarget(id)\n  if (numbers.length >= 13) return numbers\n  return ('0000000000000' + numbers.replace(/^0/, '66')).slice(-13)\n}\n\nfunction formatAmount (amount) {\n  return amount.toFixed(2)\n}\n\nfunction formatCrc (crcValue) {\n  return ('0000' + crcValue.toString(16).toUpperCase()).slice(-4)\n}\n\nmodule.exports = generatePayload\n","import crc1 from './crc1';\nimport crc8 from './crc8';\nimport crc81wire from './crc81wire';\nimport crc16 from './crc16';\nimport crc16ccitt from './crc16ccitt';\nimport crc16modbus from './crc16modbus';\nimport crc16xmodem from './crc16xmodem';\nimport crc16kermit from './crc16kermit';\nimport crc24 from './crc24';\nimport crc32 from './crc32';\nimport crcjam from './crcjam';\n\nexport { crc1 };\nexport { crc8 };\nexport { crc81wire };\nexport { crc16 };\nexport { crc16ccitt };\nexport { crc16modbus };\nexport { crc16xmodem };\nexport { crc16kermit };\nexport { crc24 };\nexport { crc32 };\nexport { crcjam };\n\nexport default {\n  crc1,\n  crc8,\n  crc81wire,\n  crc16,\n  crc16ccitt,\n  crc16modbus,\n  crc16xmodem,\n  crc16kermit,\n  crc24,\n  crc32,\n  crcjam,\n};\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\nconst crc1 = defineCrc('crc1', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = ~~previous;\n  let accum = 0;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    accum += byte;\n  }\n\n  crc += accum % 256;\n  return crc % 256;\n});\n\nexport default crc1;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Buffer } from 'buffer';\n\nconst createBuffer =\n  Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow\n    ? Buffer.from\n    : // support for Node < 5.10\n      val => new Buffer(val);\n\nexport default createBuffer;\n","export default function(model, calc) {\n  const fn = (buf, previous) => calc(buf, previous) >>> 0;\n  fn.signed = calc;\n  fn.unsigned = fn;\n  fn.model = model;\n\n  return fn;\n}\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15, 0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,\n  0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65, 0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,\n  0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5, 0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,\n  0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85, 0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,\n  0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2, 0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,\n  0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2, 0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,\n  0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32, 0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,\n  0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42, 0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,\n  0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c, 0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,\n  0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec, 0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,\n  0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c, 0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,\n  0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c, 0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,\n  0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b, 0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,\n  0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b, 0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,\n  0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb, 0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,\n  0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb, 0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc8 = defineCrc('crc-8', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = ~~previous;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] & 0xff;\n  }\n\n  return crc;\n});\n\nexport default crc8;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,\n  0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,\n  0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,\n  0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,\n  0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,\n  0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,\n  0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,\n  0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,\n  0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,\n  0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,\n  0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,\n  0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,\n  0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,\n  0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,\n  0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,\n  0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc81wire = defineCrc('dallas-1-wire', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = ~~previous;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] & 0xff;\n  }\n\n  return crc;\n});\n\nexport default crc81wire;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241,\n  0xc601, 0x06c0, 0x0780, 0xc741, 0x0500, 0xc5c1, 0xc481, 0x0440,\n  0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n  0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841,\n  0xd801, 0x18c0, 0x1980, 0xd941, 0x1b00, 0xdbc1, 0xda81, 0x1a40,\n  0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n  0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641,\n  0xd201, 0x12c0, 0x1380, 0xd341, 0x1100, 0xd1c1, 0xd081, 0x1040,\n  0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n  0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441,\n  0x3c00, 0xfcc1, 0xfd81, 0x3d40, 0xff01, 0x3fc0, 0x3e80, 0xfe41,\n  0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n  0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41,\n  0xee01, 0x2ec0, 0x2f80, 0xef41, 0x2d00, 0xedc1, 0xec81, 0x2c40,\n  0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n  0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041,\n  0xa001, 0x60c0, 0x6180, 0xa141, 0x6300, 0xa3c1, 0xa281, 0x6240,\n  0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n  0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41,\n  0xaa01, 0x6ac0, 0x6b80, 0xab41, 0x6900, 0xa9c1, 0xa881, 0x6840,\n  0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n  0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40,\n  0xb401, 0x74c0, 0x7580, 0xb541, 0x7700, 0xb7c1, 0xb681, 0x7640,\n  0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n  0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241,\n  0x9601, 0x56c0, 0x5780, 0x9741, 0x5500, 0x95c1, 0x9481, 0x5440,\n  0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n  0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841,\n  0x8801, 0x48c0, 0x4980, 0x8941, 0x4b00, 0x8bc1, 0x8a81, 0x4a40,\n  0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n  0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641,\n  0x8201, 0x42c0, 0x4380, 0x8341, 0x4100, 0x81c1, 0x8081, 0x4040\n]\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc16 = defineCrc('crc-16', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = ~~previous;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = (TABLE[(crc ^ byte) & 0xff] ^ (crc >> 8)) & 0xffff;\n  }\n\n  return crc;\n});\n\nexport default crc16;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7,\n  0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef,\n  0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n  0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de,\n  0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485,\n  0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n  0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4,\n  0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc,\n  0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n  0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b,\n  0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12,\n  0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n  0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41,\n  0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49,\n  0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n  0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78,\n  0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f,\n  0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n  0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e,\n  0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256,\n  0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n  0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,\n  0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c,\n  0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n  0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab,\n  0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3,\n  0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n  0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92,\n  0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9,\n  0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n  0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,\n  0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc16ccitt = defineCrc('ccitt', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = (TABLE[((crc >> 8) ^ byte) & 0xff] ^ (crc << 8)) & 0xffff;\n  }\n\n  return crc;\n});\n\nexport default crc16ccitt;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241,\n  0xc601, 0x06c0, 0x0780, 0xc741, 0x0500, 0xc5c1, 0xc481, 0x0440,\n  0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n  0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841,\n  0xd801, 0x18c0, 0x1980, 0xd941, 0x1b00, 0xdbc1, 0xda81, 0x1a40,\n  0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n  0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641,\n  0xd201, 0x12c0, 0x1380, 0xd341, 0x1100, 0xd1c1, 0xd081, 0x1040,\n  0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n  0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441,\n  0x3c00, 0xfcc1, 0xfd81, 0x3d40, 0xff01, 0x3fc0, 0x3e80, 0xfe41,\n  0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n  0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41,\n  0xee01, 0x2ec0, 0x2f80, 0xef41, 0x2d00, 0xedc1, 0xec81, 0x2c40,\n  0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n  0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041,\n  0xa001, 0x60c0, 0x6180, 0xa141, 0x6300, 0xa3c1, 0xa281, 0x6240,\n  0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n  0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41,\n  0xaa01, 0x6ac0, 0x6b80, 0xab41, 0x6900, 0xa9c1, 0xa881, 0x6840,\n  0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n  0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40,\n  0xb401, 0x74c0, 0x7580, 0xb541, 0x7700, 0xb7c1, 0xb681, 0x7640,\n  0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n  0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241,\n  0x9601, 0x56c0, 0x5780, 0x9741, 0x5500, 0x95c1, 0x9481, 0x5440,\n  0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n  0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841,\n  0x8801, 0x48c0, 0x4980, 0x8941, 0x4b00, 0x8bc1, 0x8a81, 0x4a40,\n  0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n  0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641,\n  0x8201, 0x42c0, 0x4380, 0x8341, 0x4100, 0x81c1, 0x8081, 0x4040\n]\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc16modbus = defineCrc('crc-16-modbus', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = (TABLE[(crc ^ byte) & 0xff] ^ (crc >> 8)) & 0xffff;\n  }\n\n  return crc;\n});\n\nexport default crc16modbus;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\nconst crc16xmodem = defineCrc('xmodem', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    let code = (crc >>> 8) & 0xff;\n\n    code ^= byte & 0xff;\n    code ^= code >>> 4;\n    crc = (crc << 8) & 0xffff;\n    crc ^= code;\n    code = (code << 5) & 0xffff;\n    crc ^= code;\n    code = (code << 7) & 0xffff;\n    crc ^= code;\n  }\n\n  return crc;\n});\n\nexport default crc16xmodem;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf,\n  0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7,\n  0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n  0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876,\n  0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd,\n  0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n  0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c,\n  0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974,\n  0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n  0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3,\n  0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a,\n  0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n  0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9,\n  0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1,\n  0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n  0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70,\n  0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7,\n  0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n  0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036,\n  0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e,\n  0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n  0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd,\n  0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134,\n  0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n  0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3,\n  0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb,\n  0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n  0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a,\n  0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1,\n  0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n  0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330,\n  0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc16kermit = defineCrc('kermit', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = (TABLE[(crc ^ byte) & 0xff] ^ (crc >> 8)) & 0xffff;\n  }\n\n  return crc;\n});\n\nexport default crc16kermit;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x000000, 0x864cfb, 0x8ad50d, 0x0c99f6, 0x93e6e1, 0x15aa1a, 0x1933ec, 0x9f7f17,\n  0xa18139, 0x27cdc2, 0x2b5434, 0xad18cf, 0x3267d8, 0xb42b23, 0xb8b2d5, 0x3efe2e,\n  0xc54e89, 0x430272, 0x4f9b84, 0xc9d77f, 0x56a868, 0xd0e493, 0xdc7d65, 0x5a319e,\n  0x64cfb0, 0xe2834b, 0xee1abd, 0x685646, 0xf72951, 0x7165aa, 0x7dfc5c, 0xfbb0a7,\n  0x0cd1e9, 0x8a9d12, 0x8604e4, 0x00481f, 0x9f3708, 0x197bf3, 0x15e205, 0x93aefe,\n  0xad50d0, 0x2b1c2b, 0x2785dd, 0xa1c926, 0x3eb631, 0xb8faca, 0xb4633c, 0x322fc7,\n  0xc99f60, 0x4fd39b, 0x434a6d, 0xc50696, 0x5a7981, 0xdc357a, 0xd0ac8c, 0x56e077,\n  0x681e59, 0xee52a2, 0xe2cb54, 0x6487af, 0xfbf8b8, 0x7db443, 0x712db5, 0xf7614e,\n  0x19a3d2, 0x9fef29, 0x9376df, 0x153a24, 0x8a4533, 0x0c09c8, 0x00903e, 0x86dcc5,\n  0xb822eb, 0x3e6e10, 0x32f7e6, 0xb4bb1d, 0x2bc40a, 0xad88f1, 0xa11107, 0x275dfc,\n  0xdced5b, 0x5aa1a0, 0x563856, 0xd074ad, 0x4f0bba, 0xc94741, 0xc5deb7, 0x43924c,\n  0x7d6c62, 0xfb2099, 0xf7b96f, 0x71f594, 0xee8a83, 0x68c678, 0x645f8e, 0xe21375,\n  0x15723b, 0x933ec0, 0x9fa736, 0x19ebcd, 0x8694da, 0x00d821, 0x0c41d7, 0x8a0d2c,\n  0xb4f302, 0x32bff9, 0x3e260f, 0xb86af4, 0x2715e3, 0xa15918, 0xadc0ee, 0x2b8c15,\n  0xd03cb2, 0x567049, 0x5ae9bf, 0xdca544, 0x43da53, 0xc596a8, 0xc90f5e, 0x4f43a5,\n  0x71bd8b, 0xf7f170, 0xfb6886, 0x7d247d, 0xe25b6a, 0x641791, 0x688e67, 0xeec29c,\n  0x3347a4, 0xb50b5f, 0xb992a9, 0x3fde52, 0xa0a145, 0x26edbe, 0x2a7448, 0xac38b3,\n  0x92c69d, 0x148a66, 0x181390, 0x9e5f6b, 0x01207c, 0x876c87, 0x8bf571, 0x0db98a,\n  0xf6092d, 0x7045d6, 0x7cdc20, 0xfa90db, 0x65efcc, 0xe3a337, 0xef3ac1, 0x69763a,\n  0x578814, 0xd1c4ef, 0xdd5d19, 0x5b11e2, 0xc46ef5, 0x42220e, 0x4ebbf8, 0xc8f703,\n  0x3f964d, 0xb9dab6, 0xb54340, 0x330fbb, 0xac70ac, 0x2a3c57, 0x26a5a1, 0xa0e95a,\n  0x9e1774, 0x185b8f, 0x14c279, 0x928e82, 0x0df195, 0x8bbd6e, 0x872498, 0x016863,\n  0xfad8c4, 0x7c943f, 0x700dc9, 0xf64132, 0x693e25, 0xef72de, 0xe3eb28, 0x65a7d3,\n  0x5b59fd, 0xdd1506, 0xd18cf0, 0x57c00b, 0xc8bf1c, 0x4ef3e7, 0x426a11, 0xc426ea,\n  0x2ae476, 0xaca88d, 0xa0317b, 0x267d80, 0xb90297, 0x3f4e6c, 0x33d79a, 0xb59b61,\n  0x8b654f, 0x0d29b4, 0x01b042, 0x87fcb9, 0x1883ae, 0x9ecf55, 0x9256a3, 0x141a58,\n  0xefaaff, 0x69e604, 0x657ff2, 0xe33309, 0x7c4c1e, 0xfa00e5, 0xf69913, 0x70d5e8,\n  0x4e2bc6, 0xc8673d, 0xc4fecb, 0x42b230, 0xddcd27, 0x5b81dc, 0x57182a, 0xd154d1,\n  0x26359f, 0xa07964, 0xace092, 0x2aac69, 0xb5d37e, 0x339f85, 0x3f0673, 0xb94a88,\n  0x87b4a6, 0x01f85d, 0x0d61ab, 0x8b2d50, 0x145247, 0x921ebc, 0x9e874a, 0x18cbb1,\n  0xe37b16, 0x6537ed, 0x69ae1b, 0xefe2e0, 0x709df7, 0xf6d10c, 0xfa48fa, 0x7c0401,\n  0x42fa2f, 0xc4b6d4, 0xc82f22, 0x4e63d9, 0xd11cce, 0x575035, 0x5bc9c3, 0xdd8538\n]\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc24 = defineCrc('crc-24', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = (TABLE[((crc >> 16) ^ byte) & 0xff] ^ (crc << 8)) & 0xffffff;\n  }\n\n  return crc;\n});\n\nexport default crc24;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba,\n  0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n  0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec,\n  0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940,\n  0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116,\n  0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a,\n  0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818,\n  0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c,\n  0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n  0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086,\n  0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4,\n  0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n  0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe,\n  0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252,\n  0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60,\n  0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04,\n  0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a,\n  0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e,\n  0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n  0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0,\n  0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6,\n  0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc32 = defineCrc('crc-32', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = previous === 0 ? 0 : ~~previous ^ -1;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n  }\n\n  return crc ^ -1;\n});\n\nexport default crc32;\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba,\n  0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n  0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec,\n  0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940,\n  0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116,\n  0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a,\n  0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818,\n  0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c,\n  0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n  0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086,\n  0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4,\n  0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n  0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe,\n  0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252,\n  0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60,\n  0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04,\n  0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a,\n  0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e,\n  0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n  0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0,\n  0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6,\n  0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crcjam = defineCrc('jam', function(buf, previous = -1) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = previous === 0 ? 0 : ~~previous;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n  }\n\n  return crc;\n});\n\nexport default crcjam;\n","\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n","const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","const Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    this.data = new TextEncoder().encode(data)\n  } else {\n    this.data = new Uint8Array(data)\n  }\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","module.exports = __parcel__import__.meta.resolve(\"czWhb\");"],"names":["$c1483b5b1305278f$var$toSJISFunction","$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$eeb0961446aae8e3$export$6100ba28696e12de","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","$092c7e998bebe629$export$185802fd694ee1f5","$092c7e998bebe629$export$f87f6982d1fd4f81","$092c7e998bebe629$export$723e4939e5a27c8","$092c7e998bebe629$export$f84e8e69fd4488a5","$5f2127839fe01a16$export$185802fd694ee1f5","$c1483b5b1305278f$export$8d4a06d3facd414b","$c1483b5b1305278f$export$b05dac13c7a35c32","$c1483b5b1305278f$export$ed1d66da50968976","$c1483b5b1305278f$export$6733b14783f975c2","$c1483b5b1305278f$export$ce5b1274f8597fa0","$d22956012916b666$export$61196ced6d74a310","$d22956012916b666$export$3a1a48c8f6ef640e","$d22956012916b666$export$3722cfe417b6ed86","$d22956012916b666$export$7f8ddf7c7c20b3cd","$d22956012916b666$export$6788812c4e6611e6","$c20e4b3185223698$export$cb05537eb8e57a83","$c20e4b3185223698$export$c39457c570f2b189","$b4836838cc492349$export$c39457c570f2b189","$1edc2624fba191d0$export$7ed115685df827af","$1edc2624fba191d0$export$6788812c4e6611e6","$1edc2624fba191d0$export$a5fd3a02c14d0b3e","$1edc2624fba191d0$export$9a9385107a518e46","$1edc2624fba191d0$export$ade754353f0dc75e","$1edc2624fba191d0$export$3ff6f04d40d9962b","$1edc2624fba191d0$export$a1c9aa9c0e8ba394","$1edc2624fba191d0$export$fe9625aaceb0e563","$7f809b8d8966b945$export$41a1fc627aca72b9","$7f809b8d8966b945$export$683d1b3e8a1a8438","$9563d144998a4c78$export$6e3a27864ab166fe","$9563d144998a4c78$export$842a2cf37af977e1","$9563d144998a4c78$export$7b8be06a973a9d05","$758ebb328fd03b3c$export$6e3a27864ab166fe","$140eee110ea3b5f9$export$55b283886ec2d3fb","$140eee110ea3b5f9$export$264e969aa7a8ff7e","$140eee110ea3b5f9$export$eee5438974ef6f0e","$21e4e023abb588c2$export$4d318981b5a83836","$21e4e023abb588c2$export$376a9ed239d6c1c8","$21e4e023abb588c2$export$8f4bf8f7eb581284","$21e4e023abb588c2$export$a4d452c2363c8e12","$21e4e023abb588c2$export$bb410559a65d3418","$21e4e023abb588c2$export$e79764af6ffaeb8d","$21e4e023abb588c2$export$1bd4c93ffb42e55e","$21e4e023abb588c2$export$f84e8e69fd4488a5","$21e4e023abb588c2$export$6788812c4e6611e6","$7f0bebb05133540b$export$1ea939691cdc45b8","$d479c387334094fb$export$a4d452c2363c8e12","$d479c387334094fb$export$9df7c29d562bab83","$d479c387334094fb$export$8f4bf8f7eb581284","$d479c387334094fb$export$4d318981b5a83836","$d479c387334094fb$export$376a9ed239d6c1c8","$1f894980312e7d2a$export$eee5438974ef6f0e","$06b6d7424b9df2df$export$571d59b505e6bb4e","$06b6d7424b9df2df$export$3004f64547af360e","$53c344a5283c422c$export$b3890eb0ae9dca99","$c890d85f31194258$export$d2312e68e1f5ad00","$c890d85f31194258$export$5cdac61cf538712e","$c890d85f31194258$export$c3a1a1f268a8142b","$c890d85f31194258$export$83136f57c739c5f3","$3112213e4acbe245$export$b3890eb0ae9dca99","$c2550c9a8f5b81d0$exports","uint8","tmp","len","length","extraBytes","parts","i","len2","push","$eeb0961446aae8e3$var$encodeChunk","start","end","output","$eeb0961446aae8e3$var$lookup","num","join","$eeb0961446aae8e3$var$revLookup","$eeb0961446aae8e3$var$Arr","Uint8Array","Array","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","charCodeAt","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Math","pow","value","c","rt","isNaN","abs","Infinity","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","setPrototypeOf","$51861dfc7ca9d588$var$Buffer","prototype","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","$51861dfc7ca9d588$var$fromString","string","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","slice","ArrayBuffer","isView","$51861dfc7ca9d588$var$fromArrayView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","SharedArrayBuffer","valueOf","from","b","$51861dfc7ca9d588$var$fromObject","obj","isBuffer","$51861dfc7ca9d588$var$checked","undefined","$51861dfc7ca9d588$var$numberIsNaN","type","isArray","data","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","array","mustMatch","arguments","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","toLowerCase","$51861dfc7ca9d588$var$slowToString","$51861dfc7ca9d588$var$hexSlice","out","$51861dfc7ca9d588$var$hexSliceLookupTable","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","ret","min","String","fromCharCode","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$utf16leSlice","bytes","res","$51861dfc7ca9d588$var$swap","$51861dfc7ca9d588$var$bidirectionalIndexOf","val","dir","$51861dfc7ca9d588$var$arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","apply","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","max","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","TYPED_ARRAY_SUPPORT","$51861dfc7ca9d588$var$typedArraySupport","proto","foo","console","error","poolSize","alloc","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","toString","toLocaleString","equals","inspect","str","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","remaining","$51861dfc7ca9d588$var$hexWrite","Number","strLen","parsed","parseInt","substr","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiToBytes","byteArray","$51861dfc7ca9d588$var$utf16leToBytes","units","hi","toJSON","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","$eeb0961446aae8e3$export$d622b2ad8d90c771","b64","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","curByte","$51861dfc7ca9d588$var$base64clean","split","src","dst","name","alphabet","table","i16","$4c0ef3140afd0271$var$createBuffer","$bad5f938a11c5999$export$2e2bcd8739ae039","model","calc","fn","previous","signed","unsigned","crc","accum","index","$08419104948e7b12$var$TABLE","Int32Array","$51aa00e9d3f50413$var$TABLE","$77b58d6d28a114a7$var$TABLE","$0d4a05e7ba704399$var$TABLE","$ba86f052c75339fe$var$TABLE","$39d8939f69cc9bad$var$crc16xmodem","byte","$03349339895ac91e$var$TABLE","$afa4629e20592799$var$TABLE","$500ffa3d3ac6b2b7$var$TABLE","$bbcfedd0f078ab9b$var$TABLE","$c2550c9a8f5b81d0$var$f","id","$c2550c9a8f5b81d0$var$serialize","xs","filter","$c2550c9a8f5b81d0$var$sanitizeTarget","options","amount","targetType","$c2550c9a8f5b81d0$var$formatTarget","numbers","toFixed","dataToCrc","crcValue","$39d8939f69cc9bad$export$2e2bcd8739ae039","toUpperCase","$092c7e998bebe629$exports","$e6419622b12b5572$exports","Promise","then","$c1483b5b1305278f$var$CODEWORDS_COUNT","version","digit","f","bit","defaultValue","level","$22a6389bcfc83921$exports","$22a6389bcfc83921$var$BitBuffer","bufIndex","put","putBit","getLengthInBits","$3c0264e2c9c64d36$exports","$3c0264e2c9c64d36$var$BitMatrix","reservedBit","row","col","reserved","xor","isReserved","posCount","$c20e4b3185223698$require$getSymbolSize","intervals","ceil","positions","reverse","coords","posLength","$b4836838cc492349$require$getSymbolSize","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","$1edc2624fba191d0$var$PenaltyScores","N1","N2","N3","N4","$1edc2624fba191d0$export$1ea939691cdc45b8","mask","points","sameCountCol","sameCountRow","lastCol","lastRow","module","last","bitsCol","bitsRow","darkCount","modulesCount","k","pattern","$1edc2624fba191d0$var$getMaskAt","maskPattern","setupFormatFunc","numPatterns","keys","bestPattern","lowerPenalty","p","penalty","$7f809b8d8966b945$var$EC_BLOCKS_TABLE","$7f809b8d8966b945$var$EC_CODEWORDS_TABLE","errorCorrectionLevel","$06a1abce65162dc0$exports","$758ebb328fd03b3c$var$EXP_TABLE","$758ebb328fd03b3c$var$LOG_TABLE","$06a1abce65162dc0$var$ReedSolomonEncoder","degree","genPoly","initialize","p1","p2","coeff","divident","divisor","result","poly","encode","paddedData","remainder","buff","$d479c387334094fb$var$numeric","$d479c387334094fb$var$kanji","$d479c387334094fb$var$byte","RegExp","$d479c387334094fb$var$TEST_KANJI","$d479c387334094fb$var$TEST_NUMERIC","$d479c387334094fb$var$TEST_ALPHANUMERIC","ccBits","mode","dataStr","test","$140eee110ea3b5f9$var$G18_BCH","dataTotalCodewordsBits","totalCodewords","usableBits","seg","ecl","$140eee110ea3b5f9$var$getBestVersionForMixedData","currentVersion","$140eee110ea3b5f9$var$getTotalBitsFromDataArray","segments","totalBits","forEach","reservedBits","getBitsLength","$140eee110ea3b5f9$var$getBestVersionForDataLength","getLength","$140eee110ea3b5f9$var$G18","$1f894980312e7d2a$var$G15_BCH","$1f894980312e7d2a$var$G15","$7a5bacf4a539441d$exports","$7a5bacf4a539441d$var$NumericData","bitBuffer","remainingNum","$f6549c884fd9ace3$exports","$f6549c884fd9ace3$var$ALPHA_NUM_CHARS","$f6549c884fd9ace3$var$AlphanumericData","$47f01312d66828cb$exports","$47f01312d66828cb$var$ByteData","TextEncoder","l","$668803520f2d7445$exports","$668803520f2d7445$var$KanjiData","kanji","$6c1abb425b529163$exports","$6c1abb425b529163$var$dijkstra","single_source_shortest_paths","graph","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","predecessors","costs","open","PriorityQueue","make","empty","pop","cost","hasOwnProperty","first_visit","extract_shortest_path_from_predecessor_list","nodes","find_path","opts","key","T","t","queue","sorter","default_sorter","sort","shift","$06b6d7424b9df2df$var$getStringByteLength","unescape","encodeURIComponent","$06b6d7424b9df2df$var$getSegments","regex","exec","$06b6d7424b9df2df$var$getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","segs","s1","s2","map","$06b6d7424b9df2df$var$getSegmentBitsLength","$06b6d7424b9df2df$var$buildSingleSegment","modesHint","bestMode","$5f2127839fe01a16$var$setupFormatInfo","matrix","mod","bits","$c890d85f31194258$var$hex2rgba","hex","hexCode","hexValue","r","g","$3112213e4acbe245$var$getColorAttrib","color","attrib","alpha","$3112213e4acbe245$var$svgCmd","cmd","$092c7e998bebe629$var$renderCanvas","renderFunc","canvas","text","cb","args","argsNum","isLastArgCb","getContext","resolve","reject","reduce","acc","$06b6d7424b9df2df$var$buildGraph","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","$06b6d7424b9df2df$var$buildNodes","path","optimizedSegs","curr","prevSeg","toSJISFunc","$5f2127839fe01a16$var$createSymbol","estimatedVersion","bestVersion","dataBits","$5f2127839fe01a16$var$createData","remainingByte","$5f2127839fe01a16$var$createCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup2","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","moduleCount","modules","$5f2127839fe01a16$var$setupFinderPattern","$5f2127839fe01a16$var$setupAlignmentPattern","$5f2127839fe01a16$var$setupVersionInfo","$5f2127839fe01a16$var$setupData","inc","bitIndex","byteIndex","dark","bind","margin","width","scale","light","rendererOpts","qrSize","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","iSrc","qrData","canvasEl","$53c344a5283c422c$var$getCanvasElement","document","createElement","ctx","image","createImageData","clearRect","height","style","putImageData","qrcodesize","bg","$3112213e4acbe245$var$qrToPath","moveBy","newRow","lineLength","svgTag","toDataURL","quality","_","$c1ce9d969bfa6909$var$xorModeBtn","getElementById","$c1ce9d969bfa6909$var$wordSpinnerModeBtn","$c1ce9d969bfa6909$var$emojiModeBtn","$c1ce9d969bfa6909$var$keywordSection","$c1ce9d969bfa6909$var$keywordInput","$c1ce9d969bfa6909$var$inputText","$c1ce9d969bfa6909$var$outputText","$c1ce9d969bfa6909$var$copyButton","$c1ce9d969bfa6909$var$clearButton","$c1ce9d969bfa6909$var$helpBtn","$c1ce9d969bfa6909$var$helpModal","$c1ce9d969bfa6909$var$closeBtn","querySelector","$c1ce9d969bfa6909$var$helpContent","$c1ce9d969bfa6909$var$supportTrigger","$c1ce9d969bfa6909$var$donateModal","$c1ce9d969bfa6909$var$donateCloseBtn","$c1ce9d969bfa6909$var$generateQrBtn","$c1ce9d969bfa6909$var$donateAmountInput","$c1ce9d969bfa6909$var$qrResultArea","$c1ce9d969bfa6909$var$qrInstruction","$c1ce9d969bfa6909$var$qrImage","$c1ce9d969bfa6909$var$qrAmountDisplay","$c1ce9d969bfa6909$var$currentMode","$c1ce9d969bfa6909$var$toastTimeout","$c1ce9d969bfa6909$var$showToast","message","duration","isError","existingToast","clearTimeout","remove","toast","textContent","className","classList","add","backgroundColor","body","appendChild","setTimeout","opacity","parentElement","$c1ce9d969bfa6909$var$ALLOWED_CHARS","$c1ce9d969bfa6909$var$DEFAULT_KEYWORD","$c1ce9d969bfa6909$var$generateShortSeed","random","padStart","$c1ce9d969bfa6909$var$createPRNG","seed","state","hash","ch","$c1ce9d969bfa6909$var$pigpenEmojis","$c1ce9d969bfa6909$var$charToEmoji","Map","$c1ce9d969bfa6909$var$emojiToChar","$c1ce9d969bfa6909$var$isAllEmoji","emojiArray","every","emoji","has","$c1ce9d969bfa6909$var$isLikelyWordspinner","startsWith","$c1ce9d969bfa6909$var$DEFAULT_PREFIX","$c1ce9d969bfa6909$var$isLikelyEncoded","$c1ce9d969bfa6909$var$updateUI","display","$c1ce9d969bfa6909$var$processCurrentMode","action","$c1ce9d969bfa6909$var$decodeThaiEng","encText","keyword","cipherText","prng","idx","randOffset","$c1ce9d969bfa6909$var$encodeThaiEng","$c1ce9d969bfa6909$var$decodeWordspinner","reversePositions","shuffledIndex","originalIndex","$c1ce9d969bfa6909$var$encodeWordspinner","chars","shuffledText","$c1ce9d969bfa6909$var$closeDonateModal","$c1ce9d969bfa6909$var$updateQrCode","parseFloat","payload","err","btn","addEventListener","newMode","querySelectorAll","modeName","navigator","clipboard","writeText","catch","focus","innerHTML","window","event","preventDefault","$a99b1c90995f445f$exports","serviceWorker","register","reg","scope"],"version":3,"file":"3in1-key-emoji-spinner.e80311a4.js.map"}