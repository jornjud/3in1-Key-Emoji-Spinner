let CACHE_NAME="3in1-spinner-cache-v2.5",urlsToCache=[".","./index.html","./style.css","./script.js","./manifest.json","./icon-192x192.png","./icon-512x512.png","./promptpay.png"];self.addEventListener("install",e=>{console.log("[Service Worker] Install event in progress."),e.waitUntil(caches.open(CACHE_NAME).then(e=>(console.log("[Service Worker] Opened cache:",CACHE_NAME),e.addAll(urlsToCache))).then(()=>(console.log("[Service Worker] All required files cached successfully!"),self.skipWaiting())).catch(e=>{console.error("[Service Worker] Caching failed during install:",e)}))}),self.addEventListener("activate",e=>{console.log("[Service Worker] Activate event in progress."),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return console.log("[Service Worker] Deleting old cache:",e),caches.delete(e)}))).then(()=>(console.log("[Service Worker] Claiming clients."),self.clients.claim())))}),self.addEventListener("fetch",e=>{e.respondWith(caches.match(e.request).then(c=>c||fetch(e.request).then(c=>{if(c&&200===c.status&&!e.request.url.includes("googleapi")&&!e.request.url.includes("script.google.com")){let r=c.clone();caches.open(CACHE_NAME).then(c=>{c.put(e.request,r)})}return c}).catch(e=>{console.error("[Service Worker] Fetch failed:",e)})))});
//# sourceMappingURL=sw.js.map
